(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[5],{"+JCI":function(e,n,t){"use strict"},"/Bp9":function(e){e.exports=JSON.parse('{"request":{"path":"/api/auth/user?autoGuestLogin=true"},"response":{"status":200,"response":{"role":"guest","allowedFeatures":["freeSearch"],"gIdentifier":"938b5dfd8d225850dac0c1810e879ce50e5a5390fe6a65d0b645e0c2a36cc14f"},"headers":{"x-powered-by":"Express","content-length":"130","content-security-policy":"frame-ancestors \'none\'","content-type":"application/json; charset=utf-8","date":"Mon, 05 Oct 2020 08:38:03 GMT","etag":"W/\\"82-mlpuYsRFEzsiWiG0Jvub7DXwyrA\\"","set-cookie":["gate.connect.sid=s%3Aruwrt7gI1EVNE8zkXdzrOb3u5aUDr54f.4gvxwSymLK7WmzQ5SwqJ%2FiO%2F8HlYe7QY5hiPqiLYG38; Path=/; Expires=Thu, 08 Oct 2020 08:38:02 GMT; HttpOnly; Secure"],"via":"1.1 spaces-router (8dd0c4f2604e), 1.1 spaces-router (8dd0c4f2604e)","x-content-type-options":"nosniff","x-frame-options":"deny","x-gateway-response-time-ms":"67","connection":"close","vary":"Accept-Encoding"}}}')},"1Hq1":function(e,n,t){"use strict";var o=t("1OyB"),a=t("vuIU"),i=t("w9hs"),l=function e(n){Object(o.a)(this,e),this.type=n},r=new(function(){function e(){Object(o.a)(this,e),this.listeners={}}return Object(a.a)(e,[{key:"addEventListener",value:function(e,n,t){e in this.listeners||(this.listeners[e]=i.comparing((function(e){return e.priority}),[]));var o=100;t&&t.priority&&(o=t.priority),this.listeners[e].insert({priority:o,callback:n})}},{key:"removeEventListener",value:function(e,n){if(e in this.listeners)for(var t=this.listeners[e],o=0,a=t.array.length;o<a;o++)if(t.array[o].callback===n)return void t.remove(t.array[o])}},{key:"dispatchEvent",value:function(e){if(!(e.type in this.listeners))return!0;for(var n=this.listeners[e.type],t=0,o=n.array.length;t<o;t++)n.array[t].callback.call(this,e);return!e.defaultPrevented}}]),e}());n.a={on:function(e,n,t){r.addEventListener(e,n,t)},off:function(e,n){r.removeEventListener(e,n)},publish:function(e,n){var t=new l(e);n&&Object.assign(t,n),r.dispatchEvent(t)},ctaParam:function(){return"/?utm_source=search-web"}}},"2SVd":function(e,n,t){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},"32ec":function(e,n,t){"use strict";n.a={getCookie:function(e,n){var t=("; "+(e?e.headers.cookie:document.cookie)).split("; "+n+"=");if(2===t.length)return t.pop().split(";").shift()},setCookie:function(e,n){document.cookie="".concat(e,"=").concat(encodeURIComponent(n),";path=/")},eraseCookie:function(e){document.cookie="".concat(e,"=; expires=Thu, 01 Jan 1970 00:00:00 GMT")}}},"3ll/":function(e){e.exports=JSON.parse('{"request":{"path":"/web/assistant/docs/codeElements?fullClassName=com.google.gson.Gson"},"response":{"status":200,"method":"GET","response":"This is the main class for using Gson. Gson is typically used by first constructing a \\nGson instance and then invoking  \\n#toJson(Object) or  \\n#fromJson(String,Class)methods on it. Gson instances are Thread-safe so you can reuse them freely across multiple \\nthreads. \\n<p>You can create a Gson instance by invoking  \\n new Gson() if the default configuration \\nis all you need. You can also use  \\nGsonBuilder to build a Gson instance with various \\nconfiguration options such as versioning support, pretty printing, custom \\nJsonSerializers,  \\nJsonDeserializers, and  \\nInstanceCreators.</p> \\n<p>Here is an example of how Gson is used for a simple Class: \\n<pre> \\nGson gson = new Gson(); // Or use new GsonBuilder().create(); \\nMyType target = new MyType(); \\nString json = gson.toJson(target); // serializes target to Json \\nMyType target2 = gson.fromJson(json, MyType.class); // deserializes json into target2 \\n</pre></p> \\n<p>If the object that your are serializing/deserializing is a  \\n ParameterizedType(i.e. contains at least one type parameter and may be an array) then you must use the \\n#toJson(Object,Type) or  \\n#fromJson(String,Type) method.  Here is an \\nexample for serializing and deserialing a  \\n ParameterizedType: \\n<pre> \\nType listType = new TypeToken&lt;List&lt;String&gt;&gt;() {}.getType(); \\nList&lt;String&gt; target = new LinkedList&lt;String&gt;(); \\ntarget.add(&quot;blah&quot;); \\nGson gson = new Gson(); \\nString json = gson.toJson(target, listType); \\nList&lt;String&gt; target2 = gson.fromJson(json, listType); \\n</pre></p> \\n<p>See the <a href=\\"https://sites.google.com/site/gson/gson-user-guide\\" target=\\"_blank\\" rel=\\"nofollow\\">Gson User Guide</a> \\nfor a more complete set of examples.</p> \\n","headers":{"x-powered-by":"Express","access-control-allow-origin":"*","content-length":"1700","content-security-policy":"frame-ancestors \'none\'","content-type":"text/html; charset=utf-8","date":"Mon, 05 Oct 2020 08:54:48 GMT","etag":"W/\\"6a4-0fRcPa1iKDLHZi6GpqtJS7Ra0Zw\\"","set-cookie":["gate.connect.sid=s%3Aruwrt7gI1EVNE8zkXdzrOb3u5aUDr54f.4gvxwSymLK7WmzQ5SwqJ%2FiO%2F8HlYe7QY5hiPqiLYG38; Path=/; Expires=Thu, 08 Oct 2020 08:54:48 GMT; HttpOnly; Secure"],"vary":"Accept-Encoding","via":"1.1 spaces-router (8dd0c4f2604e), 1.1 spaces-router (8dd0c4f2604e)","x-frame-options":"deny","x-gateway-response-time-ms":"10","x-response-time-ms":"5","connection":"close"}}}')},"5/UN":function(e){e.exports=JSON.parse('{"request":{"path":"/api/assistant/localcompletion"},"response":{"status":200,"method":"POST","response":{"notify":3,"completions":[{"predictions":["new Gson()"],"openVariables":[],"count":2170,"artifactCount":1349,"weightedScore":55499581500,"expType":"com.google.gson.Gson","ijDisplayStrings":["new Gson()"],"prologContainsMethodTarget":false,"manual":"none","probability":0.37789932761912226,"searchQuery":"com.google.gson@Gson@<init>","usedMethodsSignatures":[{"methodName":"<init>","targetType":{"fullyQualifiedName":"com.google.gson.Gson","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.Gson","parameters":[],"fullyQualifiedReturnType":"void","returnType":{"fullyQualifiedName":"void","arrayDimensions":0}}],"artifactName":["-Dagger2Demo-app","06-SixthClass-app","AIDLMusicPlayer-app","07-SeventhClass-app","AerialDream-app","Airbnb-Android-Google-Map-View-app","Android-CleanArchitecture-data","AmazMod-service","AmazMod-app","All-NBA-app"]},{"predictions":["gsonBuilder.create()"],"openVariables":["__Lcom_google_gson_GsonBuilder_1"],"count":688,"artifactCount":507,"weightedScore":554962943.3333333,"prolog":["GsonBuilder gsonBuilder;"],"expType":"com.google.gson.Gson","ijDisplayStrings":["gsonBuilder.create()"],"prologContainsMethodTarget":true,"manual":"none","probability":0.08397762835980493,"searchQuery":"com.google.gson@GsonBuilder@create","prologTypes":["com.google.gson.GsonBuilder"],"usedMethodsSignatures":[{"methodName":"create","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.Gson","returnType":{"fullyQualifiedName":"com.google.gson.Gson","arrayDimensions":0}}],"artifactName":["Android-Stocks-mobile","Daedalus-app","DebugRank-app","Feed-app","Gson-Review-app[tests]","MVPArms-arms","AsyncHttpClient-library","MVPArt-art","PetagramRestApiInstagram-app","Retrofit2-idea"]},{"predictions":["new GsonBuilder().create()"],"openVariables":[],"count":385,"artifactCount":271,"weightedScore":395553120,"expType":"com.google.gson.Gson","ijDisplayStrings":["new GsonBuilder().create()"],"prologContainsMethodTarget":false,"manual":"none","probability":0.37789932761912226,"searchQuery":"com.google.gson@GsonBuilder@create+com.google.gson@GsonBuilder@<init>","usedTypes":["com.google.gson.GsonBuilder"],"usedMethodsSignatures":[{"methodName":"create","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.Gson","returnType":{"fullyQualifiedName":"com.google.gson.Gson","arrayDimensions":0}},{"methodName":"<init>","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"void","returnType":{"fullyQualifiedName":"void","arrayDimensions":0}}],"artifactName":["Android-Orma-library[tests]","Android-Spotify-MVP-app","AndroidDemoSummary-shopcart","EasyBridge-easybridge","ChatMessagesAdapter-android-chat-message-adapter","IndexRecyclerView-app","MyDiary-app","Inspeckage-app","Open-Source-Android-Weather-App-app","MVP-Sample-app"]},{"predictions":["new GsonBuilder().setPrettyPrinting().create()"],"openVariables":[],"count":256,"artifactCount":45,"weightedScore":7822644,"expType":"com.google.gson.Gson","ijDisplayStrings":["new GsonBuilder().setPrettyPrinting().create()"],"prologContainsMethodTarget":false,"manual":"none","probability":0.11336979828573666,"searchQuery":"com.google.gson@GsonBuilder@create+com.google.gson@GsonBuilder@setPrettyPrinting+com.google.gson@GsonBuilder@<init>","usedTypes":["com.google.gson.GsonBuilder"],"usedMethodsSignatures":[{"methodName":"create","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.Gson","returnType":{"fullyQualifiedName":"com.google.gson.Gson","arrayDimensions":0}},{"methodName":"setPrettyPrinting","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.GsonBuilder","returnType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0}},{"methodName":"<init>","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"void","returnType":{"fullyQualifiedName":"void","arrayDimensions":0}}],"artifactName":["Android-TG-Bot-app","AndroidHttpCapture-app","Snapprefs-app","kcanotify-app","xnet","jsettlers.graphics","lostcities","org.sonatype.nexus.plugins","org.arquillian.reporter","BiomeTweaker"]},{"predictions":["new GsonBuilder().excludeFieldsWithoutExposeAnnotation().create()"],"openVariables":[],"count":51,"artifactCount":10,"weightedScore":79682.724,"expType":"com.google.gson.Gson","ijDisplayStrings":["new GsonBuilder().excludeFieldsWithoutExposeAnnotation().create()"],"prologContainsMethodTarget":false,"manual":"none","probability":0.012848577139050157,"searchQuery":"com.google.gson@GsonBuilder@create+com.google.gson@GsonBuilder@excludeFieldsWithoutExposeAnnotation+com.google.gson@GsonBuilder@<init>","usedTypes":["com.google.gson.GsonBuilder"],"usedMethodsSignatures":[{"methodName":"create","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.Gson","returnType":{"fullyQualifiedName":"com.google.gson.Gson","arrayDimensions":0}},{"methodName":"excludeFieldsWithoutExposeAnnotation","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.GsonBuilder","returnType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0}},{"methodName":"<init>","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"void","returnType":{"fullyQualifiedName":"void","arrayDimensions":0}}],"artifactName":["Applozic-Android-SDK-mobicommons","Hentoid-app","StallBuster-library","ZhihuDaily-app","ZhihuDaily-app[tests]","OfflineSampleApp-app","xDrip-plus-wear","xDrip-app","xDrip-plus-app","org.apache.tajo"]},{"predictions":["new GsonBuilder().disableHtmlEscaping().create()"],"openVariables":[],"count":48,"artifactCount":10,"weightedScore":47508.270000000004,"expType":"com.google.gson.Gson","ijDisplayStrings":["new GsonBuilder().disableHtmlEscaping().create()"],"prologContainsMethodTarget":false,"manual":"none","probability":0.00967422278704953,"searchQuery":"com.google.gson@GsonBuilder@create+com.google.gson@GsonBuilder@disableHtmlEscaping+com.google.gson@GsonBuilder@<init>","usedTypes":["com.google.gson.GsonBuilder"],"usedMethodsSignatures":[{"methodName":"create","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.Gson","returnType":{"fullyQualifiedName":"com.google.gson.Gson","arrayDimensions":0}},{"methodName":"disableHtmlEscaping","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.GsonBuilder","returnType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0}},{"methodName":"<init>","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"void","returnType":{"fullyQualifiedName":"void","arrayDimensions":0}}],"artifactName":["Adjust-test-library","ca.uhn.hapi.fhir","org.apache.flume","com.microsoft.azure.sdk.iot.provisioning","com.paypal.selion","com.tmobile.cloud","com.jun.timer","net.sourceforge.pmd"]},{"predictions":["new GsonBuilder().serializeNulls().create()"],"openVariables":[],"count":26,"artifactCount":11,"weightedScore":47086.912500000006,"expType":"com.google.gson.Gson","ijDisplayStrings":["new GsonBuilder().serializeNulls().create()"],"prologContainsMethodTarget":false,"manual":"none","probability":0.007205280513271264,"searchQuery":"com.google.gson@GsonBuilder@create+com.google.gson@GsonBuilder@serializeNulls+com.google.gson@GsonBuilder@<init>","usedTypes":["com.google.gson.GsonBuilder"],"usedMethodsSignatures":[{"methodName":"create","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.Gson","returnType":{"fullyQualifiedName":"com.google.gson.Gson","arrayDimensions":0}},{"methodName":"serializeNulls","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.GsonBuilder","returnType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0}},{"methodName":"<init>","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"void","returnType":{"fullyQualifiedName":"void","arrayDimensions":0}}],"artifactName":["Android-Debug-Database-debug-db","GithubAndroidSdk","Logcat-lib","rexxar-android-core","org.apache.twill","core","gax-httpjson","dev.rico","edu.neu.ccs.pyramid","org.springframework.android"]},{"predictions":["new GsonBuilder().disableHtmlEscaping().setPrettyPrinting().create()"],"openVariables":[],"count":41,"artifactCount":9,"weightedScore":39596.097,"expType":"com.google.gson.Gson","ijDisplayStrings":["new GsonBuilder().disableHtmlEscaping().setPrettyPrinting().create()"],"prologContainsMethodTarget":false,"manual":"none","probability":0.008263398630604806,"searchQuery":"com.google.gson@GsonBuilder@create+com.google.gson@GsonBuilder@setPrettyPrinting+com.google.gson@GsonBuilder@disableHtmlEscaping+com.google.gson@GsonBuilder@<init>","usedTypes":["com.google.gson.GsonBuilder"],"usedMethodsSignatures":[{"methodName":"create","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.Gson","returnType":{"fullyQualifiedName":"com.google.gson.Gson","arrayDimensions":0}},{"methodName":"setPrettyPrinting","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.GsonBuilder","returnType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0}},{"methodName":"disableHtmlEscaping","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"com.google.gson.GsonBuilder","returnType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0}},{"methodName":"<init>","targetType":{"fullyQualifiedName":"com.google.gson.GsonBuilder","arrayDimensions":0},"fullyQualifiedClassName":"com.google.gson.GsonBuilder","parameters":[],"fullyQualifiedReturnType":"void","returnType":{"fullyQualifiedName":"void","arrayDimensions":0}}],"artifactName":["Prison","net.ossindex","com.microsoft.azure.sdk.iot.provisioning","com.microsoft.azure.sdk.iot","io.parallec","org.wso2.carbon.analytics","ru.iris","com.asakusafw"]}]},"headers":{"x-powered-by":"Express","access-control-allow-origin":"*","content-length":"12013","content-security-policy":"frame-ancestors \'none\'","content-type":"application/json; charset=utf-8","date":"Mon, 05 Oct 2020 08:54:48 GMT","etag":"W/\\"2eed-itr27N9oOYMZNTZV0iUAgWlUI5E\\"","set-cookie":["gate.connect.sid=s%3Aruwrt7gI1EVNE8zkXdzrOb3u5aUDr54f.4gvxwSymLK7WmzQ5SwqJ%2FiO%2F8HlYe7QY5hiPqiLYG38; Path=/; Expires=Thu, 08 Oct 2020 08:54:48 GMT; HttpOnly; Secure"],"vary":"Accept-Encoding","via":"1.1 spaces-router (8dd0c4f2604e), 1.1 spaces-router (8dd0c4f2604e)","x-frame-options":"deny","x-gateway-response-time-ms":"44","connection":"close"}}}')},"5oMp":function(e,n,t){"use strict";e.exports=function(e,n){return n?e.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):e}},"9rSQ":function(e,n,t){"use strict";var o=t("xTJ+");function a(){this.handlers=[]}a.prototype.use=function(e,n){return this.handlers.push({fulfilled:e,rejected:n}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){o.forEach(this.handlers,(function(n){null!==n&&e(n)}))},e.exports=a},BsWD:function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));var o=t("a3WO");function a(e,n){if(e){if("string"===typeof e)return Object(o.a)(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(o.a)(e,n):void 0}}},CgaS:function(e,n,t){"use strict";var o=t("JEQr"),a=t("xTJ+"),i=t("9rSQ"),l=t("UnBK");function r(e){this.defaults=e,this.interceptors={request:new i,response:new i}}r.prototype.request=function(e){"string"===typeof e&&(e=a.merge({url:arguments[0]},arguments[1])),(e=a.merge(o,{method:"get"},this.defaults,e)).method=e.method.toLowerCase();var n=[l,void 0],t=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){n.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){n.push(e.fulfilled,e.rejected)}));n.length;)t=t.then(n.shift(),n.shift());return t},a.forEach(["delete","get","head","options"],(function(e){r.prototype[e]=function(n,t){return this.request(a.merge(t||{},{method:e,url:n}))}})),a.forEach(["post","put","patch"],(function(e){r.prototype[e]=function(n,t,o){return this.request(a.merge(o||{},{method:e,url:n,data:t}))}})),e.exports=r},DfZB:function(e,n,t){"use strict";e.exports=function(e){return function(n){return e.apply(null,n)}}},Ff2n:function(e,n,t){"use strict";function o(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}t.d(n,"a",(function(){return o}))},HMzw:function(e,n,t){"use strict";(function(e){var o=t("vDqi"),a=t.n(o),i=t("dOJh"),l=t.n(i),r=t("zCGq");n.a=function(n){if(!n)return a.a;var t={},o=n.authData&&n.authData.setCookie||n.header("Cookie");o&&(t.Cookie=o);var s=n.authData&&n.authData.authorization||n.header("Authorization");if(s&&(t.Authorization=s),n.axios)return n.axios.defaults.headers=t,n.axios;var c=a.a.create({baseURL:"".concat(n.protocol,"://").concat(n.hostname).concat("localhost"===n.hostname?":"+n.port:""),headers:t,httpAgent:new l.a,httpsAgent:new i.HttpsAgent});return"codota_test"===e.env&&Object(r.a)(c),n.axios=c,c}}).call(this,t("yLpj"))},HSsa:function(e,n,t){"use strict";e.exports=function(e,n){return function(){for(var t=new Array(arguments.length),o=0;o<t.length;o++)t[o]=arguments[o];return e.apply(n,t)}}},"HaE+":function(e,n,t){"use strict";function o(e,n,t,o,a,i,l){try{var r=e[i](l),s=r.value}catch(c){return void t(c)}r.done?n(s):Promise.resolve(s).then(o,a)}function a(e){return function(){var n=this,t=arguments;return new Promise((function(a,i){var l=e.apply(n,t);function r(e){o(l,a,i,r,s,"next",e)}function s(e){o(l,a,i,r,s,"throw",e)}r(void 0)}))}}t.d(n,"a",(function(){return a}))},JEQr:function(e,n,t){"use strict";(function(n){var o=t("xTJ+"),a=t("yK9s"),i={"Content-Type":"application/x-www-form-urlencoded"};function l(e,n){!o.isUndefined(e)&&o.isUndefined(e["Content-Type"])&&(e["Content-Type"]=n)}var r={adapter:function(){var e;return("undefined"!==typeof XMLHttpRequest||"undefined"!==typeof n)&&(e=t("tQ2B")),e}(),transformRequest:[function(e,n){return a(n,"Content-Type"),o.isFormData(e)||o.isArrayBuffer(e)||o.isBuffer(e)||o.isStream(e)||o.isFile(e)||o.isBlob(e)?e:o.isArrayBufferView(e)?e.buffer:o.isURLSearchParams(e)?(l(n,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):o.isObject(e)?(l(n,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"===typeof e)try{e=JSON.parse(e)}catch(n){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};o.forEach(["delete","get","head"],(function(e){r.headers[e]={}})),o.forEach(["post","put","patch"],(function(e){r.headers[e]=o.merge(i)})),e.exports=r}).call(this,t("8oxB"))},JuRm:function(e,n,t){"use strict";var o=t("rePB"),a=t("o0o1"),i=t.n(a),l=t("HaE+"),r=t("1OyB"),s=t("vuIU"),c=t("LvDl"),g=t("1Hq1"),u=t("obyI"),d=t.n(u),m=t("eYDE").BASENAME,p=function(){function e(){Object(r.a)(this,e),this.user=null,this.changeListeners=[]}return Object(s.a)(e,[{key:"isLoggedIn",value:function(){var e=Object(l.a)(i.a.mark((function e(){var n,t;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("/api/auth/login-status?nonGuest=true",{method:"GET",referrerPolicy:"no-referrer",credentials:"include",headers:{"Accept-Encoding":"gzip","Content-Type":"application/json",Accept:"application/json"}});case 2:if(200===(n=e.sent).status){e.next=7;break}return e.abrupt("return",!1);case 7:return e.next=9,n.json();case 9:return t=e.sent,e.abrupt("return",t.loggedIn);case 11:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}()},{key:"load",value:function(){var e=this;return fetch("/api/auth/user",{mode:"cors",method:"GET",referrerPolicy:"no-referrer",credentials:"include",headers:{"Accept-Encoding":"gzip","Content-Type":"application/json",Accept:"application/json"}}).then((function(e){if(e.status<400)return e.json();throw new Error("Unauthorized")})).then((function(n){e.user=n,e.triggerChange()}))}},{key:"guestLogin",value:function(e){var n=this;return fetch(this.guestUrl(),{mode:"cors",method:"GET",referrerPolicy:"no-referrer",credentials:"include",headers:{"Accept-Encoding":"gzip",Accept:"text/html"}}).then((function(t){if(t.status<400)return e&&n.authenticate(),t.json();throw new Error("Unauthorized")})).then((function(e){n.user=e,n.triggerChange()})).catch((function(e){throw console.error(e),e}))}},{key:"logout",value:function(){var e=this;return fetch("/api/auth/logout",{mode:"cors",method:"GET",referrerPolicy:"no-referrer",credentials:"include"}).then((function(n){200===n.status&&(e.user=null,e.triggerChange())}))}},{key:"get",value:function(){return!!this.user}},{key:"role",value:function(){return this.user?this.user.role:null}},{key:"loggedIn",value:function(){return this.user&&"guest"!==this.user.role}},{key:"url",value:function(e){return"/web/".concat("local"===e?"login":"auth","/").concat(e,"/?afterAuth=").concat(encodeURI(window.location.origin+"/afterAuth"))}},{key:"userDetails",value:function(e){e(this.user)}},{key:"changed",value:function(e){this.changeListeners.push(e),this.get()&&e(this.user)}},{key:"triggerChange",value:function(){var e=this;this.changeListeners.forEach((function(n){return n(e.user)}))}},{key:"guestUrl",value:function(){return"/api/auth/guest/tokens/new?mode=web"}},{key:"guestAllowed",value:function(){return sessionStorage.getItem("guest-allowed")}},{key:"allowGuest",value:function(){sessionStorage.setItem("guest-allowed",!0)}},{key:"authenticate",value:function(){var e=!window.codotaLocation;if(g.a.publish("going-to-login-page"),f.supports("cookie-auth"))console.log("authenticating with cookies"),window.location="/web/auth/login/?allowGuest=".concat(e,"&afterAuth=").concat(encodeURIComponent("".concat(window.location.origin,"/").concat(m)));else{console.log("authenticating without cookies");var n="client=".concat(f.type,"&mode=auto&port=").concat(f.port?f.port():7342),t=window.location.origin.includes("app.codota.com")?d.a.CODOTA_WEBSITE_URL:window.location.origin,o=encodeURIComponent("".concat(t,"/api/auth/user/tokens/new?").concat(n)),a=encodeURIComponent("".concat(t,"/api/auth/guest/tokens/new?").concat(n)),i="";this.get()&&"guest"===this.role()&&(a=encodeURIComponent("".concat(window.location.origin,"/").concat(m)),i="&guestCleanLogin=false"),this.allowGuest(),setTimeout((function(){window.location="".concat(t,"/web/auth/login/?allowGuest=").concat(e,"&afterAuth=").concat(o,"&afterGuest=").concat(a,"&cleanLogin=true").concat(i)}),10)}}}]),e}(),y=["clipboard","google-analytics","auto-guest-login","cookie-auth","seo"],h=Object(o.a)({type:"web",supports:function(e){return y.includes(e)},mixpanelToken:function(){return d.a.MIXPANEL_TOKEN},hotjar:function(){return d.a.HOTJAR},intercomApp:function(){return d.a.INTERCOM_APP},googleAnalyticsTrackingId:function(){return d.a.GA_TRACKING_ID},googleAnalyticsV4TrackingId:function(){return d.a.GA_V4_TRACKING_ID},adwordsTrackingId:function(){return d.a.ADWORDS_TRACKING_ID},googleOptimizeId:function(){return d.a.GOOGLE_OPTIMIZE_ID},tabnineWebsiteUrl:function(){return d.a.TABNINE_WEBSITE_URL},codotaWebsiteUrl:function(){return d.a.CODOTA_WEBSITE_URL},getRudderstackWriteKey:function(){return d.a.RUDDERSTACK_WRITE_KEY},getRudderstackDataPlaneUrl:function(){return d.a.RUDDERSTACK_DATA_PLANE_URL},platform:function(){},token:new p,experiments:function(){return[]},extremeDebug:function(){return!1},fullCodeMaxLinesOnStart:function(){return 5},clipboard:{copyText:function(e){if(window.clipboardData&&window.clipboardData.setData)return clipboardData.setData("Text",e);if(document.queryCommandSupported&&document.queryCommandSupported("copy")){var n=document.createElement("textarea");n.textContent=e,n.style.position="fixed",document.body.appendChild(n),n.select();try{return document.execCommand("copy")}catch(t){return console.warn("Copy to clipboard failed.",t),!1}finally{document.body.removeChild(n)}}}},getVersion:function(){},setAllowedFeaturesCallback:function(){},setUserDetailsUpdatedCallback:function(e){return this.token.changed((function(n){return e(n,!0)}))},hashToken:function(e){return e}},"fullCodeMaxLinesOnStart",(function(){return d.a.FULL_CODE_MAX_LINES_ON_START})),f=Object(c.merge)({},h);n.a=f},KQm4:function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var o=t("a3WO");var a=t("BsWD");function i(e){return function(e){if(Array.isArray(e))return Object(o.a)(e)}(e)||function(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Object(a.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},LYNF:function(e,n,t){"use strict";var o=t("OH9c");e.exports=function(e,n,t,a,i){var l=new Error(e);return o(l,n,t,a,i)}},Lmem:function(e,n,t){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},MLWZ:function(e,n,t){"use strict";var o=t("xTJ+");function a(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,t){if(!n)return e;var i;if(t)i=t(n);else if(o.isURLSearchParams(n))i=n.toString();else{var l=[];o.forEach(n,(function(e,n){null!==e&&"undefined"!==typeof e&&(o.isArray(e)?n+="[]":e=[e],o.forEach(e,(function(e){o.isDate(e)?e=e.toISOString():o.isObject(e)&&(e=JSON.stringify(e)),l.push(a(n)+"="+a(e))})))})),i=l.join("&")}return i&&(e+=(-1===e.indexOf("?")?"?":"&")+i),e}},N7SP:function(e){e.exports=JSON.parse('{"request":{"path":"/api/assistant/class/com.google.gson.Gson/popular-items?limit=10"},"response":{"status":200,"method":"GET","response":{"className":"com.google.gson.Gson","popularClasses":[{"name":"java.io.InputStream","description":"A readable source of bytes.Most clients will use input streams that read data\\nfrom the file system ("},{"name":"java.io.PrintWriter","description":"Prints formatted representations of objects to a text-output stream. This class\\nimplements all of th"},{"name":"java.security.MessageDigest","description":"Uses a one-way hash function to turn an arbitrary number of bytes into a\\nfixed-length byte sequence."},{"name":"java.util.ArrayList","description":"Resizable-array implementation of the List interface. Implements all optional\\nlist operations, and p"},{"name":"java.util.Deque","description":"A linear collection that supports element insertion and removal at both ends.\\nThe name deque is shor"},{"name":"javax.swing.JOptionPane","description":""}],"popularMethods":[{"name":"getApplicationContext","class":"android.content.Context","description":""},{"name":"findViewById","class":"android.app.Activity","description":""},{"name":"getOriginalFilename","class":"org.springframework.web.multipart.MultipartFile","description":"Return the original filename in the client\'s filesystem.This may contain path\\ninformation depending "}],"howto":[{"title":"Making http requests using okhttp","query":"okhttp3@OkHttpClient@newCall+okhttp3@Response@body","id":"making-http-requests-using-okhttp"}]},"headers":{"x-powered-by":"Express","access-control-allow-origin":"*","content-length":"1396","content-security-policy":"frame-ancestors \'none\'","content-type":"application/json; charset=utf-8","date":"Mon, 05 Oct 2020 08:54:48 GMT","etag":"W/\\"574-2Z1gIC82CDtySJpUmy7TA0L4cbk\\"","set-cookie":["gate.connect.sid=s%3Aruwrt7gI1EVNE8zkXdzrOb3u5aUDr54f.4gvxwSymLK7WmzQ5SwqJ%2FiO%2F8HlYe7QY5hiPqiLYG38; Path=/; Expires=Thu, 08 Oct 2020 08:54:48 GMT; HttpOnly; Secure"],"vary":"Accept-Encoding","via":"1.1 spaces-router (8dd0c4f2604e), 1.1 spaces-router (8dd0c4f2604e)","x-frame-options":"deny","x-gateway-response-time-ms":"43","x-response-time-ms":"35","connection":"close"}}}')},ODXe:function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));var o=t("BsWD");function a(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var t=[],o=!0,a=!1,i=void 0;try{for(var l,r=e[Symbol.iterator]();!(o=(l=r.next()).done)&&(t.push(l.value),!n||t.length!==n);o=!0);}catch(s){a=!0,i=s}finally{try{o||null==r.return||r.return()}finally{if(a)throw i}}return t}}(e,n)||Object(o.a)(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},OH9c:function(e,n,t){"use strict";e.exports=function(e,n,t,o,a){return e.config=n,t&&(e.code=t),e.request=o,e.response=a,e}},OTTw:function(e,n,t){"use strict";var o=t("xTJ+");e.exports=o.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function a(e){var o=e;return n&&(t.setAttribute("href",o),o=t.href),t.setAttribute("href",o),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=a(window.location.href),function(n){var t=o.isString(n)?a(n):n;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0}},QLaP:function(e,n,t){"use strict";e.exports=function(e,n,t,o,a,i,l,r){if(!e){var s;if(void 0===n)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[t,o,a,i,l,r],g=0;(s=new Error(n.replace(/%s/g,(function(){return c[g++]})))).name="Invariant Violation"}throw s.framesToPop=1,s}}},"Rn+g":function(e,n,t){"use strict";var o=t("LYNF");e.exports=function(e,n,t){var a=t.config.validateStatus;t.status&&a&&!a(t.status)?n(o("Request failed with status code "+t.status,t.config,null,t.request,t)):e(t)}},S8lS:function(e){e.exports=JSON.parse('{"request":{"path":"/api/assistant/inspection"},"response":{"status":200,"method":"POST","response":{},"headers":{"x-powered-by":"Express","access-control-allow-origin":"*","content-length":"2","content-security-policy":"frame-ancestors \'none\'","content-type":"application/json; charset=utf-8","date":"Mon, 05 Oct 2020 08:54:48 GMT","etag":"W/\\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\\"","set-cookie":["gate.connect.sid=s%3Aruwrt7gI1EVNE8zkXdzrOb3u5aUDr54f.4gvxwSymLK7WmzQ5SwqJ%2FiO%2F8HlYe7QY5hiPqiLYG38; Path=/; Expires=Thu, 08 Oct 2020 08:54:48 GMT; HttpOnly; Secure"],"vary":"Accept-Encoding","via":"1.1 spaces-router (8dd0c4f2604e), 1.1 spaces-router (8dd0c4f2604e)","x-frame-options":"deny","x-gateway-response-time-ms":"33","x-response-time-ms":"26","connection":"close"}}}')},UnBK:function(e,n,t){"use strict";var o=t("xTJ+"),a=t("xAGQ"),i=t("Lmem"),l=t("JEQr"),r=t("2SVd"),s=t("5oMp");function c(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return c(e),e.baseURL&&!r(e.url)&&(e.url=s(e.baseURL,e.url)),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=o.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),o.forEach(["delete","get","head","post","put","patch","common"],(function(n){delete e.headers[n]})),(e.adapter||l.adapter)(e).then((function(n){return c(e),n.data=a(n.data,n.headers,e.transformResponse),n}),(function(n){return i(n)||(c(e),n&&n.response&&(n.response.data=a(n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)}))}},Y65e:function(e,n,t){"use strict";function o(e,n,t,o,a){var i={};return Object.keys(o).forEach((function(e){i[e]=o[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,("value"in i||i.initializer)&&(i.writable=!0),i=t.slice().reverse().reduce((function(t,o){return o(e,n,t)||t}),i),a&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(a):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,n,i),i=null),i}t.d(n,"a",(function(){return o}))},YuTi:function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},a3WO:function(e,n,t){"use strict";function o(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}t.d(n,"a",(function(){return o}))},a3ss:function(e,n,t){"use strict";function o(e,n,t,o){t&&Object.defineProperty(e,n,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(o):void 0})}t.d(n,"a",(function(){return o}))},dOJh:function(e,n){function t(){}e.exports=t,e.exports.HttpsAgent=t},endd:function(e,n,t){"use strict";function o(e){this.message=e}o.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},o.prototype.__CANCEL__=!0,e.exports=o},eqyj:function(e,n,t){"use strict";var o=t("xTJ+");e.exports=o.isStandardBrowserEnv()?{write:function(e,n,t,a,i,l){var r=[];r.push(e+"="+encodeURIComponent(n)),o.isNumber(t)&&r.push("expires="+new Date(t).toGMTString()),o.isString(a)&&r.push("path="+a),o.isString(i)&&r.push("domain="+i),!0===l&&r.push("secure"),document.cookie=r.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},gZub:function(e){e.exports=JSON.parse('{"request":{"path":"/api/assistant/stories/v2"},"response":{"status":200,"method":"POST","response":{"extremelyGoodStoriesRank":100,"predictions":[{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},{"type":"class","key":"Lcom/google/gson/JsonParser;","fullNiceName":"com.google.gson.JsonParser","niceName":"JsonParser","index":4,"private":false},{"type":"class","key":"Lcom/google/gson/JsonArray;","fullNiceName":"com.google.gson.JsonArray","niceName":"JsonArray","index":5,"private":false},{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false}],"stories":[{"_id":"5ce6eb567e0344000425b152","containerKey":"Ljadx/gui/update/JadxUpdate;get(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","containerKeyHash":"81f62751435788a636fcf7415419e58d","calls":[{"position":0,"location":{"unitName":"get","unitFullKey":"Ljadx/gui/update/JadxUpdate;get(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","line":90,"col":23,"length":17},"sourceLine":"\\t\\t\\tReader reader = new InputStreamReader(con.getInputStream(), StandardCharsets.UTF_8);","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"get","unitFullKey":"Ljadx/gui/update/JadxUpdate;get(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","line":87,"col":50,"length":14},"sourceLine":"\\t\\tHttpURLConnection con = (HttpURLConnection) obj.openConnection();","methodKey":"Ljava/net/URL;openConnection()Ljava/net/URLConnection;","frequency":4803},{"position":0,"location":{"unitName":"get","unitFullKey":"Ljadx/gui/update/JadxUpdate;get(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","line":88,"col":6,"length":16},"sourceLine":"\\t\\tcon.setRequestMethod(\\"GET\\");","methodKey":"Ljava/net/HttpURLConnection;setRequestMethod(Ljava/lang/String;)V","frequency":1720},{"position":0,"location":{"unitName":"get","unitFullKey":"Ljadx/gui/update/JadxUpdate;get(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","line":89,"col":10,"length":15},"sourceLine":"\\t\\tif (con.getResponseCode() == 200) {","methodKey":"Ljava/net/HttpURLConnection;getResponseCode()I","frequency":1916},{"position":0,"location":{"unitName":"get","unitFullKey":"Ljadx/gui/update/JadxUpdate;get(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","line":90,"col":45,"length":14},"sourceLine":"\\t\\t\\tReader reader = new InputStreamReader(con.getInputStream(), StandardCharsets.UTF_8);","methodKey":"Ljava/net/HttpURLConnection;getInputStream()Ljava/io/InputStream;","frequency":2058},{"position":0,"location":{"unitName":"get","unitFullKey":"Ljadx/gui/update/JadxUpdate;get(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","line":91,"col":15,"length":8},"sourceLine":"\\t\\t\\treturn GSON.fromJson(reader, type);","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"get","unitFullKey":"Ljadx/gui/update/JadxUpdate;get(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","line":86,"col":16,"length":3},"sourceLine":"\\t\\tURL obj = new URL(url);","methodKey":"Ljava/net/URL;<init>(Ljava/lang/String;)V","frequency":9248}],"title":null,"language":"java","code":{"startLine":85,"full":"\\tprivate static <T> T get(String url, Type type) throws IOException {\\n\\t\\tURL obj = new URL(url);\\n\\t\\tHttpURLConnection con = (HttpURLConnection) obj.openConnection();\\n\\t\\tcon.setRequestMethod(\\"GET\\");\\n\\t\\tif (con.getResponseCode() == 200) {\\n\\t\\t\\tReader reader = new InputStreamReader(con.getInputStream(), StandardCharsets.UTF_8);\\n\\t\\t\\treturn GSON.fromJson(reader, type);\\n\\t\\t}\\n\\t\\treturn null;\\n\\t}\\n}"},"meta":{"license":"\\"apache-2.0\\"","groupId":null,"artifactId":null,"homepage":null,"description":"\\"Dex to Java decompiler\\"","origin":"github","github":{"stars":"17273","repo":"skylot/jadx"},"zscore":51.548572732386404},"date":"2019-05-23T18:49:58.613Z","active":false,"origin":{"rawSourceId":"5c7889a3df79be0001eaa2a8","compilationResultId":"5c78896adf79be0001ea94ed"},"artifactName":"jadx-gui","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"jadx/gui/update/JadxUpdate","highlight":{"code":[],"keyText":[]},"computed":{"rank":1551.2861,"nonEmptyLineCount":11,"esRank":27.755889921785787},"tokens":[{"kind":"token","type":"keyword","content":"private","locations":[{"line":85,"col":1,"length":7}]},{"kind":"token","type":"keyword","content":"static","locations":[{"line":85,"col":9,"length":6}]},{"kind":"token","type":"keyword","content":"throws","locations":[{"line":85,"col":49,"length":6}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":86,"col":12,"length":3}]},{"kind":"token","type":"string","content":"\\"GET\\"","locations":[{"line":88,"col":23,"length":5}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":89,"col":2,"length":2}]},{"kind":"token","type":"number","content":"200","locations":[{"line":89,"col":31,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":90,"col":19,"length":3}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":91,"col":3,"length":6}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":93,"col":2,"length":6}]}],"private":false},{"_id":"5ce6dac12fd3800004e36ae4","containerKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","containerKeyHash":"57cc185b735b06a8e1c7ff80b3e0274f","calls":[{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":46,"col":34,"length":10},"sourceLine":"        JsonObject jsonRoot = new JsonObject();","methodKey":"Lcom/google/gson/JsonObject;<init>()V","frequency":702,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":45,"col":58,"length":6},"sourceLine":"        Gson gson = new GsonBuilder().setPrettyPrinting().create();","methodKey":"Lcom/google/gson/GsonBuilder;create()Lcom/google/gson/Gson;","frequency":1073,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},"predictionIndex":1},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":45,"col":38,"length":17},"sourceLine":"        Gson gson = new GsonBuilder().setPrettyPrinting().create();","methodKey":"Lcom/google/gson/GsonBuilder;setPrettyPrinting()Lcom/google/gson/GsonBuilder;","frequency":366,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},"predictionIndex":1},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":49,"col":37,"length":13},"sourceLine":"            jsonRoot.add(\\"file\\", new JsonPrimitive(file.toString()));","methodKey":"Lcom/google/gson/JsonPrimitive;<init>(Ljava/lang/String;)V","frequency":440},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":53,"col":53,"length":11},"sourceLine":"            jsonRoot.add(model.name().toLowerCase(), tableToJson(model.table(), gson));","methodKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;tableToJson(Lcom/google/common/collect/Table;Lcom/google/gson/Gson;)Lcom/google/gson/JsonArray;","frequency":1},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":49,"col":56,"length":8},"sourceLine":"            jsonRoot.add(\\"file\\", new JsonPrimitive(file.toString()));","methodKey":"Ljava/nio/file/Path;toString()Ljava/lang/String;","frequency":2938},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":53,"col":31,"length":4},"sourceLine":"            jsonRoot.add(model.name().toLowerCase(), tableToJson(model.table(), gson));","methodKey":"Linfo/ata4/disunity/cli/util/TableModel;name()Ljava/lang/String;","frequency":1},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":53,"col":71,"length":5},"sourceLine":"            jsonRoot.add(model.name().toLowerCase(), tableToJson(model.table(), gson));","methodKey":"Linfo/ata4/disunity/cli/util/TableModel;table()Lcom/google/common/collect/Table;","frequency":1},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":49,"col":21,"length":3},"sourceLine":"            jsonRoot.add(\\"file\\", new JsonPrimitive(file.toString()));","methodKey":"Lcom/google/gson/JsonObject;add(Ljava/lang/String;Lcom/google/gson/JsonElement;)V","frequency":564,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":53,"col":21,"length":3},"sourceLine":"            jsonRoot.add(model.name().toLowerCase(), tableToJson(model.table(), gson));","methodKey":"Lcom/google/gson/JsonObject;add(Ljava/lang/String;Lcom/google/gson/JsonElement;)V","frequency":564,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":45,"col":24,"length":11},"sourceLine":"        Gson gson = new GsonBuilder().setPrettyPrinting().create();","methodKey":"Lcom/google/gson/GsonBuilder;<init>()V","frequency":1034,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},"predictionIndex":1},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":52,"col":15,"length":7},"sourceLine":"        models.forEach(model -> {","methodKey":"Ljava/util/Collection;forEach(Ljava/util/function/Consumer;)V","frequency":2082},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":56,"col":13,"length":6},"sourceLine":"        gson.toJson(jsonRoot, out);","methodKey":"Lcom/google/gson/Gson;toJson(Lcom/google/gson/JsonElement;Ljava/lang/Appendable;)V","frequency":1991,"kind":"must"},{"position":0,"location":{"unitName":"print","unitFullKey":"Linfo/ata4/disunity/cli/util/JsonTablePrinter;print(Ljava/util/Collection;)V","line":53,"col":38,"length":11},"sourceLine":"            jsonRoot.add(model.name().toLowerCase(), tableToJson(model.table(), gson));","methodKey":"Ljava/lang/String;toLowerCase()Ljava/lang/String;","frequency":17582}],"title":null,"language":"java","code":{"startLine":43,"full":"    @Override\\n    public void print(Collection<TableModel> models) {\\n        Gson gson = new GsonBuilder().setPrettyPrinting().create();\\n        JsonObject jsonRoot = new JsonObject();\\n\\n        if (file != null) {\\n            jsonRoot.add(\\"file\\", new JsonPrimitive(file.toString()));\\n        }\\n\\n        models.forEach(model -> {\\n            jsonRoot.add(model.name().toLowerCase(), tableToJson(model.table(), gson));\\n        });\\n\\n        gson.toJson(jsonRoot, out);\\n    }\\n"},"meta":{"license":"\\"unlicense\\"","groupId":"info.ata4.disunity","artifactId":"disunity-cli","homepage":null,"description":"\\"An experimental toolset for Unity asset and asset bundle files.\\"","url":"https://github.com/ata4/disunity/tree/master/disunity-cli/src/main/java/info/ata4/disunity/cli/util/JsonTablePrinter.java","origin":"github","github":{"stars":"2236","repo":"ata4/disunity"},"zscore":6.158948436542165},"date":"2019-05-23T17:39:13.541Z","active":false,"origin":{"rawSourceId":"5c78856c96b4b300017c431f","compilationResultId":"5c78856bdf79be0001e9fea1"},"artifactName":"info.ata4.disunity:disunity-cli","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"info/ata4/disunity/cli/util/JsonTablePrinter","highlight":{"code":[],"keyText":[]},"computed":{"rank":1112.5798,"nonEmptyLineCount":12,"esRank":13.444559996750773},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":44,"col":4,"length":6}]},{"kind":"token","type":"keyword","content":"void","locations":[{"line":44,"col":11,"length":4}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":45,"col":20,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":46,"col":30,"length":3}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":48,"col":8,"length":2}]},{"kind":"token","type":"string","content":"\\"file\\"","locations":[{"line":49,"col":25,"length":6}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":49,"col":33,"length":3}]}],"private":false},{"_id":"5ce699c92fd3800004aafe7c","containerKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","containerKeyHash":"4b578d347707fa668d6f13b7c44348d4","calls":[{"position":0,"location":{"unitName":"doInBackground","unitFullKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","line":159,"col":34,"length":3},"sourceLine":"                    recommendList.add(GedanInfo);","methodKey":"Ljava/util/ArrayList;add(Ljava/lang/Object;)Z","frequency":14237},{"position":0,"location":{"unitName":"doInBackground","unitFullKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","line":145,"col":45,"length":20},"sourceLine":"                JsonObject result = HttpUtil.getResposeJsonObject(BMA.GeDan.geDan(1, 10));","methodKey":"Lcom/wm/remusic/net/HttpUtil;getResposeJsonObject(Ljava/lang/String;)Lcom/google/gson/JsonObject;","frequency":1},{"position":0,"location":{"unitName":"doInBackground","unitFullKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","line":155,"col":34,"length":4},"sourceLine":"                int plen = pArray.size();","methodKey":"Lcom/google/gson/JsonArray;size()I","frequency":361,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonArray;","fullNiceName":"com.google.gson.JsonArray","niceName":"JsonArray","index":5,"private":false},"predictionIndex":5},{"position":0,"location":{"unitName":"doInBackground","unitFullKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","line":158,"col":63,"length":3},"sourceLine":"                    GedanInfo GedanInfo = gson.fromJson(pArray.get(i), GedanInfo.class);","methodKey":"Lcom/google/gson/JsonArray;get(I)Lcom/google/gson/JsonElement;","frequency":337,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonArray;","fullNiceName":"com.google.gson.JsonArray","niceName":"JsonArray","index":5,"private":false},"predictionIndex":5},{"position":0,"location":{"unitName":"doInBackground","unitFullKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","line":144,"col":27,"length":4},"sourceLine":"                gson = new Gson();","methodKey":"Lcom/google/gson/Gson;<init>()V","frequency":1346,"kind":"must"},{"position":0,"location":{"unitName":"doInBackground","unitFullKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","line":150,"col":57,"length":14},"sourceLine":"                JsonArray pArray = result.get(\\"content\\").getAsJsonArray();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonArray()Lcom/google/gson/JsonArray;","frequency":476,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"doInBackground","unitFullKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","line":150,"col":42,"length":3},"sourceLine":"                JsonArray pArray = result.get(\\"content\\").getAsJsonArray();","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"doInBackground","unitFullKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","line":158,"col":47,"length":8},"sourceLine":"                    GedanInfo GedanInfo = gson.fromJson(pArray.get(i), GedanInfo.class);","methodKey":"Lcom/google/gson/Gson;fromJson(Lcom/google/gson/JsonElement;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"doInBackground","unitFullKey":"Lcom/wm/remusic/fragmentnet/AllPlaylistFragment$2;doInBackground([Ljava/lang/Void;)Ljava/lang/Void;","line":145,"col":76,"length":5},"sourceLine":"                JsonObject result = HttpUtil.getResposeJsonObject(BMA.GeDan.geDan(1, 10));","methodKey":"Lcom/wm/remusic/net/BMA$GeDan;geDan(II)Ljava/lang/String;","frequency":1}],"title":null,"language":"java","code":{"startLine":142,"full":"            @Override\\n            protected Void doInBackground(Void... params) {\\n                gson = new Gson();\\n                JsonObject result = HttpUtil.getResposeJsonObject(BMA.GeDan.geDan(1, 10));\\n                if (result == null) {\\n                    return null;\\n                }\\n                //\u70ed\u95e8\u6b4c\u5355\\n                JsonArray pArray = result.get(\\"content\\").getAsJsonArray();\\n                if (pArray == null) {\\n                    return null;\\n                }\\n\\n                int plen = pArray.size();\\n\\n                for (int i = 0; i < plen; i++) {\\n                    GedanInfo GedanInfo = gson.fromJson(pArray.get(i), GedanInfo.class);\\n                    recommendList.add(GedanInfo);\\n                }\\n\\n                return null;\\n            }\\n"},"meta":{"license":null,"groupId":null,"artifactId":null,"homepage":null,"description":"\\"?????? ????netease  android?????? ?? ??\\"","origin":"github","github":{"stars":"4921","repo":"aa112901/remusic"},"zscore":6.953262903804757},"date":"2019-05-23T13:02:01.096Z","active":false,"origin":{"rawSourceId":"5c7cabfcac38dc0001e3e98d","compilationResultId":"5c7cabfd2ef5570001deecfc"},"artifactName":"remusic-app","codePack":"codepack_gh_android_03032019","fullyQualifiedName":"com/wm/remusic/fragmentnet/AllPlaylistFragment","highlight":{"code":[],"keyText":[]},"computed":{"rank":904.33417,"nonEmptyLineCount":19,"esRank":13.678356308225679},"tokens":[{"kind":"token","type":"keyword","content":"protected","locations":[{"line":143,"col":12,"length":9}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":144,"col":23,"length":3}]},{"kind":"token","type":"number","content":"1","locations":[{"line":145,"col":82,"length":1}]},{"kind":"token","type":"number","content":"10","locations":[{"line":145,"col":85,"length":2}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":146,"col":16,"length":2}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":147,"col":20,"length":6}]},{"kind":"token","type":"comment","content":"//\u70ed\u95e8\u6b4c\u5355","locations":[{"line":149,"col":16,"length":6}]},{"kind":"token","type":"string","content":"\\"content\\"","locations":[{"line":150,"col":46,"length":9}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":151,"col":16,"length":2}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":152,"col":20,"length":6}]},{"kind":"token","type":"keyword","content":"int","locations":[{"line":155,"col":16,"length":3}]},{"kind":"token","type":"keyword","content":"for","locations":[{"line":157,"col":16,"length":3}]},{"kind":"token","type":"keyword","content":"int","locations":[{"line":157,"col":21,"length":3}]},{"kind":"token","type":"number","content":"0","locations":[{"line":157,"col":29,"length":1}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":158,"col":81,"length":5}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":162,"col":16,"length":6}]}],"private":false},{"_id":"5ce6e90c2fd3800004f3e22f","containerKey":"Lorg/apache/dubbo/metadata/definition/ServiceDefinitionBuilder;schema(Ljava/lang/Class;)Ljava/lang/String;","containerKeyHash":"e0bf2156f3088c6a1b0ac788d07e21e0","calls":[{"position":0,"location":{"unitName":"schema","unitFullKey":"Lorg/apache/dubbo/metadata/definition/ServiceDefinitionBuilder;schema(Ljava/lang/Class;)Ljava/lang/String;","line":98,"col":31,"length":5},"sourceLine":"        ServiceDefinition sd = build(clazz);","methodKey":"Lorg/apache/dubbo/metadata/definition/ServiceDefinitionBuilder;build(Ljava/lang/Class;)Lorg/apache/dubbo/metadata/definition/model/ServiceDefinition;","frequency":2},{"position":0,"location":{"unitName":"schema","unitFullKey":"Lorg/apache/dubbo/metadata/definition/ServiceDefinitionBuilder;schema(Ljava/lang/Class;)Ljava/lang/String;","line":99,"col":24,"length":4},"sourceLine":"        Gson gson = new Gson();","methodKey":"Lcom/google/gson/Gson;<init>()V","frequency":1346,"kind":"must"},{"position":0,"location":{"unitName":"schema","unitFullKey":"Lorg/apache/dubbo/metadata/definition/ServiceDefinitionBuilder;schema(Ljava/lang/Class;)Ljava/lang/String;","line":100,"col":20,"length":6},"sourceLine":"        return gson.toJson(sd);","methodKey":"Lcom/google/gson/Gson;toJson(Ljava/lang/Object;)Ljava/lang/String;","frequency":1991,"kind":"must"}],"title":null,"language":"java","code":{"startLine":92,"full":"    /**\\n     * Describe a Java interface in Json schema.\\n     *\\n     * @return Service description\\n     */\\n    public static String schema(final Class<?> clazz) {\\n        ServiceDefinition sd = build(clazz);\\n        Gson gson = new Gson();\\n        return gson.toJson(sd);\\n    }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":"org.apache.dubbo","artifactId":"dubbo-metadata-definition","homepage":"\\"http://dubbo.incubator.apache.org\\"","description":"\\"Apache Dubbo (incubating) is a high-performance, java based, open source RPC framework.\\"","url":"https://github.com/apache/incubator-dubbo/tree/master/dubbo-metadata-report/dubbo-metadata-definition/src/main/java/org/apache/dubbo/metadata/definition/ServiceDefinitionBuilder.java","origin":"github","github":{"stars":"24300","repo":"apache/incubator-dubbo"},"zscore":72.7597777551235},"date":"2019-05-23T18:40:12.134Z","active":false,"origin":{"rawSourceId":"5c7814b3df79be0001de727d","compilationResultId":"5c7814c7df79be0001de7ac1"},"artifactName":"org.apache.dubbo:dubbo-metadata-definition","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"org/apache/dubbo/metadata/definition/ServiceDefinitionBuilder","highlight":{"code":[],"keyText":[]},"computed":{"rank":1673.422,"nonEmptyLineCount":10,"esRank":32.093210349701664},"tokens":[{"kind":"token","type":"comment","content":"/**\\n     * Describe a Java interface in Json schema.\\n     *\\n     * @return Service description\\n     */","locations":[{"line":92,"col":4,"length":3},{"line":93,"col":0,"length":48},{"line":94,"col":0,"length":6},{"line":95,"col":0,"length":34},{"line":96,"col":0,"length":7}]},{"kind":"token","type":"keyword","content":"public","locations":[{"line":97,"col":4,"length":6}]},{"kind":"token","type":"keyword","content":"static","locations":[{"line":97,"col":11,"length":6}]},{"kind":"token","type":"keyword","content":"final","locations":[{"line":97,"col":32,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":99,"col":20,"length":3}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":100,"col":8,"length":6}]}],"private":false},{"_id":"5ce6b8db7e03440004f096c1","containerKey":"Lcom/ctrip/framework/apollo/mockserver/EmbeddedApollo;mockLongPollBody(Ljava/lang/String;)Ljava/lang/String;","containerKeyHash":"def1a6573a3547fe24f6b06da15e8c6e","calls":[{"position":0,"location":{"unitName":"mockLongPollBody","unitFullKey":"Lcom/ctrip/framework/apollo/mockserver/EmbeddedApollo;mockLongPollBody(Ljava/lang/String;)Ljava/lang/String;","line":127,"col":57,"length":16},"sourceLine":"          .add(new ApolloConfigNotification(notification.getNamespaceName(), notification.getNotificationId() + 1));","methodKey":"Lcom/ctrip/framework/apollo/core/dto/ApolloConfigNotification;getNamespaceName()Ljava/lang/String;","frequency":3},{"position":0,"location":{"unitName":"mockLongPollBody","unitFullKey":"Lcom/ctrip/framework/apollo/mockserver/EmbeddedApollo;mockLongPollBody(Ljava/lang/String;)Ljava/lang/String;","line":127,"col":90,"length":17},"sourceLine":"          .add(new ApolloConfigNotification(notification.getNamespaceName(), notification.getNotificationId() + 1));","methodKey":"Lcom/ctrip/framework/apollo/core/dto/ApolloConfigNotification;getNotificationId()J","frequency":3},{"position":0,"location":{"unitName":"mockLongPollBody","unitFullKey":"Lcom/ctrip/framework/apollo/mockserver/EmbeddedApollo;mockLongPollBody(Ljava/lang/String;)Ljava/lang/String;","line":127,"col":11,"length":3},"sourceLine":"          .add(new ApolloConfigNotification(notification.getNamespaceName(), notification.getNotificationId() + 1));","methodKey":"Ljava/util/List;add(Ljava/lang/Object;)Z","frequency":48348},{"position":0,"location":{"unitName":"mockLongPollBody","unitFullKey":"Lcom/ctrip/framework/apollo/mockserver/EmbeddedApollo;mockLongPollBody(Ljava/lang/String;)Ljava/lang/String;","line":127,"col":19,"length":24},"sourceLine":"          .add(new ApolloConfigNotification(notification.getNamespaceName(), notification.getNotificationId() + 1));","methodKey":"Lcom/ctrip/framework/apollo/core/dto/ApolloConfigNotification;<init>(Ljava/lang/String;J)V","frequency":3},{"position":0,"location":{"unitName":"mockLongPollBody","unitFullKey":"Lcom/ctrip/framework/apollo/mockserver/EmbeddedApollo;mockLongPollBody(Ljava/lang/String;)Ljava/lang/String;","line":123,"col":59,"length":8},"sourceLine":"    List<ApolloConfigNotification> oldNotifications = gson.fromJson(notificationsStr, notificationType);","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"mockLongPollBody","unitFullKey":"Lcom/ctrip/framework/apollo/mockserver/EmbeddedApollo;mockLongPollBody(Ljava/lang/String;)Ljava/lang/String;","line":129,"col":16,"length":6},"sourceLine":"    return gson.toJson(newNotifications);","methodKey":"Lcom/google/gson/Gson;toJson(Ljava/lang/Object;)Ljava/lang/String;","frequency":1991,"kind":"must"},{"position":0,"location":{"unitName":"mockLongPollBody","unitFullKey":"Lcom/ctrip/framework/apollo/mockserver/EmbeddedApollo;mockLongPollBody(Ljava/lang/String;)Ljava/lang/String;","line":124,"col":58,"length":9},"sourceLine":"    List<ApolloConfigNotification> newNotifications = new ArrayList<>();","methodKey":"Ljava/util/ArrayList;<init>()V","frequency":47939}],"title":null,"language":"java","code":{"startLine":122,"full":"  private String mockLongPollBody(String notificationsStr) {\\n    List<ApolloConfigNotification> oldNotifications = gson.fromJson(notificationsStr, notificationType);\\n    List<ApolloConfigNotification> newNotifications = new ArrayList<>();\\n    for (ApolloConfigNotification notification : oldNotifications) {\\n      newNotifications\\n          .add(new ApolloConfigNotification(notification.getNamespaceName(), notification.getNotificationId() + 1));\\n    }\\n    return gson.toJson(newNotifications);\\n  }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":"com.ctrip.framework.apollo","artifactId":"apollo-mockserver","homepage":null,"description":"\\"Apollo????????????????????????????????????????????????????????????????????????????????????????????\\"","url":"https://github.com/ctripcorp/apollo/tree/master/apollo-mockserver/src/main/java/com/ctrip/framework/apollo/mockserver/EmbeddedApollo.java","origin":"github","github":{"stars":"11267","repo":"ctripcorp/apollo"},"zscore":33.4192860714274},"date":"2019-05-23T15:14:35.198Z","active":false,"origin":{"rawSourceId":"5c788890e70f870001a42782","compilationResultId":"5c788890e70f870001a42787"},"artifactName":"com.ctrip.framework.apollo:apollo-mockserver","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"com/ctrip/framework/apollo/mockserver/EmbeddedApollo","highlight":{"code":[],"keyText":[]},"computed":{"rank":1433.8933,"nonEmptyLineCount":9,"esRank":23.482622198263734},"tokens":[{"kind":"token","type":"keyword","content":"private","locations":[{"line":122,"col":2,"length":7}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":124,"col":54,"length":3}]},{"kind":"token","type":"keyword","content":"for","locations":[{"line":125,"col":4,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":127,"col":15,"length":3}]},{"kind":"token","type":"number","content":"1","locations":[{"line":127,"col":112,"length":1}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":129,"col":4,"length":6}]}],"private":false},{"_id":"5ce6db12e594670004fe2da0","containerKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob;deserialize(Ljava/lang/String;)Ljava/util/List;","containerKeyHash":"84bfc230f564be907f50a9fa132d2902","calls":[{"position":0,"location":{"unitName":"deserialize","unitFullKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob;deserialize(Ljava/lang/String;)Ljava/util/List;","line":52,"col":6,"length":7},"sourceLine":"    }.getType());","methodKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob$1;getType()Ljava/lang/reflect/Type;","frequency":2},{"position":0,"location":{"unitName":"deserialize","unitFullKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob;deserialize(Ljava/lang/String;)Ljava/util/List;","line":51,"col":22,"length":8},"sourceLine":"    return new Gson().fromJson(jobsJson, new TypeToken<ArrayList<SimpleProducerJob>>() {","methodKey":"Lcom/google/gson/Gson;fromJson(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"deserialize","unitFullKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob;deserialize(Ljava/lang/String;)Ljava/util/List;","line":50,"col":54,"length":14},"sourceLine":"    JsonArray jobsJson = new JsonParser().parse(jobs).getAsJsonArray();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonArray()Lcom/google/gson/JsonArray;","frequency":476,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"deserialize","unitFullKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob;deserialize(Ljava/lang/String;)Ljava/util/List;","line":50,"col":29,"length":10},"sourceLine":"    JsonArray jobsJson = new JsonParser().parse(jobs).getAsJsonArray();","methodKey":"Lcom/google/gson/JsonParser;<init>()V","frequency":611,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonParser;","fullNiceName":"com.google.gson.JsonParser","niceName":"JsonParser","index":4,"private":false},"predictionIndex":4},{"position":0,"location":{"unitName":"deserialize","unitFullKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob;deserialize(Ljava/lang/String;)Ljava/util/List;","line":51,"col":15,"length":4},"sourceLine":"    return new Gson().fromJson(jobsJson, new TypeToken<ArrayList<SimpleProducerJob>>() {","methodKey":"Lcom/google/gson/Gson;<init>()V","frequency":1346,"kind":"must"},{"position":0,"location":{"unitName":"deserialize","unitFullKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob;deserialize(Ljava/lang/String;)Ljava/util/List;","line":50,"col":42,"length":5},"sourceLine":"    JsonArray jobsJson = new JsonParser().parse(jobs).getAsJsonArray();","methodKey":"Lcom/google/gson/JsonParser;parse(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":713,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonParser;","fullNiceName":"com.google.gson.JsonParser","niceName":"JsonParser","index":4,"private":false},"predictionIndex":4},{"position":0,"location":{"unitName":"deserialize","unitFullKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob;deserialize(Ljava/lang/String;)Ljava/util/List;","line":47,"col":36,"length":7},"sourceLine":"    if (jobs == null || jobs.trim().isEmpty()) {","methodKey":"Ljava/lang/String;isEmpty()Z","frequency":15729},{"position":0,"location":{"unitName":"deserialize","unitFullKey":"Lorg/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob;deserialize(Ljava/lang/String;)Ljava/util/List;","line":47,"col":29,"length":4},"sourceLine":"    if (jobs == null || jobs.trim().isEmpty()) {","methodKey":"Ljava/lang/String;trim()Ljava/lang/String;","frequency":21689}],"title":null,"language":"java","code":{"startLine":46,"full":"  public static List<ProducerJob> deserialize(String jobs) {\\n    if (jobs == null || jobs.trim().isEmpty()) {\\n      jobs = \\"[]\\";\\n    }\\n    JsonArray jobsJson = new JsonParser().parse(jobs).getAsJsonArray();\\n    return new Gson().fromJson(jobsJson, new TypeToken<ArrayList<SimpleProducerJob>>() {\\n    }.getType());\\n  }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":null,"artifactId":null,"homepage":"\\"https://github.com/linkedin/gobblin/wiki\\"","description":"\\"Gobblin is a distributed big data integration framework (ingestion, replication, compliance, retention)  for batch and streaming systems. Gobblin features integrations with Apache Hadoop, Apache Kafka, Salesforce, S3, MySQL, Google etc.\\"","origin":"github","github":{"stars":"1480","repo":"apache/incubator-gobblin"},"zscore":3.8769403253725003},"date":"2019-05-23T17:40:34.593Z","active":false,"origin":{"rawSourceId":"5c76b96951856b00011a5e96","compilationResultId":"5c76b95a49efcb00015347fa"},"artifactName":"google-ingestion","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"org/apache/gobblin/ingestion/google/webmaster/SimpleProducerJob","highlight":{"code":[],"keyText":[]},"computed":{"rank":1047.0627,"nonEmptyLineCount":8,"esRank":11.960531473986945},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":46,"col":2,"length":6}]},{"kind":"token","type":"keyword","content":"static","locations":[{"line":46,"col":9,"length":6}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":47,"col":4,"length":2}]},{"kind":"token","type":"string","content":"\\"[]\\"","locations":[{"line":48,"col":13,"length":4}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":50,"col":25,"length":3}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":51,"col":4,"length":6}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":51,"col":11,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":51,"col":41,"length":3}]}],"private":false},{"_id":"5ce6bceb2fd3800004c9623d","containerKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","containerKeyHash":"337c7a38b4ea0de557cea1f2abedfcf4","calls":[{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":400,"col":63,"length":23},"sourceLine":"                    foreignKeys.add((E) PropertyAccessorHelper.fromSourceToTargetClass(columnJavaType, String.class,","methodKey":"Lcom/impetus/kundera/property/PropertyAccessorHelper;fromSourceToTargetClass(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","frequency":13},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":375,"col":45,"length":12},"sourceLine":"            String q = \\"key=\\" + CouchDBUtils.appendQuotes(pKeyColumnValue);","methodKey":"Lcom/impetus/client/couchdb/CouchDBUtils;appendQuotes(Ljava/lang/Object;)Ljava/lang/Object;","frequency":2},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":407,"col":16,"length":5},"sourceLine":"            log.error(\\"Error while fetching column by id {}, Caused by {}.\\", pKeyColumnValue, e);","methodKey":"Lorg/slf4j/Logger;error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","frequency":14744},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":377,"col":64,"length":11},"sourceLine":"                    CouchDBConstants.URL_SEPARATOR + schemaName.toLowerCase() + CouchDBConstants.URL_SEPARATOR","methodKey":"Ljava/lang/String;toLowerCase()Ljava/lang/String;","frequency":17582},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":380,"col":16,"length":9},"sourceLine":"            get.addHeader(\\"Accept\\", \\"application/json\\");","methodKey":"Lorg/apache/http/client/methods/HttpGet;addHeader(Ljava/lang/String;Ljava/lang/String;)V","frequency":212},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":383,"col":43,"length":9},"sourceLine":"            InputStream content = response.getEntity().getContent();","methodKey":"Lorg/apache/http/HttpResponse;getEntity()Lorg/apache/http/HttpEntity;","frequency":1404},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":397,"col":93,"length":3},"sourceLine":"                JsonElement value = element.getAsJsonObject().get(\\"value\\").getAsJsonObject().get(inverseJoinColumnName);","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":397,"col":62,"length":3},"sourceLine":"                JsonElement value = element.getAsJsonObject().get(\\"value\\").getAsJsonObject().get(inverseJoinColumnName);","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":401,"col":34,"length":11},"sourceLine":"                            value.getAsString()));","methodKey":"Lcom/google/gson/JsonElement;getAsString()Ljava/lang/String;","frequency":939,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":376,"col":68,"length":11},"sourceLine":"            uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),","methodKey":"Lorg/apache/http/HttpHost;getHostName()Ljava/lang/String;","frequency":175},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":376,"col":92,"length":7},"sourceLine":"            uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),","methodKey":"Lorg/apache/http/HttpHost;getPort()I","frequency":152},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":376,"col":22,"length":3},"sourceLine":"            uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),","methodKey":"Ljava/net/URI;<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","frequency":5572},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":385,"col":35,"length":8},"sourceLine":"            JsonObject json = gson.fromJson(reader, JsonObject.class);","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":408,"col":22,"length":16},"sourceLine":"            throw new KunderaException(e);","methodKey":"Lcom/impetus/kundera/KunderaException;<init>(Ljava/lang/Throwable;)V","frequency":29},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":379,"col":30,"length":7},"sourceLine":"            HttpGet get = new HttpGet(uri);","methodKey":"Lorg/apache/http/client/methods/HttpGet;<init>(Ljava/net/URI;)V","frequency":1396},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":387,"col":43,"length":3},"sourceLine":"            JsonElement jsonElement = json.get(\\"rows\\");","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":381,"col":34,"length":7},"sourceLine":"            response = httpClient.execute(get);","methodKey":"Lorg/apache/http/client/HttpClient;execute(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;","frequency":845},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":384,"col":32,"length":17},"sourceLine":"            Reader reader = new InputStreamReader(content);","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":394,"col":42,"length":14},"sourceLine":"            JsonArray array = jsonElement.getAsJsonArray();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonArray()Lcom/google/gson/JsonArray;","frequency":476,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":397,"col":44,"length":15},"sourceLine":"                JsonElement value = element.getAsJsonObject().get(\\"value\\").getAsJsonObject().get(inverseJoinColumnName);","methodKey":"Lcom/google/gson/JsonElement;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":901,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":397,"col":75,"length":15},"sourceLine":"                JsonElement value = element.getAsJsonObject().get(\\"value\\").getAsJsonObject().get(inverseJoinColumnName);","methodKey":"Lcom/google/gson/JsonElement;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":901,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":400,"col":32,"length":3},"sourceLine":"                    foreignKeys.add((E) PropertyAccessorHelper.fromSourceToTargetClass(columnJavaType, String.class,","methodKey":"Ljava/util/List;add(Ljava/lang/Object;)Z","frequency":48348},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":369,"col":34,"length":9},"sourceLine":"        List<E> foreignKeys = new ArrayList<E>();","methodKey":"Ljava/util/ArrayList;<init>()V","frequency":47939},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":412,"col":12,"length":12},"sourceLine":"            closeContent(response);","methodKey":"Lcom/impetus/client/couchdb/CouchDBClient;closeContent(Lorg/apache/http/HttpResponse;)V","frequency":2},{"position":0,"location":{"unitName":"getColumnsById","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getColumnsById(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;","line":383,"col":55,"length":10},"sourceLine":"            InputStream content = response.getEntity().getContent();","methodKey":"Lorg/apache/http/HttpEntity;getContent()Ljava/io/InputStream;","frequency":1232}],"title":null,"language":"java","code":{"startLine":365,"full":"    @Override\\n    public <E> List<E> getColumnsById(String schemaName, String tableName, String pKeyColumnName,\\n            String inverseJoinColumnName, Object pKeyColumnValue, Class columnJavaType)\\n    {\\n        List<E> foreignKeys = new ArrayList<E>();\\n\\n        URI uri = null;\\n        HttpResponse response = null;\\n        try\\n        {\\n            String q = \\"key=\\" + CouchDBUtils.appendQuotes(pKeyColumnValue);\\n            uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),\\n                    CouchDBConstants.URL_SEPARATOR + schemaName.toLowerCase() + CouchDBConstants.URL_SEPARATOR\\n                            + CouchDBConstants.DESIGN + tableName + CouchDBConstants.VIEW + pKeyColumnName, q, null);\\n            HttpGet get = new HttpGet(uri);\\n            get.addHeader(\\"Accept\\", \\"application/json\\");\\n            response = httpClient.execute(get);\\n\\n            InputStream content = response.getEntity().getContent();\\n            Reader reader = new InputStreamReader(content);\\n            JsonObject json = gson.fromJson(reader, JsonObject.class);\\n\\n            JsonElement jsonElement = json.get(\\"rows\\");\\n\\n            if (jsonElement == null)\\n            {\\n                return foreignKeys;\\n            }\\n\\n            JsonArray array = jsonElement.getAsJsonArray();\\n            for (JsonElement element : array)\\n            {\\n                JsonElement value = element.getAsJsonObject().get(\\"value\\").getAsJsonObject().get(inverseJoinColumnName);\\n                if (value != null)\\n                {\\n                    foreignKeys.add((E) PropertyAccessorHelper.fromSourceToTargetClass(columnJavaType, String.class,\\n                            value.getAsString()));\\n                }\\n            }\\n        }\\n        catch (Exception e)\\n        {\\n            log.error(\\"Error while fetching column by id {}, Caused by {}.\\", pKeyColumnValue, e);\\n            throw new KunderaException(e);\\n        }\\n        finally\\n        {\\n            closeContent(response);\\n        }\\n        return foreignKeys;\\n    }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":"com.impetus.kundera.client","artifactId":"kundera-couchdb","homepage":"\\"http://groups.google.com/group/kundera-discuss/subscribe\\"","description":"\\"A JPA 2.1 compliant Polyglot Object-Datastore Mapping Library for NoSQL Datastores.Please subscribe to: \\"","url":"https://github.com/Impetus/Kundera/tree/trunk/src/kundera-couchdb/src/main/java/com/impetus/client/couchdb/CouchDBClient.java","origin":"github","github":{"stars":"848","repo":"Impetus/Kundera"},"zscore":1.9692298409026217},"date":"2019-05-23T15:31:54.941Z","active":false,"origin":{"rawSourceId":"5c768f32df79be0001c460a0","compilationResultId":"5c768f35e70f87000179eff5"},"artifactName":"com.impetus.kundera.client:kundera-couchdb","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"com/impetus/client/couchdb/CouchDBClient","highlight":{"code":[],"keyText":[]},"computed":{"rank":59.27382,"nonEmptyLineCount":46,"esRank":10.501843757549805},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":366,"col":4,"length":6}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":369,"col":30,"length":3}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":373,"col":8,"length":3}]},{"kind":"token","type":"string","content":"\\"key=\\"","locations":[{"line":375,"col":23,"length":6}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":376,"col":18,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":379,"col":26,"length":3}]},{"kind":"token","type":"string","content":"\\"Accept\\"","locations":[{"line":380,"col":26,"length":8}]},{"kind":"token","type":"string","content":"\\"application/json\\"","locations":[{"line":380,"col":36,"length":18}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":384,"col":28,"length":3}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":385,"col":63,"length":5}]},{"kind":"token","type":"string","content":"\\"rows\\"","locations":[{"line":387,"col":47,"length":6}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":389,"col":12,"length":2}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":391,"col":16,"length":6}]},{"kind":"token","type":"keyword","content":"for","locations":[{"line":395,"col":12,"length":3}]},{"kind":"token","type":"string","content":"\\"value\\"","locations":[{"line":397,"col":66,"length":7}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":398,"col":16,"length":2}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":400,"col":110,"length":5}]},{"kind":"token","type":"keyword","content":"catch","locations":[{"line":405,"col":8,"length":5}]},{"kind":"token","type":"string","content":"\\"Error while fetching column by id {}, Caused by {}.\\"","locations":[{"line":407,"col":22,"length":53}]},{"kind":"token","type":"keyword","content":"throw","locations":[{"line":408,"col":12,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":408,"col":18,"length":3}]},{"kind":"token","type":"keyword","content":"finally","locations":[{"line":410,"col":8,"length":7}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":414,"col":8,"length":6}]}],"private":false},{"_id":"5ce6ee977e0344000428b2d2","containerKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","containerKeyHash":"5f47984b20f6b33c671aad8098e37035","calls":[{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":69,"col":49,"length":3},"sourceLine":"      JsonArray densitiesArray = densitiesObject.get(KEY_DENSITIES).getAsJsonArray();","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":74,"col":50,"length":3},"sourceLine":"      String defaultDensityName = densitiesObject.get(KEY_SOURCE).getAsString();","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":85,"col":59,"length":3},"sourceLine":"      JsonElement keepSameDensityElement = densitiesObject.get(","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":64,"col":45,"length":19},"sourceLine":"            this.getClass().getClassLoader().getResourceAsStream(\\"misc/densities.json\\");","methodKey":"Ljava/lang/ClassLoader;getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;","frequency":4899},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":58,"col":30,"length":10},"sourceLine":"      JsonParser parser = new JsonParser();","methodKey":"Lcom/google/gson/JsonParser;<init>()V","frequency":611,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonParser;","fullNiceName":"com.google.gson.JsonParser","niceName":"JsonParser","index":4,"private":false},"predictionIndex":4},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":94,"col":19,"length":13},"sourceLine":"      list.add(new ScreenDensity(\\"xhdpi\\", 2.0f, true));","methodKey":"Lnet/redwarp/tool/resizer/worker/ScreenDensity;<init>(Ljava/lang/String;FZ)V","frequency":1},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":73,"col":18,"length":8},"sourceLine":"      list = gson.fromJson(densitiesArray, listType);","methodKey":"Lcom/google/gson/Gson;fromJson(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":76,"col":20,"length":7},"sourceLine":"        if (density.getName().equals(defaultDensityName)) {","methodKey":"Lnet/redwarp/tool/resizer/worker/ScreenDensity;getName()Ljava/lang/String;","frequency":1},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":76,"col":30,"length":6},"sourceLine":"        if (density.getName().equals(defaultDensityName)) {","methodKey":"Ljava/lang/String;equals(Ljava/lang/Object;)Z","frequency":47570},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":72,"col":8,"length":7},"sourceLine":"      }.getType();","methodKey":"Lnet/redwarp/tool/resizer/misc/Settings$1;getType()Ljava/lang/reflect/Type;","frequency":1},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":68,"col":27,"length":17},"sourceLine":"          parser.parse(new InputStreamReader(preferenceStream)).getAsJsonObject();","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":88,"col":53,"length":12},"sourceLine":"        keepSameDensityFile = keepSameDensityElement.getAsBoolean();","methodKey":"Lcom/google/gson/JsonElement;getAsBoolean()Z","frequency":221,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":57,"col":22,"length":4},"sourceLine":"      Gson gson = new Gson();","methodKey":"Lcom/google/gson/Gson;<init>()V","frequency":1346,"kind":"must"},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":68,"col":64,"length":15},"sourceLine":"          parser.parse(new InputStreamReader(preferenceStream)).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":901,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":69,"col":68,"length":14},"sourceLine":"      JsonArray densitiesArray = densitiesObject.get(KEY_DENSITIES).getAsJsonArray();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonArray()Lcom/google/gson/JsonArray;","frequency":476,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":74,"col":66,"length":11},"sourceLine":"      String defaultDensityName = densitiesObject.get(KEY_SOURCE).getAsString();","methodKey":"Lcom/google/gson/JsonElement;getAsString()Ljava/lang/String;","frequency":939,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":64,"col":17,"length":8},"sourceLine":"            this.getClass().getClassLoader().getResourceAsStream(\\"misc/densities.json\\");","methodKey":"Ljava/lang/Object;getClass()Ljava/lang/Class;","frequency":41904},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":82,"col":35,"length":3},"sourceLine":"        defaultInputDensity = list.get(0);","methodKey":"Ljava/util/List;get(I)Ljava/lang/Object;","frequency":33192},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":94,"col":11,"length":3},"sourceLine":"      list.add(new ScreenDensity(\\"xhdpi\\", 2.0f, true));","methodKey":"Ljava/util/List;add(Ljava/lang/Object;)Z","frequency":48348},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":95,"col":33,"length":3},"sourceLine":"      defaultInputDensity = list.get(0);","methodKey":"Ljava/util/List;get(I)Ljava/lang/Object;","frequency":33192},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":61,"col":31,"length":15},"sourceLine":"        preferenceStream = new FileInputStream(new File(path));","methodKey":"Ljava/io/FileInputStream;<init>(Ljava/io/File;)V","frequency":12955},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":61,"col":51,"length":4},"sourceLine":"        preferenceStream = new FileInputStream(new File(path));","methodKey":"Ljava/io/File;<init>(Ljava/lang/String;)V","frequency":23282},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":61,"col":51,"length":4},"sourceLine":"        preferenceStream = new FileInputStream(new File(path));","methodKey":"Ljava/io/File;<init>(Ljava/lang/String;)V","frequency":23282},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":64,"col":28,"length":14},"sourceLine":"            this.getClass().getClassLoader().getResourceAsStream(\\"misc/densities.json\\");","methodKey":"Ljava/lang/Class;getClassLoader()Ljava/lang/ClassLoader;","frequency":12114},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":68,"col":17,"length":5},"sourceLine":"          parser.parse(new InputStreamReader(preferenceStream)).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonParser;parse(Ljava/io/Reader;)Lcom/google/gson/JsonElement;","frequency":713,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonParser;","fullNiceName":"com.google.gson.JsonParser","niceName":"JsonParser","index":4,"private":false},"predictionIndex":4},{"position":0,"location":{"unitName":"load","unitFullKey":"Lnet/redwarp/tool/resizer/misc/Settings;load(Ljava/lang/String;)V","line":93,"col":17,"length":9},"sourceLine":"      list = new ArrayList<ScreenDensity>();","methodKey":"Ljava/util/ArrayList;<init>()V","frequency":47939}],"title":null,"language":"java","code":{"startLine":55,"full":"  public void load(String path) {\\n    try {\\n      Gson gson = new Gson();\\n      JsonParser parser = new JsonParser();\\n      InputStream preferenceStream;\\n      try {\\n        preferenceStream = new FileInputStream(new File(path));\\n      } catch (Exception e) {\\n        preferenceStream =\\n            this.getClass().getClassLoader().getResourceAsStream(\\"misc/densities.json\\");\\n      }\\n      JsonObject\\n          densitiesObject =\\n          parser.parse(new InputStreamReader(preferenceStream)).getAsJsonObject();\\n      JsonArray densitiesArray = densitiesObject.get(KEY_DENSITIES).getAsJsonArray();\\n\\n      Type listType = new TypeToken<List<ScreenDensity>>() {\\n      }.getType();\\n      list = gson.fromJson(densitiesArray, listType);\\n      String defaultDensityName = densitiesObject.get(KEY_SOURCE).getAsString();\\n      for (ScreenDensity density : list) {\\n        if (density.getName().equals(defaultDensityName)) {\\n          defaultInputDensity = density;\\n          break;\\n        }\\n      }\\n      if (defaultInputDensity == null) {\\n        defaultInputDensity = list.get(0);\\n      }\\n\\n      JsonElement keepSameDensityElement = densitiesObject.get(\\n          KEY_KEEP_SAME_DENSITY_FILE);\\n      if (keepSameDensityElement != null) {\\n        keepSameDensityFile = keepSameDensityElement.getAsBoolean();\\n      } else {\\n        keepSameDensityFile = false;\\n      }\\n    } catch (Exception e) {\\n      list = new ArrayList<ScreenDensity>();\\n      list.add(new ScreenDensity(\\"xhdpi\\", 2.0f, true));\\n      defaultInputDensity = list.get(0);\\n      keepSameDensityFile = false;\\n//      versionCode = Configuration.getVersionCode();\\n    }\\n  }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":"net.redwarp.tool","artifactId":"resizer","homepage":null,"description":"\\"A resizer tool to automaticaly resize png files and 9 patches in several densities\\"","url":"https://github.com/redwarp/9-Patch-Resizer/tree/develop/src/net/redwarp/tool/resizer/misc/Settings.java","origin":"github","github":{"stars":"944","repo":"redwarp/9-Patch-Resizer"},"zscore":2.259008648670198},"date":"2019-05-23T19:03:51.099Z","active":false,"origin":{"rawSourceId":"5c768a8a96b4b3000154c326","compilationResultId":"5c768a2051856b000115c9af"},"artifactName":"net.redwarp.tool:resizer","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"net/redwarp/tool/resizer/misc/Settings","highlight":{"code":[],"keyText":[]},"computed":{"rank":643.377,"nonEmptyLineCount":43,"esRank":11.294117922693248},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":55,"col":2,"length":6}]},{"kind":"token","type":"keyword","content":"void","locations":[{"line":55,"col":9,"length":4}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":56,"col":4,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":57,"col":18,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":58,"col":26,"length":3}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":60,"col":6,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":61,"col":27,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":61,"col":47,"length":3}]},{"kind":"token","type":"keyword","content":"catch","locations":[{"line":62,"col":8,"length":5}]},{"kind":"token","type":"keyword","content":"this","locations":[{"line":64,"col":12,"length":4}]},{"kind":"token","type":"string","content":"\\"misc/densities.json\\"","locations":[{"line":64,"col":65,"length":21}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":68,"col":23,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":71,"col":22,"length":3}]},{"kind":"token","type":"keyword","content":"for","locations":[{"line":75,"col":6,"length":3}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":76,"col":8,"length":2}]},{"kind":"token","type":"keyword","content":"break","locations":[{"line":78,"col":10,"length":5}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":81,"col":6,"length":2}]},{"kind":"token","type":"number","content":"0","locations":[{"line":82,"col":39,"length":1}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":87,"col":6,"length":2}]},{"kind":"token","type":"keyword","content":"else","locations":[{"line":89,"col":8,"length":4}]},{"kind":"token","type":"boolean","content":"false","locations":[{"line":90,"col":30,"length":5}]},{"kind":"token","type":"keyword","content":"catch","locations":[{"line":92,"col":6,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":93,"col":13,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":94,"col":15,"length":3}]},{"kind":"token","type":"string","content":"\\"xhdpi\\"","locations":[{"line":94,"col":33,"length":7}]},{"kind":"token","type":"number","content":"2.0f","locations":[{"line":94,"col":42,"length":4}]},{"kind":"token","type":"boolean","content":"true","locations":[{"line":94,"col":48,"length":4}]},{"kind":"token","type":"number","content":"0","locations":[{"line":95,"col":37,"length":1}]},{"kind":"token","type":"boolean","content":"false","locations":[{"line":96,"col":28,"length":5}]},{"kind":"token","type":"comment","content":"//      versionCode = Configuration.getVersionCode();","locations":[{"line":97,"col":0,"length":53}]}],"private":false},{"_id":"5ce6ce2037d9ff0004fc27ef","containerKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","containerKeyHash":"4d8735348d283a5e21f6cf044f38dd86","calls":[{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":91,"col":41,"length":11},"sourceLine":"    WorkUnit workUnit = new WorkUnit(new SourceState(),","methodKey":"Lorg/apache/gobblin/configuration/SourceState;<init>()V","frequency":12},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":92,"col":24,"length":11},"sourceLine":"        new Extract(new SourceState(), Extract.TableType.SNAPSHOT_ONLY, \\"namespace\\", \\"dummy_table\\"));","methodKey":"Lorg/apache/gobblin/configuration/SourceState;<init>()V","frequency":12},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":91,"col":41,"length":11},"sourceLine":"    WorkUnit workUnit = new WorkUnit(new SourceState(),","methodKey":"Lorg/apache/gobblin/configuration/SourceState;<init>()V","frequency":12},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":92,"col":24,"length":11},"sourceLine":"        new Extract(new SourceState(), Extract.TableType.SNAPSHOT_ONLY, \\"namespace\\", \\"dummy_table\\"));","methodKey":"Lorg/apache/gobblin/configuration/SourceState;<init>()V","frequency":12},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":92,"col":24,"length":11},"sourceLine":"        new Extract(new SourceState(), Extract.TableType.SNAPSHOT_ONLY, \\"namespace\\", \\"dummy_table\\"));","methodKey":"Lorg/apache/gobblin/configuration/SourceState;<init>()V","frequency":12},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":88,"col":26,"length":3},"sourceLine":"    jsonRecord = testData.get(\\"record\\").getAsJsonObject();","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":89,"col":26,"length":3},"sourceLine":"    jsonSchema = testData.get(\\"schema\\").getAsJsonArray();","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":86,"col":13,"length":8},"sourceLine":"        gson.fromJson(new InputStreamReader(this.getClass().getResourceAsStream(resourceFilePath)), listType);","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":93,"col":16,"length":13},"sourceLine":"    state = new WorkUnitState(workUnit);","methodKey":"Lorg/apache/gobblin/configuration/WorkUnitState;<init>(Lorg/apache/gobblin/source/workunit/WorkUnit;)V","frequency":27},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":91,"col":28,"length":8},"sourceLine":"    WorkUnit workUnit = new WorkUnit(new SourceState(),","methodKey":"Lorg/apache/gobblin/source/workunit/WorkUnit;<init>(Lorg/apache/gobblin/configuration/SourceState;Lorg/apache/gobblin/source/workunit/Extract;)V","frequency":18},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":83,"col":6,"length":7},"sourceLine":"    }.getType();","methodKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest$1;getType()Ljava/lang/reflect/Type;","frequency":1},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":86,"col":26,"length":17},"sourceLine":"        gson.fromJson(new InputStreamReader(this.getClass().getResourceAsStream(resourceFilePath)), listType);","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":84,"col":20,"length":4},"sourceLine":"    Gson gson = new Gson();","methodKey":"Lcom/google/gson/Gson;<init>()V","frequency":1346,"kind":"must"},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":88,"col":40,"length":15},"sourceLine":"    jsonRecord = testData.get(\\"record\\").getAsJsonObject();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":901,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":89,"col":40,"length":14},"sourceLine":"    jsonSchema = testData.get(\\"schema\\").getAsJsonArray();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonArray()Lcom/google/gson/JsonArray;","frequency":476,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":94,"col":10,"length":7},"sourceLine":"    state.setProp(ConfigurationKeys.CONVERTER_AVRO_TIME_FORMAT, \\"HH:mm:ss\\");","methodKey":"Lorg/apache/gobblin/configuration/WorkUnitState;setProp(Ljava/lang/String;Ljava/lang/Object;)V","frequency":26},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":95,"col":10,"length":7},"sourceLine":"    state.setProp(ConfigurationKeys.CONVERTER_AVRO_DATE_TIMEZONE, \\"PST\\");","methodKey":"Lorg/apache/gobblin/configuration/WorkUnitState;setProp(Ljava/lang/String;Ljava/lang/Object;)V","frequency":26},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":86,"col":49,"length":8},"sourceLine":"        gson.fromJson(new InputStreamReader(this.getClass().getResourceAsStream(resourceFilePath)), listType);","methodKey":"Ljava/lang/Object;getClass()Ljava/lang/Class;","frequency":41904},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":86,"col":60,"length":19},"sourceLine":"        gson.fromJson(new InputStreamReader(this.getClass().getResourceAsStream(resourceFilePath)), listType);","methodKey":"Ljava/lang/Class;getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;","frequency":6194},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":92,"col":12,"length":7},"sourceLine":"        new Extract(new SourceState(), Extract.TableType.SNAPSHOT_ONLY, \\"namespace\\", \\"dummy_table\\"));","methodKey":"Lorg/apache/gobblin/source/workunit/Extract;<init>(Lorg/apache/gobblin/configuration/SourceState;Lorg/apache/gobblin/source/workunit/Extract$TableType;Ljava/lang/String;Ljava/lang/String;)V","frequency":14},{"position":0,"location":{"unitName":"initResources","unitFullKey":"Lorg/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest;initResources(Ljava/lang/String;)Lcom/google/gson/JsonObject;","line":92,"col":12,"length":7},"sourceLine":"        new Extract(new SourceState(), Extract.TableType.SNAPSHOT_ONLY, \\"namespace\\", \\"dummy_table\\"));","methodKey":"Lorg/apache/gobblin/source/workunit/Extract;<init>(Lorg/apache/gobblin/configuration/SourceState;Lorg/apache/gobblin/source/workunit/Extract$TableType;Ljava/lang/String;Ljava/lang/String;)V","frequency":14}],"title":null,"language":"java","code":{"startLine":81,"full":"  private JsonObject initResources(String resourceFilePath) {\\n    Type listType = new TypeToken<JsonObject>() {\\n    }.getType();\\n    Gson gson = new Gson();\\n    JsonObject testData =\\n        gson.fromJson(new InputStreamReader(this.getClass().getResourceAsStream(resourceFilePath)), listType);\\n\\n    jsonRecord = testData.get(\\"record\\").getAsJsonObject();\\n    jsonSchema = testData.get(\\"schema\\").getAsJsonArray();\\n\\n    WorkUnit workUnit = new WorkUnit(new SourceState(),\\n        new Extract(new SourceState(), Extract.TableType.SNAPSHOT_ONLY, \\"namespace\\", \\"dummy_table\\"));\\n    state = new WorkUnitState(workUnit);\\n    state.setProp(ConfigurationKeys.CONVERTER_AVRO_TIME_FORMAT, \\"HH:mm:ss\\");\\n    state.setProp(ConfigurationKeys.CONVERTER_AVRO_DATE_TIMEZONE, \\"PST\\");\\n    return testData;\\n  }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":null,"artifactId":null,"homepage":"\\"https://github.com/linkedin/gobblin/wiki\\"","description":"\\"Gobblin is a distributed big data integration framework (ingestion, replication, compliance, retention)  for batch and streaming systems. Gobblin features integrations with Apache Hadoop, Apache Kafka, Salesforce, S3, MySQL, Google etc.\\"","origin":"github","github":{"stars":"1480","repo":"apache/incubator-gobblin"},"zscore":3.8769403253725003},"date":"2019-05-23T16:45:20.673Z","active":false,"origin":{"rawSourceId":"5c76bee8e70f87000181fe1f","compilationResultId":"5c76b98796b4b300015d3217"},"artifactName":"gobblin-core[tests]","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"org/apache/gobblin/converter/avro/JsonIntermediateToAvroConverterTest","highlight":{"code":[],"keyText":[]},"computed":{"rank":1000.7624,"nonEmptyLineCount":15,"esRank":12.73420612824303},"tokens":[{"kind":"token","type":"keyword","content":"private","locations":[{"line":81,"col":2,"length":7}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":82,"col":20,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":84,"col":16,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":86,"col":22,"length":3}]},{"kind":"token","type":"keyword","content":"this","locations":[{"line":86,"col":44,"length":4}]},{"kind":"token","type":"string","content":"\\"record\\"","locations":[{"line":88,"col":30,"length":8}]},{"kind":"token","type":"string","content":"\\"schema\\"","locations":[{"line":89,"col":30,"length":8}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":91,"col":24,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":91,"col":37,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":92,"col":8,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":92,"col":20,"length":3}]},{"kind":"token","type":"string","content":"\\"namespace\\"","locations":[{"line":92,"col":72,"length":11}]},{"kind":"token","type":"string","content":"\\"dummy_table\\"","locations":[{"line":92,"col":85,"length":13}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":93,"col":12,"length":3}]},{"kind":"token","type":"string","content":"\\"HH:mm:ss\\"","locations":[{"line":94,"col":64,"length":10}]},{"kind":"token","type":"string","content":"\\"PST\\"","locations":[{"line":95,"col":66,"length":5}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":96,"col":4,"length":6}]}],"private":false},{"_id":"5ce6bceb2fd3800004c96242","containerKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","containerKeyHash":"b1b45b2565b2f282dbd447355012bbe9","calls":[{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":646,"col":74,"length":10},"sourceLine":"                response = httpClient.execute(httpHost, get, CouchDBUtils.getContext(httpHost));","methodKey":"Lcom/impetus/client/couchdb/CouchDBUtils;getContext(Lorg/apache/http/HttpHost;)Lorg/apache/http/protocol/HttpContext;","frequency":3},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":666,"col":70,"length":10},"sourceLine":"            response = httpClient.execute(httpHost, put, CouchDBUtils.getContext(httpHost));","methodKey":"Lcom/impetus/client/couchdb/CouchDBUtils;getContext(Lorg/apache/http/HttpHost;)Lorg/apache/http/protocol/HttpContext;","frequency":3},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":671,"col":16,"length":5},"sourceLine":"            log.error(\\"Error while persisting entity with id {}, caused by {}. \\", id, e);","methodKey":"Lorg/slf4j/Logger;error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","frequency":14744},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":645,"col":20,"length":9},"sourceLine":"                get.addHeader(\\"Accept\\", \\"application/json\\");","methodKey":"Lorg/apache/http/client/methods/HttpGet;addHeader(Ljava/lang/String;Ljava/lang/String;)V","frequency":212},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":653,"col":49,"length":3},"sourceLine":"                    JsonElement rev = jsonObject.get(\\"_rev\\");","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":650,"col":51,"length":9},"sourceLine":"                    InputStream content = response.getEntity().getContent();","methodKey":"Lorg/apache/http/HttpResponse;getEntity()Lorg/apache/http/HttpEntity;","frequency":1404},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":634,"col":72,"length":11},"sourceLine":"            URI uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),","methodKey":"Lorg/apache/http/HttpHost;getHostName()Ljava/lang/String;","frequency":175},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":634,"col":96,"length":7},"sourceLine":"            URI uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),","methodKey":"Lorg/apache/http/HttpHost;getPort()I","frequency":152},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":662,"col":31,"length":12},"sourceLine":"            stringEntity = new StringEntity(object.toString(), Constants.CHARSET_UTF8);","methodKey":"Lorg/apache/http/entity/StringEntity;<init>(Ljava/lang/String;Ljava/lang/String;)V","frequency":808},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":634,"col":26,"length":3},"sourceLine":"            URI uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),","methodKey":"Ljava/net/URI;<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","frequency":5572},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":652,"col":49,"length":8},"sourceLine":"                    JsonObject jsonObject = gson.fromJson(reader, JsonObject.class);","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":629,"col":52,"length":15},"sourceLine":"            JsonObject object = CouchDBObjectMapper.getJsonOfEntity(entityMetadata, entity, id, rlHolders,","methodKey":"Lcom/impetus/client/couchdb/CouchDBObjectMapper;getJsonOfEntity(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;Lcom/impetus/kundera/persistence/EntityManagerFactoryImpl$KunderaMetadata;)Lcom/google/gson/JsonObject;","frequency":2},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":663,"col":25,"length":14},"sourceLine":"            stringEntity.setContentType(\\"application/json\\");","methodKey":"Lorg/apache/http/entity/StringEntity;setContentType(Ljava/lang/String;)V","frequency":126},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":672,"col":22,"length":16},"sourceLine":"            throw new KunderaException(e);","methodKey":"Lcom/impetus/kundera/KunderaException;<init>(Ljava/lang/Throwable;)V","frequency":29},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":632,"col":32,"length":3},"sourceLine":"            String _id = object.get(\\"_id\\").getAsString();","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":654,"col":27,"length":3},"sourceLine":"                    object.add(\\"_rev\\", rev);","methodKey":"Lcom/google/gson/JsonObject;add(Ljava/lang/String;Lcom/google/gson/JsonElement;)V","frequency":564,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":661,"col":19,"length":11},"sourceLine":"            object.addProperty(\\"_id\\", entityMetadata.getTableName() + id);","methodKey":"Lcom/google/gson/JsonObject;addProperty(Ljava/lang/String;Ljava/lang/String;)V","frequency":556,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":662,"col":51,"length":8},"sourceLine":"            stringEntity = new StringEntity(object.toString(), Constants.CHARSET_UTF8);","methodKey":"Lcom/google/gson/JsonObject;toString()Ljava/lang/String;","frequency":304,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":635,"col":68,"length":9},"sourceLine":"                    CouchDBConstants.URL_SEPARATOR + entityMetadata.getSchema().toLowerCase()","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getSchema()Ljava/lang/String;","frequency":22},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":661,"col":53,"length":12},"sourceLine":"            object.addProperty(\\"_id\\", entityMetadata.getTableName() + id);","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getTableName()Ljava/lang/String;","frequency":30},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":635,"col":80,"length":11},"sourceLine":"                    CouchDBConstants.URL_SEPARATOR + entityMetadata.getSchema().toLowerCase()","methodKey":"Ljava/lang/String;toLowerCase()Ljava/lang/String;","frequency":17582},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":644,"col":34,"length":7},"sourceLine":"                HttpGet get = new HttpGet(uri);","methodKey":"Lorg/apache/http/client/methods/HttpGet;<init>(Ljava/net/URI;)V","frequency":1396},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":646,"col":38,"length":7},"sourceLine":"                response = httpClient.execute(httpHost, get, CouchDBUtils.getContext(httpHost));","methodKey":"Lorg/apache/http/client/HttpClient;execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;","frequency":845},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":666,"col":34,"length":7},"sourceLine":"            response = httpClient.execute(httpHost, put, CouchDBUtils.getContext(httpHost));","methodKey":"Lorg/apache/http/client/HttpClient;execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;","frequency":845},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":651,"col":40,"length":17},"sourceLine":"                    Reader reader = new InputStreamReader(content);","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":632,"col":43,"length":11},"sourceLine":"            String _id = object.get(\\"_id\\").getAsString();","methodKey":"Lcom/google/gson/JsonElement;getAsString()Ljava/lang/String;","frequency":939,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":664,"col":16,"length":9},"sourceLine":"            put.setEntity(stringEntity);","methodKey":"Lorg/apache/http/client/methods/HttpPut;setEntity(Lorg/apache/http/HttpEntity;)V","frequency":252},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":638,"col":30,"length":7},"sourceLine":"            HttpPut put = new HttpPut(uri);","methodKey":"Lorg/apache/http/client/methods/HttpPut;<init>(Ljava/net/URI;)V","frequency":468},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":658,"col":20,"length":12},"sourceLine":"                    closeContent(response);","methodKey":"Lcom/impetus/client/couchdb/CouchDBClient;closeContent(Lorg/apache/http/HttpResponse;)V","frequency":2},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":676,"col":12,"length":12},"sourceLine":"            closeContent(response);","methodKey":"Lcom/impetus/client/couchdb/CouchDBClient;closeContent(Lorg/apache/http/HttpResponse;)V","frequency":2},{"position":0,"location":{"unitName":"onPersist","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;onPersist(Lcom/impetus/kundera/metadata/model/EntityMetadata;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)V","line":650,"col":63,"length":10},"sourceLine":"                    InputStream content = response.getEntity().getContent();","methodKey":"Lorg/apache/http/HttpEntity;getContent()Ljava/io/InputStream;","frequency":1232}],"title":null,"language":"java","code":{"startLine":623,"full":"    @Override\\n    protected void onPersist(EntityMetadata entityMetadata, Object entity, Object id, List<RelationHolder> rlHolders)\\n    {\\n        HttpResponse response = null;\\n        try\\n        {\\n            JsonObject object = CouchDBObjectMapper.getJsonOfEntity(entityMetadata, entity, id, rlHolders,\\n                    kunderaMetadata);\\n\\n            String _id = object.get(\\"_id\\").getAsString();\\n\\n            URI uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),\\n                    CouchDBConstants.URL_SEPARATOR + entityMetadata.getSchema().toLowerCase()\\n                            + CouchDBConstants.URL_SEPARATOR + _id, null, null);\\n\\n            HttpPut put = new HttpPut(uri);\\n\\n            StringEntity stringEntity = null;\\n\\n            if (isUpdate)\\n            {\\n                HttpGet get = new HttpGet(uri);\\n                get.addHeader(\\"Accept\\", \\"application/json\\");\\n                response = httpClient.execute(httpHost, get, CouchDBUtils.getContext(httpHost));\\n\\n                try\\n                {\\n                    InputStream content = response.getEntity().getContent();\\n                    Reader reader = new InputStreamReader(content);\\n                    JsonObject jsonObject = gson.fromJson(reader, JsonObject.class);\\n                    JsonElement rev = jsonObject.get(\\"_rev\\");\\n                    object.add(\\"_rev\\", rev);\\n                }\\n                finally\\n                {\\n                    closeContent(response);\\n                }\\n            }\\n            object.addProperty(\\"_id\\", entityMetadata.getTableName() + id);\\n            stringEntity = new StringEntity(object.toString(), Constants.CHARSET_UTF8);\\n            stringEntity.setContentType(\\"application/json\\");\\n            put.setEntity(stringEntity);\\n\\n            response = httpClient.execute(httpHost, put, CouchDBUtils.getContext(httpHost));\\n\\n        }\\n        catch (Exception e)\\n        {\\n            log.error(\\"Error while persisting entity with id {}, caused by {}. \\", id, e);\\n            throw new KunderaException(e);\\n        }\\n        finally\\n        {\\n            closeContent(response);\\n        }\\n    }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":"com.impetus.kundera.client","artifactId":"kundera-couchdb","homepage":"\\"http://groups.google.com/group/kundera-discuss/subscribe\\"","description":"\\"A JPA 2.1 compliant Polyglot Object-Datastore Mapping Library for NoSQL Datastores.Please subscribe to: \\"","url":"https://github.com/Impetus/Kundera/tree/trunk/src/kundera-couchdb/src/main/java/com/impetus/client/couchdb/CouchDBClient.java","origin":"github","github":{"stars":"848","repo":"Impetus/Kundera"},"zscore":1.9692298409026217},"date":"2019-05-23T15:31:54.955Z","active":false,"origin":{"rawSourceId":"5c768f32df79be0001c460a0","compilationResultId":"5c768f35e70f87000179eff5"},"artifactName":"com.impetus.kundera.client:kundera-couchdb","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"com/impetus/client/couchdb/CouchDBClient","highlight":{"code":[],"keyText":[]},"computed":{"rank":58.35108,"nonEmptyLineCount":48,"esRank":10.459798866356351},"tokens":[{"kind":"token","type":"keyword","content":"protected","locations":[{"line":624,"col":4,"length":9}]},{"kind":"token","type":"keyword","content":"void","locations":[{"line":624,"col":14,"length":4}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":627,"col":8,"length":3}]},{"kind":"token","type":"string","content":"\\"_id\\"","locations":[{"line":632,"col":36,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":634,"col":22,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":638,"col":26,"length":3}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":642,"col":12,"length":2}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":644,"col":30,"length":3}]},{"kind":"token","type":"string","content":"\\"Accept\\"","locations":[{"line":645,"col":30,"length":8}]},{"kind":"token","type":"string","content":"\\"application/json\\"","locations":[{"line":645,"col":40,"length":18}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":648,"col":16,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":651,"col":36,"length":3}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":652,"col":77,"length":5}]},{"kind":"token","type":"string","content":"\\"_rev\\"","locations":[{"line":653,"col":53,"length":6}]},{"kind":"token","type":"string","content":"\\"_rev\\"","locations":[{"line":654,"col":31,"length":6}]},{"kind":"token","type":"keyword","content":"finally","locations":[{"line":656,"col":16,"length":7}]},{"kind":"token","type":"string","content":"\\"_id\\"","locations":[{"line":661,"col":31,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":662,"col":27,"length":3}]},{"kind":"token","type":"string","content":"\\"application/json\\"","locations":[{"line":663,"col":40,"length":18}]},{"kind":"token","type":"keyword","content":"catch","locations":[{"line":669,"col":8,"length":5}]},{"kind":"token","type":"string","content":"\\"Error while persisting entity with id {}, caused by {}. \\"","locations":[{"line":671,"col":22,"length":58}]},{"kind":"token","type":"keyword","content":"throw","locations":[{"line":672,"col":12,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":672,"col":18,"length":3}]},{"kind":"token","type":"keyword","content":"finally","locations":[{"line":674,"col":8,"length":7}]}],"private":false},{"_id":"5ce6e5b9e59467000408681d","containerKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","containerKeyHash":"35c4019017dd926d736654bc2e683024","calls":[{"position":0,"location":{"unitName":"JsonProvider","unitFullKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","line":103,"col":46,"length":6},"sourceLine":"                    translations.put( entries.getKey(), entries.getValue().getAsString() );","methodKey":"Ljava/util/Map$Entry;getKey()Ljava/lang/Object;","frequency":24990},{"position":0,"location":{"unitName":"JsonProvider","unitFullKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","line":103,"col":64,"length":8},"sourceLine":"                    translations.put( entries.getKey(), entries.getValue().getAsString() );","methodKey":"Ljava/util/Map$Entry;getValue()Ljava/lang/Object;","frequency":25750},{"position":0,"location":{"unitName":"JsonProvider","unitFullKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","line":103,"col":33,"length":3},"sourceLine":"                    translations.put( entries.getKey(), entries.getValue().getAsString() );","methodKey":"Ljava/util/Map;put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","frequency":41717},{"position":0,"location":{"unitName":"JsonProvider","unitFullKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","line":98,"col":45,"length":17},"sourceLine":"            try ( InputStreamReader rd = new InputStreamReader( JsonProvider.class.getResourceAsStream( resourcePath ), Charsets.UTF_8 ) )","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"JsonProvider","unitFullKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","line":101,"col":67,"length":8},"sourceLine":"                for ( Map.Entry<String, JsonElement> entries : obj.entrySet() )","methodKey":"Lcom/google/gson/JsonObject;entrySet()Ljava/util/Set;","frequency":348,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"JsonProvider","unitFullKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","line":100,"col":44,"length":8},"sourceLine":"                JsonObject obj = new Gson().fromJson( rd, JsonObject.class );","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"JsonProvider","unitFullKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","line":100,"col":37,"length":4},"sourceLine":"                JsonObject obj = new Gson().fromJson( rd, JsonObject.class );","methodKey":"Lcom/google/gson/Gson;<init>()V","frequency":1346,"kind":"must"},{"position":0,"location":{"unitName":"JsonProvider","unitFullKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","line":103,"col":75,"length":11},"sourceLine":"                    translations.put( entries.getKey(), entries.getValue().getAsString() );","methodKey":"Lcom/google/gson/JsonElement;getAsString()Ljava/lang/String;","frequency":939,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"JsonProvider","unitFullKey":"Lnet/md_5/bungee/chat/TranslationRegistry$JsonProvider;<init>(Ljava/lang/String;)V","line":98,"col":83,"length":19},"sourceLine":"            try ( InputStreamReader rd = new InputStreamReader( JsonProvider.class.getResourceAsStream( resourcePath ), Charsets.UTF_8 ) )","methodKey":"Ljava/lang/Class;getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;","frequency":6194}],"title":null,"language":"java","code":{"startLine":96,"full":"        public JsonProvider(String resourcePath) throws IOException\\n        {\\n            try ( InputStreamReader rd = new InputStreamReader( JsonProvider.class.getResourceAsStream( resourcePath ), Charsets.UTF_8 ) )\\n            {\\n                JsonObject obj = new Gson().fromJson( rd, JsonObject.class );\\n                for ( Map.Entry<String, JsonElement> entries : obj.entrySet() )\\n                {\\n                    translations.put( entries.getKey(), entries.getValue().getAsString() );\\n                }\\n            }\\n        }\\n"},"meta":{"license":"\\"other\\"","groupId":"net.md-5","artifactId":"bungeecord-chat","homepage":"\\"https://www.spigotmc.org/go/bungeecord\\"","description":"\\"BungeeCord, the 6th in a generation of server portal suites. Efficiently proxies and maintains connections and transport between multiple Minecraft servers.\\"","url":"https://github.com/SpigotMC/BungeeCord/tree/master/chat/src/main/java/net/md_5/bungee/chat/TranslationRegistry.java","origin":"github","github":{"stars":"681","repo":"SpigotMC/BungeeCord"},"zscore":1.4651354565569417},"date":"2019-05-23T18:26:01.519Z","active":false,"origin":{"rawSourceId":"5c76b41251856b00011a0162","compilationResultId":"5c76b408df79be0001ca09b7"},"artifactName":"net.md-5:bungeecord-chat","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"net/md_5/bungee/chat/TranslationRegistry","highlight":{"code":[],"keyText":[]},"computed":{"rank":95.34193,"nonEmptyLineCount":11,"esRank":10.100325658915093},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":96,"col":8,"length":6}]},{"kind":"token","type":"keyword","content":"throws","locations":[{"line":96,"col":49,"length":6}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":98,"col":12,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":98,"col":41,"length":3}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":98,"col":77,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":100,"col":33,"length":3}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":100,"col":69,"length":5}]},{"kind":"token","type":"keyword","content":"for","locations":[{"line":101,"col":16,"length":3}]}],"private":false},{"_id":"5ce6e4657e034400041f085d","containerKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","containerKeyHash":"27cb2a21efd57787e4e1be966ce8167e","calls":[{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":53,"col":12,"length":17},"sourceLine":"        new InputStreamReader(JsonIntermediateToParquetGroupConverter.class.getResourceAsStream(RESOURCE_PATH)), listType);","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":50,"col":6,"length":7},"sourceLine":"    }.getType();","methodKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest$1;getType()Ljava/lang/reflect/Type;","frequency":1},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":51,"col":20,"length":4},"sourceLine":"    Gson gson = new Gson();","methodKey":"Lcom/google/gson/Gson;<init>()V","frequency":1346,"kind":"must"},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":56,"col":29,"length":11},"sourceLine":"    SourceState source = new SourceState();","methodKey":"Lorg/apache/gobblin/configuration/SourceState;<init>()V","frequency":12},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":55,"col":25,"length":15},"sourceLine":"    testCases = testData.getAsJsonObject();","methodKey":"Lcom/google/gson/JsonObject;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":252,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":52,"col":31,"length":8},"sourceLine":"    JsonObject testData = gson.fromJson(","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":53,"col":76,"length":19},"sourceLine":"        new InputStreamReader(JsonIntermediateToParquetGroupConverter.class.getResourceAsStream(RESOURCE_PATH)), listType);","methodKey":"Ljava/lang/Class;getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;","frequency":6194},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":57,"col":19,"length":13},"sourceLine":"    workUnit = new WorkUnitState(","methodKey":"Lorg/apache/gobblin/configuration/WorkUnitState;<init>(Lorg/apache/gobblin/source/workunit/WorkUnit;)V","frequency":27},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":58,"col":15,"length":14},"sourceLine":"        source.createWorkUnit(source.createExtract(Extract.TableType.SNAPSHOT_ONLY, \\"test_namespace\\", \\"test_table\\")));","methodKey":"Lorg/apache/gobblin/configuration/SourceState;createWorkUnit(Lorg/apache/gobblin/source/workunit/Extract;)Lorg/apache/gobblin/source/workunit/WorkUnit;","frequency":2},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":58,"col":37,"length":13},"sourceLine":"        source.createWorkUnit(source.createExtract(Extract.TableType.SNAPSHOT_ONLY, \\"test_namespace\\", \\"test_table\\")));","methodKey":"Lorg/apache/gobblin/configuration/SourceState;createExtract(Lorg/apache/gobblin/source/workunit/Extract$TableType;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/gobblin/source/workunit/Extract;","frequency":2},{"position":0,"location":{"unitName":"setUp","unitFullKey":"Lorg/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest;setUp()V","line":47,"col":3,"length":11},"sourceLine":"  @BeforeClass","methodKey":"Lorg/testng/annotations/BeforeClass;<init>(ANNOTATION_TBD)V","frequency":540}],"title":null,"language":"java","code":{"startLine":47,"full":"  @BeforeClass\\n  public static void setUp() {\\n    Type listType = new TypeToken<JsonObject>() {\\n    }.getType();\\n    Gson gson = new Gson();\\n    JsonObject testData = gson.fromJson(\\n        new InputStreamReader(JsonIntermediateToParquetGroupConverter.class.getResourceAsStream(RESOURCE_PATH)), listType);\\n\\n    testCases = testData.getAsJsonObject();\\n    SourceState source = new SourceState();\\n    workUnit = new WorkUnitState(\\n        source.createWorkUnit(source.createExtract(Extract.TableType.SNAPSHOT_ONLY, \\"test_namespace\\", \\"test_table\\")));\\n  }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":null,"artifactId":null,"homepage":"\\"https://github.com/linkedin/gobblin/wiki\\"","description":"\\"Gobblin is a distributed big data integration framework (ingestion, replication, compliance, retention)  for batch and streaming systems. Gobblin features integrations with Apache Hadoop, Apache Kafka, Salesforce, S3, MySQL, Google etc.\\"","origin":"github","github":{"stars":"1480","repo":"apache/incubator-gobblin"},"zscore":3.8769403253725003},"date":"2019-05-23T18:20:21.135Z","active":false,"origin":{"rawSourceId":"5c76c076e70f870001825894","compilationResultId":"5c76baef49efcb0001538d29"},"artifactName":"gobblin-parquet[tests]","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"org/apache/gobblin/converter/parquet/JsonIntermediateToParquetGroupConverterTest","highlight":{"code":[],"keyText":[]},"computed":{"rank":1030.0343,"nonEmptyLineCount":12,"esRank":11.76601713004972},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":48,"col":2,"length":6}]},{"kind":"token","type":"keyword","content":"static","locations":[{"line":48,"col":9,"length":6}]},{"kind":"token","type":"keyword","content":"void","locations":[{"line":48,"col":16,"length":4}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":49,"col":20,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":51,"col":16,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":53,"col":8,"length":3}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":53,"col":70,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":56,"col":25,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":57,"col":15,"length":3}]},{"kind":"token","type":"string","content":"\\"test_namespace\\"","locations":[{"line":58,"col":84,"length":16}]},{"kind":"token","type":"string","content":"\\"test_table\\"","locations":[{"line":58,"col":102,"length":12}]}],"private":false},{"_id":"5ce6b2d27e03440004e9cfc4","containerKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","containerKeyHash":"7262d61c1d5af37196e85d5da045a691","calls":[{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":300,"col":12,"length":5},"sourceLine":"        LOG.error(\\"IOException in Closer.close() while performing query \\" + req + \\": \\" + e, e);","methodKey":"Lorg/slf4j/Logger;error(Ljava/lang/String;Ljava/lang/Throwable;)V","frequency":14744},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":305,"col":10,"length":4},"sourceLine":"      LOG.warn(\\"Received empty response for query: \\" + req);","methodKey":"Lorg/slf4j/Logger;warn(Ljava/lang/String;)V","frequency":12910},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":306,"col":17,"length":10},"sourceLine":"      return new JsonObject();","methodKey":"Lcom/google/gson/JsonObject;<init>()V","frequency":702,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":288,"col":60,"length":9},"sourceLine":"          new BufferedReader(new InputStreamReader(response.getEntity().getContent(),","methodKey":"Lorg/apache/http/HttpResponse;getEntity()Lorg/apache/http/HttpEntity;","frequency":1404},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":288,"col":14,"length":14},"sourceLine":"          new BufferedReader(new InputStreamReader(response.getEntity().getContent(),","methodKey":"Ljava/io/BufferedReader;<init>(Ljava/io/Reader;)V","frequency":10981},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":291,"col":24,"length":8},"sourceLine":"      while ((line = br.readLine()) != null) {","methodKey":"Ljava/io/BufferedReader;readLine()Ljava/lang/String;","frequency":9667},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":288,"col":33,"length":17},"sourceLine":"          new BufferedReader(new InputStreamReader(response.getEntity().getContent(),","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":288,"col":33,"length":17},"sourceLine":"          new BufferedReader(new InputStreamReader(response.getEntity().getContent(),","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":304,"col":16,"length":13},"sourceLine":"    if (Strings.isNullOrEmpty(sb.toString())) {","methodKey":"Lcom/google/common/base/Strings;isNullOrEmpty(Ljava/lang/String;)Z","frequency":2232},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":275,"col":24,"length":16},"sourceLine":"      this.httpClient = createHttpClient();","methodKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;createHttpClient()Lorg/apache/http/client/HttpClient;","frequency":2},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":277,"col":25,"length":17},"sourceLine":"    HttpUriRequest req = createHttpRequest(rootUrl, query);","methodKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;createHttpRequest(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/http/client/methods/HttpUriRequest;","frequency":2},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":283,"col":30,"length":15},"sourceLine":"      HttpResponse response = sendHttpRequest(req, this.httpClient);","methodKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;sendHttpRequest(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/HttpClient;)Lorg/apache/http/HttpResponse;","frequency":2},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":285,"col":15,"length":8},"sourceLine":"        closer.register((CloseableHttpResponse)response);","methodKey":"Lcom/google/common/io/Closer;register(Ljava/io/Closeable;)Ljava/io/Closeable;","frequency":217},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":287,"col":33,"length":8},"sourceLine":"      BufferedReader br = closer.register(","methodKey":"Lcom/google/common/io/Closer;register(Ljava/io/Closeable;)Ljava/io/Closeable;","frequency":217},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":295,"col":19,"length":7},"sourceLine":"      throw closer.rethrow(t);","methodKey":"Lcom/google/common/io/Closer;rethrow(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;","frequency":72},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":298,"col":15,"length":5},"sourceLine":"        closer.close();","methodKey":"Lcom/google/common/io/Closer;close()V","frequency":183},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":309,"col":35,"length":8},"sourceLine":"    JsonElement jsonElement = GSON.fromJson(sb.toString(), JsonElement.class);","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":292,"col":11,"length":6},"sourceLine":"        sb.append(line + \\"\\\\n\\");","methodKey":"Ljava/lang/StringBuilder;append(Ljava/lang/String;)Ljava/lang/StringBuilder;","frequency":30995},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":304,"col":33,"length":8},"sourceLine":"    if (Strings.isNullOrEmpty(sb.toString())) {","methodKey":"Ljava/lang/StringBuilder;toString()Ljava/lang/String;","frequency":30165},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":309,"col":47,"length":8},"sourceLine":"    JsonElement jsonElement = GSON.fromJson(sb.toString(), JsonElement.class);","methodKey":"Ljava/lang/StringBuilder;toString()Ljava/lang/String;","frequency":30165},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":279,"col":27,"length":6},"sourceLine":"    Closer closer = Closer.create();","methodKey":"Lcom/google/common/io/Closer;create()Lcom/google/common/io/Closer;","frequency":195},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":281,"col":27,"length":13},"sourceLine":"    StringBuilder sb = new StringBuilder();","methodKey":"Ljava/lang/StringBuilder;<init>()V","frequency":29830},{"position":0,"location":{"unitName":"performHttpQuery","unitFullKey":"Lorg/apache/gobblin/example/wikipedia/WikipediaExtractor;performHttpQuery(Ljava/lang/String;Ljava/util/Map;)Lcom/google/gson/JsonElement;","line":288,"col":72,"length":10},"sourceLine":"          new BufferedReader(new InputStreamReader(response.getEntity().getContent(),","methodKey":"Lorg/apache/http/HttpEntity;getContent()Ljava/io/InputStream;","frequency":1232}],"title":null,"language":"java","code":{"startLine":273,"full":"  private JsonElement performHttpQuery(String rootUrl, Map<String, String> query) throws URISyntaxException, IOException {\\n    if (null == this.httpClient) {\\n      this.httpClient = createHttpClient();\\n    }\\n    HttpUriRequest req = createHttpRequest(rootUrl, query);\\n\\n    Closer closer = Closer.create();\\n\\n    StringBuilder sb = new StringBuilder();\\n    try {\\n      HttpResponse response = sendHttpRequest(req, this.httpClient);\\n      if (response instanceof CloseableHttpResponse) {\\n        closer.register((CloseableHttpResponse)response);\\n      }\\n      BufferedReader br = closer.register(\\n          new BufferedReader(new InputStreamReader(response.getEntity().getContent(),\\n                                                   ConfigurationKeys.DEFAULT_CHARSET_ENCODING)));\\n      String line;\\n      while ((line = br.readLine()) != null) {\\n        sb.append(line + \\"\\\\n\\");\\n      }\\n    } catch (Throwable t) {\\n      throw closer.rethrow(t);\\n    } finally {\\n      try {\\n        closer.close();\\n      } catch (IOException e) {\\n        LOG.error(\\"IOException in Closer.close() while performing query \\" + req + \\": \\" + e, e);\\n      }\\n    }\\n\\n    if (Strings.isNullOrEmpty(sb.toString())) {\\n      LOG.warn(\\"Received empty response for query: \\" + req);\\n      return new JsonObject();\\n    }\\n\\n    JsonElement jsonElement = GSON.fromJson(sb.toString(), JsonElement.class);\\n    return jsonElement;\\n\\n  }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":null,"artifactId":null,"homepage":"\\"https://github.com/linkedin/gobblin/wiki\\"","description":"\\"Gobblin is a distributed big data integration framework (ingestion, replication, compliance, retention)  for batch and streaming systems. Gobblin features integrations with Apache Hadoop, Apache Kafka, Salesforce, S3, MySQL, Google etc.\\"","origin":"github","github":{"stars":"1480","repo":"apache/incubator-gobblin"},"zscore":3.8769403253725003},"date":"2019-05-23T14:48:50.214Z","active":false,"origin":{"rawSourceId":"5c76ba1d51856b00011a6fdc","compilationResultId":"5c76bf38e70f8700018210ee"},"artifactName":"gobblin-example","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"org/apache/gobblin/example/wikipedia/WikipediaExtractor","highlight":{"code":[],"keyText":[]},"computed":{"rank":662.7778,"nonEmptyLineCount":35,"esRank":11.496470404518298},"tokens":[{"kind":"token","type":"keyword","content":"private","locations":[{"line":273,"col":2,"length":7}]},{"kind":"token","type":"keyword","content":"throws","locations":[{"line":273,"col":82,"length":6}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":274,"col":4,"length":2}]},{"kind":"token","type":"keyword","content":"this","locations":[{"line":274,"col":16,"length":4}]},{"kind":"token","type":"keyword","content":"this","locations":[{"line":275,"col":6,"length":4}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":281,"col":23,"length":3}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":282,"col":4,"length":3}]},{"kind":"token","type":"keyword","content":"this","locations":[{"line":283,"col":51,"length":4}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":284,"col":6,"length":2}]},{"kind":"token","type":"keyword","content":"instanceof","locations":[{"line":284,"col":19,"length":10}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":288,"col":10,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":288,"col":29,"length":3}]},{"kind":"token","type":"keyword","content":"while","locations":[{"line":291,"col":6,"length":5}]},{"kind":"token","type":"string","content":"\\"\\\\n\\"","locations":[{"line":292,"col":25,"length":4}]},{"kind":"token","type":"keyword","content":"catch","locations":[{"line":294,"col":6,"length":5}]},{"kind":"token","type":"keyword","content":"throw","locations":[{"line":295,"col":6,"length":5}]},{"kind":"token","type":"keyword","content":"finally","locations":[{"line":296,"col":6,"length":7}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":297,"col":6,"length":3}]},{"kind":"token","type":"keyword","content":"catch","locations":[{"line":299,"col":8,"length":5}]},{"kind":"token","type":"string","content":"\\"IOException in Closer.close() while performing query \\"","locations":[{"line":300,"col":18,"length":55}]},{"kind":"token","type":"string","content":"\\": \\"","locations":[{"line":300,"col":82,"length":4}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":304,"col":4,"length":2}]},{"kind":"token","type":"string","content":"\\"Received empty response for query: \\"","locations":[{"line":305,"col":15,"length":37}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":306,"col":6,"length":6}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":306,"col":13,"length":3}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":309,"col":71,"length":5}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":310,"col":4,"length":6}]}],"private":false},{"_id":"5ce6bceb2fd3800004c96239","containerKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","containerKeyHash":"82a87e922ed22266459a3d678e6190bf","calls":[{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":195,"col":16,"length":5},"sourceLine":"            log.error(\\"Error while finding object by key {}, Caused by {}.\\", key, e);","methodKey":"Lorg/slf4j/Logger;error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","frequency":14744},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":176,"col":16,"length":9},"sourceLine":"            get.addHeader(\\"Accept\\", \\"application/json\\");","methodKey":"Lorg/apache/http/client/methods/HttpGet;addHeader(Ljava/lang/String;Ljava/lang/String;)V","frequency":212},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":185,"col":27,"length":3},"sourceLine":"            if (jsonObject.get(((AbstractAttribute) entityMetadata.getIdAttribute()).getJPAColumnName()) == null)","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":179,"col":43,"length":9},"sourceLine":"            InputStream content = response.getEntity().getContent();","methodKey":"Lorg/apache/http/HttpResponse;getEntity()Lorg/apache/http/HttpEntity;","frequency":1404},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":151,"col":66,"length":22},"sourceLine":"        MetamodelImpl metaModel = (MetamodelImpl) kunderaMetadata.getApplicationMetadata().getMetamodel(","methodKey":"Lcom/impetus/kundera/persistence/EntityManagerFactoryImpl$KunderaMetadata;getApplicationMetadata()Lcom/impetus/kundera/metadata/model/ApplicationMetadata;","frequency":27},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":152,"col":31,"length":18},"sourceLine":"                entityMetadata.getPersistenceUnit());","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getPersistenceUnit()Ljava/lang/String;","frequency":27},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":160,"col":54,"length":14},"sourceLine":"            if (metaModel.isEmbeddable(entityMetadata.getIdAttribute().getBindableJavaType()))","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getIdAttribute()Ljavax/persistence/metamodel/SingularAttribute;","frequency":24},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":162,"col":53,"length":14},"sourceLine":"                Field field = (Field) entityMetadata.getIdAttribute().getJavaMember();","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getIdAttribute()Ljavax/persistence/metamodel/SingularAttribute;","frequency":24},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":163,"col":84,"length":14},"sourceLine":"                EmbeddableType embeddableType = metaModel.embeddable(entityMetadata.getIdAttribute()","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getIdAttribute()Ljavax/persistence/metamodel/SingularAttribute;","frequency":24},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":165,"col":92,"length":12},"sourceLine":"                _id = CouchDBObjectMapper.get_Id(field, key, embeddableType, entityMetadata.getTableName());","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getTableName()Ljava/lang/String;","frequency":30},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":169,"col":37,"length":12},"sourceLine":"                _id = entityMetadata.getTableName() + PropertyAccessorHelper.getString(key);","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getTableName()Ljava/lang/String;","frequency":30},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":173,"col":68,"length":9},"sourceLine":"                    CouchDBConstants.URL_SEPARATOR + entityMetadata.getSchema().toLowerCase()","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getSchema()Ljava/lang/String;","frequency":22},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":185,"col":67,"length":14},"sourceLine":"            if (jsonObject.get(((AbstractAttribute) entityMetadata.getIdAttribute()).getJPAColumnName()) == null)","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getIdAttribute()Ljavax/persistence/metamodel/SingularAttribute;","frequency":24},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":191,"col":35,"length":16},"sourceLine":"                    entityMetadata.getRelationNames(), kunderaMetadata);","methodKey":"Lcom/impetus/kundera/metadata/model/EntityMetadata;getRelationNames()Ljava/util/List;","frequency":17},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":173,"col":80,"length":11},"sourceLine":"                    CouchDBConstants.URL_SEPARATOR + entityMetadata.getSchema().toLowerCase()","methodKey":"Ljava/lang/String;toLowerCase()Ljava/lang/String;","frequency":17582},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":157,"col":42,"length":11},"sourceLine":"                key = ((JsonElement) key).getAsString();","methodKey":"Lcom/google/gson/JsonElement;getAsString()Ljava/lang/String;","frequency":939,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":185,"col":85,"length":16},"sourceLine":"            if (jsonObject.get(((AbstractAttribute) entityMetadata.getIdAttribute()).getJPAColumnName()) == null)","methodKey":"Lcom/impetus/kundera/metadata/model/attributes/AbstractAttribute;getJPAColumnName()Ljava/lang/String;","frequency":23},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":179,"col":55,"length":10},"sourceLine":"            InputStream content = response.getEntity().getContent();","methodKey":"Lorg/apache/http/HttpEntity;getContent()Ljava/io/InputStream;","frequency":1232},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":169,"col":77,"length":9},"sourceLine":"                _id = entityMetadata.getTableName() + PropertyAccessorHelper.getString(key);","methodKey":"Lcom/impetus/kundera/property/PropertyAccessorHelper;getString(Ljava/lang/Object;)Ljava/lang/String;","frequency":12},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":177,"col":70,"length":10},"sourceLine":"            response = httpClient.execute(httpHost, get, CouchDBUtils.getContext(httpHost));","methodKey":"Lcom/impetus/client/couchdb/CouchDBUtils;getContext(Lorg/apache/http/HttpHost;)Lorg/apache/http/protocol/HttpContext;","frequency":3},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":151,"col":91,"length":12},"sourceLine":"        MetamodelImpl metaModel = (MetamodelImpl) kunderaMetadata.getApplicationMetadata().getMetamodel(","methodKey":"Lcom/impetus/kundera/metadata/model/ApplicationMetadata;getMetamodel(Ljava/lang/String;)Ljavax/persistence/metamodel/Metamodel;","frequency":26},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":160,"col":26,"length":12},"sourceLine":"            if (metaModel.isEmbeddable(entityMetadata.getIdAttribute().getBindableJavaType()))","methodKey":"Lcom/impetus/kundera/metadata/model/MetamodelImpl;isEmbeddable(Ljava/lang/Class;)Z","frequency":20},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":163,"col":58,"length":10},"sourceLine":"                EmbeddableType embeddableType = metaModel.embeddable(entityMetadata.getIdAttribute()","methodKey":"Lcom/impetus/kundera/metadata/model/MetamodelImpl;embeddable(Ljava/lang/Class;)Ljavax/persistence/metamodel/EmbeddableType;","frequency":19},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":172,"col":72,"length":11},"sourceLine":"            URI uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),","methodKey":"Lorg/apache/http/HttpHost;getHostName()Ljava/lang/String;","frequency":175},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":172,"col":96,"length":7},"sourceLine":"            URI uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),","methodKey":"Lorg/apache/http/HttpHost;getPort()I","frequency":152},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":172,"col":26,"length":3},"sourceLine":"            URI uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),","methodKey":"Ljava/net/URI;<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","frequency":5572},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":182,"col":41,"length":8},"sourceLine":"            JsonObject jsonObject = gson.fromJson(reader, JsonObject.class);","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":165,"col":42,"length":6},"sourceLine":"                _id = CouchDBObjectMapper.get_Id(field, key, embeddableType, entityMetadata.getTableName());","methodKey":"Lcom/impetus/client/couchdb/CouchDBObjectMapper;get_Id(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljavax/persistence/metamodel/EmbeddableType;Ljava/lang/String;)Ljava/lang/String;","frequency":2},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":190,"col":39,"length":17},"sourceLine":"            return CouchDBObjectMapper.getEntityFromJson(entityClass, entityMetadata, jsonObject,","methodKey":"Lcom/impetus/client/couchdb/CouchDBObjectMapper;getEntityFromJson(Ljava/lang/Class;Lcom/impetus/kundera/metadata/model/EntityMetadata;Lcom/google/gson/JsonObject;Ljava/util/List;Lcom/impetus/kundera/persistence/EntityManagerFactoryImpl$KunderaMetadata;)Ljava/lang/Object;","frequency":2},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":196,"col":22,"length":16},"sourceLine":"            throw new KunderaException(e);","methodKey":"Lcom/impetus/kundera/KunderaException;<init>(Ljava/lang/Throwable;)V","frequency":29},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":175,"col":30,"length":7},"sourceLine":"            HttpGet get = new HttpGet(uri);","methodKey":"Lorg/apache/http/client/methods/HttpGet;<init>(Ljava/net/URI;)V","frequency":1396},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":177,"col":34,"length":7},"sourceLine":"            response = httpClient.execute(httpHost, get, CouchDBUtils.getContext(httpHost));","methodKey":"Lorg/apache/http/client/HttpClient;execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;","frequency":845},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":180,"col":32,"length":17},"sourceLine":"            Reader reader = new InputStreamReader(content);","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":160,"col":71,"length":19},"sourceLine":"            if (metaModel.isEmbeddable(entityMetadata.getIdAttribute().getBindableJavaType()))","methodKey":"Ljavax/persistence/metamodel/SingularAttribute;getBindableJavaType()Ljava/lang/Class;","frequency":27},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":162,"col":70,"length":13},"sourceLine":"                Field field = (Field) entityMetadata.getIdAttribute().getJavaMember();","methodKey":"Ljavax/persistence/metamodel/SingularAttribute;getJavaMember()Ljava/lang/reflect/Member;","frequency":23},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":164,"col":25,"length":19},"sourceLine":"                        .getBindableJavaType());","methodKey":"Ljavax/persistence/metamodel/SingularAttribute;getBindableJavaType()Ljava/lang/Class;","frequency":27},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":150,"col":63,"length":17},"sourceLine":"        EntityMetadata entityMetadata = KunderaMetadataManager.getEntityMetadata(kunderaMetadata, entityClass);","methodKey":"Lcom/impetus/kundera/metadata/KunderaMetadataManager;getEntityMetadata(Lcom/impetus/kundera/persistence/EntityManagerFactoryImpl$KunderaMetadata;Ljava/lang/Class;)Lcom/impetus/kundera/metadata/model/EntityMetadata;","frequency":31},{"position":0,"location":{"unitName":"find","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","line":200,"col":12,"length":12},"sourceLine":"            closeContent(response);","methodKey":"Lcom/impetus/client/couchdb/CouchDBClient;closeContent(Lorg/apache/http/HttpResponse;)V","frequency":2}],"title":null,"language":"java","code":{"startLine":146,"full":"    @Override\\n    public Object find(Class entityClass, Object key)\\n    {\\n        HttpResponse response = null;\\n        EntityMetadata entityMetadata = KunderaMetadataManager.getEntityMetadata(kunderaMetadata, entityClass);\\n        MetamodelImpl metaModel = (MetamodelImpl) kunderaMetadata.getApplicationMetadata().getMetamodel(\\n                entityMetadata.getPersistenceUnit());\\n        try\\n        {\\n            if (key instanceof JsonElement)\\n            {\\n                key = ((JsonElement) key).getAsString();\\n            }\\n            String _id = null;\\n            if (metaModel.isEmbeddable(entityMetadata.getIdAttribute().getBindableJavaType()))\\n            {\\n                Field field = (Field) entityMetadata.getIdAttribute().getJavaMember();\\n                EmbeddableType embeddableType = metaModel.embeddable(entityMetadata.getIdAttribute()\\n                        .getBindableJavaType());\\n                _id = CouchDBObjectMapper.get_Id(field, key, embeddableType, entityMetadata.getTableName());\\n            }\\n            else\\n            {\\n                _id = entityMetadata.getTableName() + PropertyAccessorHelper.getString(key);\\n            }\\n\\n            URI uri = new URI(CouchDBConstants.PROTOCOL, null, httpHost.getHostName(), httpHost.getPort(),\\n                    CouchDBConstants.URL_SEPARATOR + entityMetadata.getSchema().toLowerCase()\\n                            + CouchDBConstants.URL_SEPARATOR + _id, null, null);\\n            HttpGet get = new HttpGet(uri);\\n            get.addHeader(\\"Accept\\", \\"application/json\\");\\n            response = httpClient.execute(httpHost, get, CouchDBUtils.getContext(httpHost));\\n\\n            InputStream content = response.getEntity().getContent();\\n            Reader reader = new InputStreamReader(content);\\n\\n            JsonObject jsonObject = gson.fromJson(reader, JsonObject.class);\\n\\n            // Check for deleted object. if object is deleted then return null.\\n            if (jsonObject.get(((AbstractAttribute) entityMetadata.getIdAttribute()).getJPAColumnName()) == null)\\n            {\\n                return null;\\n            }\\n\\n            return CouchDBObjectMapper.getEntityFromJson(entityClass, entityMetadata, jsonObject,\\n                    entityMetadata.getRelationNames(), kunderaMetadata);\\n        }\\n        catch (Exception e)\\n        {\\n            log.error(\\"Error while finding object by key {}, Caused by {}.\\", key, e);\\n            throw new KunderaException(e);\\n        }\\n        finally\\n        {\\n            closeContent(response);\\n        }\\n    }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":"com.impetus.kundera.client","artifactId":"kundera-couchdb","homepage":"\\"http://groups.google.com/group/kundera-discuss/subscribe\\"","description":"\\"A JPA 2.1 compliant Polyglot Object-Datastore Mapping Library for NoSQL Datastores.Please subscribe to: \\"","url":"https://github.com/Impetus/Kundera/tree/trunk/src/kundera-couchdb/src/main/java/com/impetus/client/couchdb/CouchDBClient.java","origin":"github","github":{"stars":"848","repo":"Impetus/Kundera"},"zscore":1.9692298409026217},"date":"2019-05-23T15:31:54.939Z","active":false,"origin":{"rawSourceId":"5c768f32df79be0001c460a0","compilationResultId":"5c768f35e70f87000179eff5"},"artifactName":"com.impetus.kundera.client:kundera-couchdb","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"com/impetus/client/couchdb/CouchDBClient","highlight":{"code":[],"keyText":[]},"computed":{"rank":57.107376,"nonEmptyLineCount":52,"esRank":10.459799253733632},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":147,"col":4,"length":6}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":153,"col":8,"length":3}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":155,"col":12,"length":2}]},{"kind":"token","type":"keyword","content":"instanceof","locations":[{"line":155,"col":20,"length":10}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":160,"col":12,"length":2}]},{"kind":"token","type":"keyword","content":"else","locations":[{"line":167,"col":12,"length":4}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":172,"col":22,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":175,"col":26,"length":3}]},{"kind":"token","type":"string","content":"\\"Accept\\"","locations":[{"line":176,"col":26,"length":8}]},{"kind":"token","type":"string","content":"\\"application/json\\"","locations":[{"line":176,"col":36,"length":18}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":180,"col":28,"length":3}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":182,"col":69,"length":5}]},{"kind":"token","type":"comment","content":"// Check for deleted object. if object is deleted then return null.","locations":[{"line":184,"col":12,"length":67}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":185,"col":12,"length":2}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":187,"col":16,"length":6}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":190,"col":12,"length":6}]},{"kind":"token","type":"keyword","content":"catch","locations":[{"line":193,"col":8,"length":5}]},{"kind":"token","type":"string","content":"\\"Error while finding object by key {}, Caused by {}.\\"","locations":[{"line":195,"col":22,"length":53}]},{"kind":"token","type":"keyword","content":"throw","locations":[{"line":196,"col":12,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":196,"col":18,"length":3}]},{"kind":"token","type":"keyword","content":"finally","locations":[{"line":198,"col":8,"length":7}]}],"private":false},{"_id":"5ce6bceb2fd3800004c9624e","containerKey":"Lcom/impetus/client/couchdb/CouchDBClient;getJsonFromResponse(Lorg/apache/http/HttpResponse;)Lcom/google/gson/JsonArray;","containerKeyHash":"a55d55a0db687ee2365c732afb393c4c","calls":[{"position":0,"location":{"unitName":"getJsonFromResponse","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getJsonFromResponse(Lorg/apache/http/HttpResponse;)Lcom/google/gson/JsonArray;","line":1077,"col":39,"length":3},"sourceLine":"        JsonElement jsonElement = json.get(\\"rows\\");","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getJsonFromResponse","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getJsonFromResponse(Lorg/apache/http/HttpResponse;)Lcom/google/gson/JsonArray;","line":1075,"col":28,"length":17},"sourceLine":"        Reader reader = new InputStreamReader(content);","methodKey":"Ljava/io/InputStreamReader;<init>(Ljava/io/InputStream;)V","frequency":12291,"kind":"prediction","prediction":{"type":"class","key":"Ljava/io/InputStreamReader;","fullNiceName":"java.io.InputStreamReader","niceName":"InputStreamReader","index":6,"private":false},"predictionIndex":6},{"position":0,"location":{"unitName":"getJsonFromResponse","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getJsonFromResponse(Lorg/apache/http/HttpResponse;)Lcom/google/gson/JsonArray;","line":1074,"col":39,"length":9},"sourceLine":"        InputStream content = response.getEntity().getContent();","methodKey":"Lorg/apache/http/HttpResponse;getEntity()Lorg/apache/http/HttpEntity;","frequency":1404},{"position":0,"location":{"unitName":"getJsonFromResponse","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getJsonFromResponse(Lorg/apache/http/HttpResponse;)Lcom/google/gson/JsonArray;","line":1078,"col":56,"length":14},"sourceLine":"        return jsonElement == null ? null : jsonElement.getAsJsonArray();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonArray()Lcom/google/gson/JsonArray;","frequency":476,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"getJsonFromResponse","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getJsonFromResponse(Lorg/apache/http/HttpResponse;)Lcom/google/gson/JsonArray;","line":1076,"col":31,"length":8},"sourceLine":"        JsonObject json = gson.fromJson(reader, JsonObject.class);","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"getJsonFromResponse","unitFullKey":"Lcom/impetus/client/couchdb/CouchDBClient;getJsonFromResponse(Lorg/apache/http/HttpResponse;)Lcom/google/gson/JsonArray;","line":1074,"col":51,"length":10},"sourceLine":"        InputStream content = response.getEntity().getContent();","methodKey":"Lorg/apache/http/HttpEntity;getContent()Ljava/io/InputStream;","frequency":1232}],"title":null,"language":"java","code":{"startLine":1063,"full":"    /**\\n     * Gets the json from response.\\n     * \\n     * @param response\\n     *            the response\\n     * @return the json from response\\n     * @throws IOException\\n     *             Signals that an I/O exception has occurred.\\n     */\\n    private JsonArray getJsonFromResponse(HttpResponse response) throws IOException\\n    {\\n        InputStream content = response.getEntity().getContent();\\n        Reader reader = new InputStreamReader(content);\\n        JsonObject json = gson.fromJson(reader, JsonObject.class);\\n        JsonElement jsonElement = json.get(\\"rows\\");\\n        return jsonElement == null ? null : jsonElement.getAsJsonArray();\\n    }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":"com.impetus.kundera.client","artifactId":"kundera-couchdb","homepage":"\\"http://groups.google.com/group/kundera-discuss/subscribe\\"","description":"\\"A JPA 2.1 compliant Polyglot Object-Datastore Mapping Library for NoSQL Datastores.Please subscribe to: \\"","url":"https://github.com/Impetus/Kundera/tree/trunk/src/kundera-couchdb/src/main/java/com/impetus/client/couchdb/CouchDBClient.java","origin":"github","github":{"stars":"848","repo":"Impetus/Kundera"},"zscore":1.9692298409026217},"date":"2019-05-23T15:31:54.959Z","active":false,"origin":{"rawSourceId":"5c768f32df79be0001c460a0","compilationResultId":"5c768f35e70f87000179eff5"},"artifactName":"com.impetus.kundera.client:kundera-couchdb","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"com/impetus/client/couchdb/CouchDBClient","highlight":{"code":[],"keyText":[]},"computed":{"rank":82.82836,"nonEmptyLineCount":17,"esRank":10.50184290300518},"tokens":[{"kind":"token","type":"comment","content":"/**\\n     * Gets the json from response.\\n     * \\n     * @param response\\n     *            the response\\n     * @return the json from response\\n     * @throws IOException\\n     *             Signals that an I/O exception has occurred.\\n     */","locations":[{"line":1063,"col":4,"length":3},{"line":1064,"col":0,"length":35},{"line":1065,"col":0,"length":7},{"line":1066,"col":0,"length":22},{"line":1067,"col":0,"length":30},{"line":1068,"col":0,"length":37},{"line":1069,"col":0,"length":26},{"line":1070,"col":0,"length":62},{"line":1071,"col":0,"length":7}]},{"kind":"token","type":"keyword","content":"private","locations":[{"line":1072,"col":4,"length":7}]},{"kind":"token","type":"keyword","content":"throws","locations":[{"line":1072,"col":65,"length":6}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":1075,"col":24,"length":3}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":1076,"col":59,"length":5}]},{"kind":"token","type":"string","content":"\\"rows\\"","locations":[{"line":1077,"col":43,"length":6}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":1078,"col":8,"length":6}]}],"private":false},{"_id":"5ce6e437e5946700040692fe","containerKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","containerKeyHash":"189bcf4592f12627eff8481bbf47c243","calls":[{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":403,"col":36,"length":6},"sourceLine":"    return WxCpGsonBuilder.INSTANCE.create()","methodKey":"Lcom/google/gson/GsonBuilder;create()Lcom/google/gson/Gson;","frequency":1073,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},"predictionIndex":1},{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":401,"col":29,"length":3},"sourceLine":"    String responseContent = get(url, null);","methodKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","frequency":1},{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":405,"col":27,"length":15},"sourceLine":"            tmpJsonElement.getAsJsonObject().get(\\"taglist\\"),","methodKey":"Lcom/google/gson/JsonElement;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":901,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":402,"col":41,"length":5},"sourceLine":"    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));","methodKey":"Lcom/google/gson/internal/Streams;parse(Lcom/google/gson/stream/JsonReader;)Lcom/google/gson/JsonElement;","frequency":27},{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":404,"col":9,"length":8},"sourceLine":"        .fromJson(","methodKey":"Lcom/google/gson/Gson;fromJson(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":405,"col":45,"length":3},"sourceLine":"            tmpJsonElement.getAsJsonObject().get(\\"taglist\\"),","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":402,"col":66,"length":12},"sourceLine":"    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));","methodKey":"Ljava/io/StringReader;<init>(Ljava/lang/String;)V","frequency":5480},{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":402,"col":66,"length":12},"sourceLine":"    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));","methodKey":"Ljava/io/StringReader;<init>(Ljava/lang/String;)V","frequency":5480},{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":407,"col":14,"length":7},"sourceLine":"            }.getType()","methodKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl$4;getType()Ljava/lang/reflect/Type;","frequency":1},{"position":0,"location":{"unitName":"tagGet","unitFullKey":"Lme/chanjar/weixin/cp/api/WxCpServiceImpl;tagGet()Ljava/util/List;","line":402,"col":51,"length":10},"sourceLine":"    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));","methodKey":"Lcom/google/gson/stream/JsonReader;<init>(Ljava/io/Reader;)V","frequency":205}],"title":null,"language":"java","code":{"startLine":398,"full":"  @Override\\n  public List<WxCpTag> tagGet() throws WxErrorException {\\n    String url = \\"https://qyapi.weixin.qq.com/cgi-bin/tag/list\\";\\n    String responseContent = get(url, null);\\n    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));\\n    return WxCpGsonBuilder.INSTANCE.create()\\n        .fromJson(\\n            tmpJsonElement.getAsJsonObject().get(\\"taglist\\"),\\n            new TypeToken<List<WxCpTag>>() {\\n            }.getType()\\n        );\\n  }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":"me.chanjar","artifactId":"weixin-java-cp","homepage":null,"description":"\\"?????????Java SDK\\"","url":"https://github.com/chanjarster/weixin-java-tools/tree/master/weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java","origin":"github","github":{"stars":"2258","repo":"chanjarster/weixin-java-tools"},"zscore":6.2253560799889005},"date":"2019-05-23T18:19:35.592Z","active":false,"origin":{"rawSourceId":"5c788587df79be0001e9ff73","compilationResultId":"5c788584df79be0001e9ff5a"},"artifactName":"me.chanjar:weixin-java-cp","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"me/chanjar/weixin/cp/api/WxCpServiceImpl","highlight":{"code":[],"keyText":[]},"computed":{"rank":1196.888,"nonEmptyLineCount":12,"esRank":14.484669594064373},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":399,"col":2,"length":6}]},{"kind":"token","type":"keyword","content":"throws","locations":[{"line":399,"col":32,"length":6}]},{"kind":"token","type":"string","content":"\\"https://qyapi.weixin.qq.com/cgi-bin/tag/list\\"","locations":[{"line":400,"col":17,"length":46}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":402,"col":47,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":402,"col":62,"length":3}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":403,"col":4,"length":6}]},{"kind":"token","type":"string","content":"\\"taglist\\"","locations":[{"line":405,"col":49,"length":9}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":406,"col":12,"length":3}]}],"private":false},{"_id":"5ce6f42337d9ff00042cff2a","containerKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","containerKeyHash":"535a98675e4a7c14d638ae6e639747b9","calls":[{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":48,"col":30,"length":3},"sourceLine":"        String event = parsed.get(\\"event\\").getAsString();","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":49,"col":38,"length":6},"sourceLine":"        Gson gson = new GsonBuilder().create();","methodKey":"Lcom/google/gson/GsonBuilder;create()Lcom/google/gson/Gson;","frequency":1073,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},"predictionIndex":1},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":47,"col":32,"length":10},"sourceLine":"        JsonObject parsed = new JsonParser().parse(json).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonParser;<init>()V","frequency":611,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonParser;","fullNiceName":"com.google.gson.JsonParser","niceName":"JsonParser","index":4,"private":false},"predictionIndex":4},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":57,"col":13,"length":9},"sourceLine":"            .toCommand(habitList);","methodKey":"Lorg/isoron/uhabits/core/commands/ChangeHabitColorCommand$Record;toCommand(Lorg/isoron/uhabits/core/models/HabitList;)Lorg/isoron/uhabits/core/commands/ChangeHabitColorCommand;","frequency":2},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":53,"col":13,"length":9},"sourceLine":"            .toCommand(habitList);","methodKey":"Lorg/isoron/uhabits/core/commands/ArchiveHabitsCommand$Record;toCommand(Lorg/isoron/uhabits/core/models/HabitList;)Lorg/isoron/uhabits/core/commands/ArchiveHabitsCommand;","frequency":2},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":52,"col":13,"length":8},"sourceLine":"            .fromJson(json, ArchiveHabitsCommand.Record.class)","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":56,"col":13,"length":8},"sourceLine":"            .fromJson(json, ChangeHabitColorCommand.Record.class)","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":60,"col":13,"length":8},"sourceLine":"            .fromJson(json, CreateHabitCommand.Record.class)","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":64,"col":13,"length":8},"sourceLine":"            .fromJson(json, CreateRepetitionCommand.Record.class)","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":68,"col":13,"length":8},"sourceLine":"            .fromJson(json, DeleteHabitsCommand.Record.class)","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":72,"col":13,"length":8},"sourceLine":"            .fromJson(json, EditHabitCommand.Record.class)","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":76,"col":13,"length":8},"sourceLine":"            .fromJson(json, ToggleRepetitionCommand.Record.class)","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":80,"col":13,"length":8},"sourceLine":"            .fromJson(json, UnarchiveHabitsCommand.Record.class)","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":47,"col":45,"length":5},"sourceLine":"        JsonObject parsed = new JsonParser().parse(json).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonParser;parse(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":713,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonParser;","fullNiceName":"com.google.gson.JsonParser","niceName":"JsonParser","index":4,"private":false},"predictionIndex":4},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":61,"col":13,"length":9},"sourceLine":"            .toCommand(modelFactory, habitList);","methodKey":"Lorg/isoron/uhabits/core/commands/CreateHabitCommand$Record;toCommand(Lorg/isoron/uhabits/core/models/ModelFactory;Lorg/isoron/uhabits/core/models/HabitList;)Lorg/isoron/uhabits/core/commands/CreateHabitCommand;","frequency":2},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":73,"col":13,"length":9},"sourceLine":"            .toCommand(modelFactory, habitList);","methodKey":"Lorg/isoron/uhabits/core/commands/EditHabitCommand$Record;toCommand(Lorg/isoron/uhabits/core/models/ModelFactory;Lorg/isoron/uhabits/core/models/HabitList;)Lorg/isoron/uhabits/core/commands/EditHabitCommand;","frequency":2},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":81,"col":13,"length":9},"sourceLine":"            .toCommand(habitList);","methodKey":"Lorg/isoron/uhabits/core/commands/UnarchiveHabitsCommand$Record;toCommand(Lorg/isoron/uhabits/core/models/HabitList;)Lorg/isoron/uhabits/core/commands/UnarchiveHabitsCommand;","frequency":2},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":51,"col":18,"length":6},"sourceLine":"        if (event.equals(\\"Archive\\")) return gson","methodKey":"Ljava/lang/String;equals(Ljava/lang/Object;)Z","frequency":47570},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":55,"col":18,"length":6},"sourceLine":"        if (event.equals(\\"ChangeColor\\")) return gson","methodKey":"Ljava/lang/String;equals(Ljava/lang/Object;)Z","frequency":47570},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":59,"col":18,"length":6},"sourceLine":"        if (event.equals(\\"CreateHabit\\")) return gson","methodKey":"Ljava/lang/String;equals(Ljava/lang/Object;)Z","frequency":47570},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":63,"col":18,"length":6},"sourceLine":"        if (event.equals(\\"CreateRep\\")) return gson","methodKey":"Ljava/lang/String;equals(Ljava/lang/Object;)Z","frequency":47570},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":67,"col":18,"length":6},"sourceLine":"        if (event.equals(\\"DeleteHabit\\")) return gson","methodKey":"Ljava/lang/String;equals(Ljava/lang/Object;)Z","frequency":47570},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":71,"col":18,"length":6},"sourceLine":"        if (event.equals(\\"EditHabit\\")) return gson","methodKey":"Ljava/lang/String;equals(Ljava/lang/Object;)Z","frequency":47570},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":75,"col":18,"length":6},"sourceLine":"        if (event.equals(\\"Toggle\\")) return gson","methodKey":"Ljava/lang/String;equals(Ljava/lang/Object;)Z","frequency":47570},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":79,"col":18,"length":6},"sourceLine":"        if (event.equals(\\"Unarchive\\")) return gson","methodKey":"Ljava/lang/String;equals(Ljava/lang/Object;)Z","frequency":47570},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":47,"col":57,"length":15},"sourceLine":"        JsonObject parsed = new JsonParser().parse(json).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":901,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":48,"col":43,"length":11},"sourceLine":"        String event = parsed.get(\\"event\\").getAsString();","methodKey":"Lcom/google/gson/JsonElement;getAsString()Ljava/lang/String;","frequency":939,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":83,"col":18,"length":21},"sourceLine":"        throw new IllegalStateException(\\"Unknown command\\");","methodKey":"Ljava/lang/IllegalStateException;<init>(Ljava/lang/String;)V","frequency":23507},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":65,"col":13,"length":9},"sourceLine":"            .toCommand(habitList);","methodKey":"Lorg/isoron/uhabits/core/commands/CreateRepetitionCommand$Record;toCommand(Lorg/isoron/uhabits/core/models/HabitList;)Lorg/isoron/uhabits/core/commands/CreateRepetitionCommand;","frequency":2},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":49,"col":24,"length":11},"sourceLine":"        Gson gson = new GsonBuilder().create();","methodKey":"Lcom/google/gson/GsonBuilder;<init>()V","frequency":1034,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},"predictionIndex":1},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":69,"col":13,"length":9},"sourceLine":"            .toCommand(habitList);","methodKey":"Lorg/isoron/uhabits/core/commands/DeleteHabitsCommand$Record;toCommand(Lorg/isoron/uhabits/core/models/HabitList;)Lorg/isoron/uhabits/core/commands/DeleteHabitsCommand;","frequency":2},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":77,"col":13,"length":9},"sourceLine":"            .toCommand(habitList);","methodKey":"Lorg/isoron/uhabits/core/commands/ToggleRepetitionCommand$Record;toCommand(Lorg/isoron/uhabits/core/models/HabitList;)Lorg/isoron/uhabits/core/commands/ToggleRepetitionCommand;","frequency":2},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":44,"col":5,"length":7},"sourceLine":"    @NonNull","methodKey":"Landroid/support/annotation/NonNull;<init>(ANNOTATION_TBD)V","frequency":2783},{"position":0,"location":{"unitName":"parse","unitFullKey":"Lorg/isoron/uhabits/core/commands/CommandParser;parse(Ljava/lang/String;)Lorg/isoron/uhabits/core/commands/Command;","line":45,"col":26,"length":7},"sourceLine":"    public Command parse(@NonNull String json)","methodKey":"Landroid/support/annotation/NonNull;<init>(ANNOTATION_TBD)V","frequency":2783}],"title":null,"language":"java","code":{"startLine":44,"full":"    @NonNull\\n    public Command parse(@NonNull String json)\\n    {\\n        JsonObject parsed = new JsonParser().parse(json).getAsJsonObject();\\n        String event = parsed.get(\\"event\\").getAsString();\\n        Gson gson = new GsonBuilder().create();\\n\\n        if (event.equals(\\"Archive\\")) return gson\\n            .fromJson(json, ArchiveHabitsCommand.Record.class)\\n            .toCommand(habitList);\\n\\n        if (event.equals(\\"ChangeColor\\")) return gson\\n            .fromJson(json, ChangeHabitColorCommand.Record.class)\\n            .toCommand(habitList);\\n\\n        if (event.equals(\\"CreateHabit\\")) return gson\\n            .fromJson(json, CreateHabitCommand.Record.class)\\n            .toCommand(modelFactory, habitList);\\n\\n        if (event.equals(\\"CreateRep\\")) return gson\\n            .fromJson(json, CreateRepetitionCommand.Record.class)\\n            .toCommand(habitList);\\n\\n        if (event.equals(\\"DeleteHabit\\")) return gson\\n            .fromJson(json, DeleteHabitsCommand.Record.class)\\n            .toCommand(habitList);\\n\\n        if (event.equals(\\"EditHabit\\")) return gson\\n            .fromJson(json, EditHabitCommand.Record.class)\\n            .toCommand(modelFactory, habitList);\\n\\n        if (event.equals(\\"Toggle\\")) return gson\\n            .fromJson(json, ToggleRepetitionCommand.Record.class)\\n            .toCommand(habitList);\\n\\n        if (event.equals(\\"Unarchive\\")) return gson\\n            .fromJson(json, UnarchiveHabitsCommand.Record.class)\\n            .toCommand(habitList);\\n\\n        throw new IllegalStateException(\\"Unknown command\\");\\n    }\\n}"},"meta":{"license":"\\"gpl-3.0\\"","groupId":null,"artifactId":null,"homepage":null,"description":"\\"Loop Habit Tracker, an Android app for creating and maintaining good habits\\"","origin":"github","github":{"stars":"2278","repo":"iSoron/uhabits"},"zscore":6.285726664940479},"date":"2019-05-23T19:27:31.071Z","active":false,"origin":{"rawSourceId":"5c7889f5df79be0001eab470","compilationResultId":"5c788a3d96b4b300017d232b"},"artifactName":"uhabits-core","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"org/isoron/uhabits/core/commands/CommandParser","highlight":{"code":[],"keyText":[]},"computed":{"rank":775.7419,"nonEmptyLineCount":33,"esRank":14.019539254689718},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":45,"col":4,"length":6}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":47,"col":28,"length":3}]},{"kind":"token","type":"string","content":"\\"event\\"","locations":[{"line":48,"col":34,"length":7}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":49,"col":20,"length":3}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":51,"col":8,"length":2}]},{"kind":"token","type":"string","content":"\\"Archive\\"","locations":[{"line":51,"col":25,"length":9}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":51,"col":37,"length":6}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":52,"col":56,"length":5}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":55,"col":8,"length":2}]},{"kind":"token","type":"string","content":"\\"ChangeColor\\"","locations":[{"line":55,"col":25,"length":13}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":55,"col":41,"length":6}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":56,"col":59,"length":5}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":59,"col":8,"length":2}]},{"kind":"token","type":"string","content":"\\"CreateHabit\\"","locations":[{"line":59,"col":25,"length":13}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":59,"col":41,"length":6}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":60,"col":54,"length":5}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":63,"col":8,"length":2}]},{"kind":"token","type":"string","content":"\\"CreateRep\\"","locations":[{"line":63,"col":25,"length":11}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":63,"col":39,"length":6}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":64,"col":59,"length":5}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":67,"col":8,"length":2}]},{"kind":"token","type":"string","content":"\\"DeleteHabit\\"","locations":[{"line":67,"col":25,"length":13}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":67,"col":41,"length":6}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":68,"col":55,"length":5}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":71,"col":8,"length":2}]},{"kind":"token","type":"string","content":"\\"EditHabit\\"","locations":[{"line":71,"col":25,"length":11}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":71,"col":39,"length":6}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":72,"col":52,"length":5}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":75,"col":8,"length":2}]},{"kind":"token","type":"string","content":"\\"Toggle\\"","locations":[{"line":75,"col":25,"length":8}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":75,"col":36,"length":6}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":76,"col":59,"length":5}]},{"kind":"token","type":"keyword","content":"if","locations":[{"line":79,"col":8,"length":2}]},{"kind":"token","type":"string","content":"\\"Unarchive\\"","locations":[{"line":79,"col":25,"length":11}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":79,"col":39,"length":6}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":80,"col":58,"length":5}]},{"kind":"token","type":"keyword","content":"throw","locations":[{"line":83,"col":8,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":83,"col":14,"length":3}]},{"kind":"token","type":"string","content":"\\"Unknown command\\"","locations":[{"line":83,"col":40,"length":17}]}],"private":false},{"_id":"5ce6ece27e03440004275417","containerKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","containerKeyHash":"5656e972545895734bfec084b76120e2","calls":[{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":674,"col":27,"length":10},"sourceLine":"    JsonObject param = new JsonObject();","methodKey":"Lcom/google/gson/JsonObject;<init>()V","frequency":702,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":679,"col":36,"length":6},"sourceLine":"    return WxMpGsonBuilder.INSTANCE.create().fromJson(tmpJsonElement.getAsJsonObject().get(\\"list\\"),","methodKey":"Lcom/google/gson/GsonBuilder;create()Lcom/google/gson/Gson;","frequency":1073,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},"predictionIndex":1},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":675,"col":55,"length":6},"sourceLine":"    param.addProperty(\\"begin_date\\", SIMPLE_DATE_FORMAT.format(beginDate));","methodKey":"Ljava/text/SimpleDateFormat;format(Ljava/util/Date;)Ljava/lang/String;","frequency":5719},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":676,"col":53,"length":6},"sourceLine":"    param.addProperty(\\"end_date\\", SIMPLE_DATE_FORMAT.format(endDate));","methodKey":"Ljava/text/SimpleDateFormat;format(Ljava/util/Date;)Ljava/lang/String;","frequency":5719},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":675,"col":10,"length":11},"sourceLine":"    param.addProperty(\\"begin_date\\", SIMPLE_DATE_FORMAT.format(beginDate));","methodKey":"Lcom/google/gson/JsonObject;addProperty(Ljava/lang/String;Ljava/lang/String;)V","frequency":556,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":676,"col":10,"length":11},"sourceLine":"    param.addProperty(\\"end_date\\", SIMPLE_DATE_FORMAT.format(endDate));","methodKey":"Lcom/google/gson/JsonObject;addProperty(Ljava/lang/String;Ljava/lang/String;)V","frequency":556,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":677,"col":45,"length":8},"sourceLine":"    String responseContent = post(url, param.toString());","methodKey":"Lcom/google/gson/JsonObject;toString()Ljava/lang/String;","frequency":304,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":679,"col":69,"length":15},"sourceLine":"    return WxMpGsonBuilder.INSTANCE.create().fromJson(tmpJsonElement.getAsJsonObject().get(\\"list\\"),","methodKey":"Lcom/google/gson/JsonElement;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":901,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":678,"col":41,"length":5},"sourceLine":"    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));","methodKey":"Lcom/google/gson/internal/Streams;parse(Lcom/google/gson/stream/JsonReader;)Lcom/google/gson/JsonElement;","frequency":27},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":679,"col":45,"length":8},"sourceLine":"    return WxMpGsonBuilder.INSTANCE.create().fromJson(tmpJsonElement.getAsJsonObject().get(\\"list\\"),","methodKey":"Lcom/google/gson/Gson;fromJson(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":679,"col":87,"length":3},"sourceLine":"    return WxMpGsonBuilder.INSTANCE.create().fromJson(tmpJsonElement.getAsJsonObject().get(\\"list\\"),","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":677,"col":29,"length":4},"sourceLine":"    String responseContent = post(url, param.toString());","methodKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;post(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","frequency":1},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":678,"col":66,"length":12},"sourceLine":"    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));","methodKey":"Ljava/io/StringReader;<init>(Ljava/lang/String;)V","frequency":5480},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":678,"col":66,"length":12},"sourceLine":"    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));","methodKey":"Ljava/io/StringReader;<init>(Ljava/lang/String;)V","frequency":5480},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":678,"col":51,"length":10},"sourceLine":"    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));","methodKey":"Lcom/google/gson/stream/JsonReader;<init>(Ljava/io/Reader;)V","frequency":205},{"position":0,"location":{"unitName":"getUserCumulate","unitFullKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl;getUserCumulate(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;","line":681,"col":10,"length":7},"sourceLine":"        }.getType());","methodKey":"Lme/chanjar/weixin/mp/api/WxMpServiceImpl$3;getType()Ljava/lang/reflect/Type;","frequency":1}],"title":null,"language":"java","code":{"startLine":671,"full":"  @Override\\n  public List<WxMpUserCumulate> getUserCumulate(Date beginDate, Date endDate) throws WxErrorException {\\n    String url = \\"https://api.weixin.qq.com/datacube/getusercumulate\\";\\n    JsonObject param = new JsonObject();\\n    param.addProperty(\\"begin_date\\", SIMPLE_DATE_FORMAT.format(beginDate));\\n    param.addProperty(\\"end_date\\", SIMPLE_DATE_FORMAT.format(endDate));\\n    String responseContent = post(url, param.toString());\\n    JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));\\n    return WxMpGsonBuilder.INSTANCE.create().fromJson(tmpJsonElement.getAsJsonObject().get(\\"list\\"),\\n        new TypeToken<List<WxMpUserCumulate>>() {\\n        }.getType());\\n  }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":"me.chanjar","artifactId":"weixin-java-mp","homepage":null,"description":"\\"?????????Java SDK\\"","url":"https://github.com/chanjarster/weixin-java-tools/tree/master/weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java","origin":"github","github":{"stars":"2258","repo":"chanjarster/weixin-java-tools"},"zscore":6.2253560799889005},"date":"2019-05-23T18:56:34.812Z","active":false,"origin":{"rawSourceId":"5c788588df79be0001e9ffa8","compilationResultId":"5c7885aae70f870001a3b531"},"artifactName":"me.chanjar:weixin-java-mp","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"me/chanjar/weixin/mp/api/WxMpServiceImpl","highlight":{"code":[],"keyText":[]},"computed":{"rank":1192.2142,"nonEmptyLineCount":12,"esRank":14.428107535836087},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":672,"col":2,"length":6}]},{"kind":"token","type":"keyword","content":"throws","locations":[{"line":672,"col":78,"length":6}]},{"kind":"token","type":"string","content":"\\"https://api.weixin.qq.com/datacube/getusercumulate\\"","locations":[{"line":673,"col":17,"length":52}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":674,"col":23,"length":3}]},{"kind":"token","type":"string","content":"\\"begin_date\\"","locations":[{"line":675,"col":22,"length":12}]},{"kind":"token","type":"string","content":"\\"end_date\\"","locations":[{"line":676,"col":22,"length":10}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":678,"col":47,"length":3}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":678,"col":62,"length":3}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":679,"col":4,"length":6}]},{"kind":"token","type":"string","content":"\\"list\\"","locations":[{"line":679,"col":91,"length":6}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":680,"col":8,"length":3}]}],"private":false},{"_id":"5ce6deab7e03440004198e27","containerKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","containerKeyHash":"b1b216385c45e60d14c97205622fd596","calls":[{"position":0,"location":{"unitName":"getMetadataFromFile","unitFullKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","line":131,"col":37,"length":3},"sourceLine":"        return allArtifactsPerPlugin.get(artifactId);","methodKey":"Ljava/util/Map;get(Ljava/lang/Object;)Ljava/lang/Object;","frequency":39907},{"position":0,"location":{"unitName":"getMetadataFromFile","unitFullKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","line":130,"col":73,"length":6},"sourceLine":"        final Map<String, Map> allArtifactsPerPlugin = new GsonBuilder().create().fromJson(fileToString, type);","methodKey":"Lcom/google/gson/GsonBuilder;create()Lcom/google/gson/Gson;","frequency":1073,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},"predictionIndex":1},{"position":0,"location":{"unitName":"getMetadataFromFile","unitFullKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","line":130,"col":82,"length":8},"sourceLine":"        final Map<String, Map> allArtifactsPerPlugin = new GsonBuilder().create().fromJson(fileToString, type);","methodKey":"Lcom/google/gson/Gson;fromJson(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"getMetadataFromFile","unitFullKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","line":126,"col":46,"length":16},"sourceLine":"        final String fileToString = FileUtils.readFileToString(metadataFileDest, StandardCharsets.UTF_8);","methodKey":"Lorg/apache/commons/io/FileUtils;readFileToString(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;","frequency":835},{"position":0,"location":{"unitName":"getMetadataFromFile","unitFullKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","line":130,"col":59,"length":11},"sourceLine":"        final Map<String, Map> allArtifactsPerPlugin = new GsonBuilder().create().fromJson(fileToString, type);","methodKey":"Lcom/google/gson/GsonBuilder;<init>()V","frequency":1034,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/GsonBuilder;","fullNiceName":"com.google.gson.GsonBuilder","niceName":"GsonBuilder","index":1,"private":false},"predictionIndex":1},{"position":0,"location":{"unitName":"getMetadataFromFile","unitFullKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","line":127,"col":15,"length":5},"sourceLine":"        LOGGER.debug(format(\\"Reading metadata from file %s.\\", metadataFileDest.getAbsolutePath()));","methodKey":"Lorg/slf4j/Logger;debug(Ljava/lang/String;)V","frequency":14651},{"position":0,"location":{"unitName":"getMetadataFromFile","unitFullKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","line":127,"col":21,"length":6},"sourceLine":"        LOGGER.debug(format(\\"Reading metadata from file %s.\\", metadataFileDest.getAbsolutePath()));","methodKey":"Ljava/lang/String;format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","frequency":24106},{"position":0,"location":{"unitName":"getMetadataFromFile","unitFullKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","line":127,"col":79,"length":15},"sourceLine":"        LOGGER.debug(format(\\"Reading metadata from file %s.\\", metadataFileDest.getAbsolutePath()));","methodKey":"Ljava/io/File;getAbsolutePath()Ljava/lang/String;","frequency":12805},{"position":0,"location":{"unitName":"getMetadataFromFile","unitFullKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder;getMetadataFromFile(Ljava/lang/String;)Ljava/util/Map;","line":129,"col":10,"length":7},"sourceLine":"        }.getType();","methodKey":"Lcom/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder$1;getType()Ljava/lang/reflect/Type;","frequency":1}],"title":null,"language":"java","code":{"startLine":125,"full":"    private Map<String, Object> getMetadataFromFile(String artifactId) throws IOException {\\n        final String fileToString = FileUtils.readFileToString(metadataFileDest, StandardCharsets.UTF_8);\\n        LOGGER.debug(format(\\"Reading metadata from file %s.\\", metadataFileDest.getAbsolutePath()));\\n        final Type type = new TypeToken<Map<String, Object>>() {\\n        }.getType();\\n        final Map<String, Map> allArtifactsPerPlugin = new GsonBuilder().create().fromJson(fileToString, type);\\n        return allArtifactsPerPlugin.get(artifactId);\\n    }\\n"},"meta":{"license":"\\"apache-2.0\\"","groupId":null,"artifactId":null,"homepage":"\\"https://www.gocd.org\\"","description":"\\"Main repository for GoCD - Continuous Delivery server\\"","origin":"github","github":{"stars":"4620","repo":"gocd/gocd"},"zscore":13.355122162770314},"date":"2019-05-23T17:55:55.563Z","active":false,"origin":{"rawSourceId":"5c780f2ee70f87000195faec","compilationResultId":"5c780f2d49efcb0001666074"},"artifactName":"common","codePack":"codepack_gh_java_26022019","fullyQualifiedName":"com/thoughtworks/go/domain/builder/FetchPluggableArtifactBuilder","highlight":{"code":[],"keyText":[]},"computed":{"rank":1209.2655,"nonEmptyLineCount":8,"esRank":16.547373166818566},"tokens":[{"kind":"token","type":"keyword","content":"private","locations":[{"line":125,"col":4,"length":7}]},{"kind":"token","type":"keyword","content":"throws","locations":[{"line":125,"col":71,"length":6}]},{"kind":"token","type":"keyword","content":"final","locations":[{"line":126,"col":8,"length":5}]},{"kind":"token","type":"string","content":"\\"Reading metadata from file %s.\\"","locations":[{"line":127,"col":28,"length":32}]},{"kind":"token","type":"keyword","content":"final","locations":[{"line":128,"col":8,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":128,"col":26,"length":3}]},{"kind":"token","type":"keyword","content":"final","locations":[{"line":130,"col":8,"length":5}]},{"kind":"token","type":"keyword","content":"new","locations":[{"line":130,"col":55,"length":3}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":131,"col":8,"length":6}]}],"private":false},{"_id":"5ce699702fd3800004aac339","containerKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","containerKeyHash":"a8bd48206382694a05e0ea20fa700354","calls":[{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":107,"col":45,"length":20},"sourceLine":"            JsonObject jsonObject = HttpUtil.getResposeJsonObject(BMA.Song.songBaseInfo(id).trim()).get(\\"result\\")","methodKey":"Lcom/wm/remusic/net/HttpUtil;getResposeJsonObject(Ljava/lang/String;)Lcom/google/gson/JsonObject;","frequency":1},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":108,"col":69,"length":3},"sourceLine":"                    .getAsJsonObject().get(\\"items\\").getAsJsonArray().get(0).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":107,"col":100,"length":3},"sourceLine":"            JsonObject jsonObject = HttpUtil.getResposeJsonObject(BMA.Song.songBaseInfo(id).trim()).get(\\"result\\")","methodKey":"Lcom/google/gson/JsonObject;get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","frequency":905,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonObject;","fullNiceName":"com.google.gson.JsonObject","niceName":"JsonObject","index":2,"private":false},"predictionIndex":2},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":109,"col":50,"length":8},"sourceLine":"            info = MainApplication.gsonInstance().fromJson(jsonObject, MusicDetailInfo.class);","methodKey":"Lcom/google/gson/Gson;fromJson(Lcom/google/gson/JsonElement;Ljava/lang/Class;)Ljava/lang/Object;","frequency":2130,"kind":"must"},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":111,"col":14,"length":15},"sourceLine":"            e.printStackTrace();","methodKey":"Ljava/lang/Exception;printStackTrace()V","frequency":12020},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":108,"col":76,"length":15},"sourceLine":"                    .getAsJsonObject().get(\\"items\\").getAsJsonArray().get(0).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":901,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":108,"col":52,"length":14},"sourceLine":"                    .getAsJsonObject().get(\\"items\\").getAsJsonArray().get(0).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonArray()Lcom/google/gson/JsonArray;","frequency":476,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":108,"col":21,"length":15},"sourceLine":"                    .getAsJsonObject().get(\\"items\\").getAsJsonArray().get(0).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonElement;getAsJsonObject()Lcom/google/gson/JsonObject;","frequency":901,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonElement;","fullNiceName":"com.google.gson.JsonElement","niceName":"JsonElement","index":3,"private":false},"predictionIndex":3},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":109,"col":35,"length":12},"sourceLine":"            info = MainApplication.gsonInstance().fromJson(jsonObject, MusicDetailInfo.class);","methodKey":"Lcom/wm/remusic/MainApplication;gsonInstance()Lcom/google/gson/Gson;","frequency":1},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":107,"col":75,"length":12},"sourceLine":"            JsonObject jsonObject = HttpUtil.getResposeJsonObject(BMA.Song.songBaseInfo(id).trim()).get(\\"result\\")","methodKey":"Lcom/wm/remusic/net/BMA$Song;songBaseInfo(Ljava/lang/String;)Ljava/lang/String;","frequency":1},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":108,"col":39,"length":3},"sourceLine":"                    .getAsJsonObject().get(\\"items\\").getAsJsonArray().get(0).getAsJsonObject();","methodKey":"Lcom/google/gson/JsonArray;get(I)Lcom/google/gson/JsonElement;","frequency":337,"kind":"prediction","prediction":{"type":"class","key":"Lcom/google/gson/JsonArray;","fullNiceName":"com.google.gson.JsonArray","niceName":"JsonArray","index":5,"private":false},"predictionIndex":5},{"position":0,"location":{"unitName":"getInfo","unitFullKey":"Lcom/wm/remusic/downmusic/Down;getInfo(Ljava/lang/String;)Lcom/wm/remusic/json/MusicDetailInfo;","line":107,"col":92,"length":4},"sourceLine":"            JsonObject jsonObject = HttpUtil.getResposeJsonObject(BMA.Song.songBaseInfo(id).trim()).get(\\"result\\")","methodKey":"Ljava/lang/String;trim()Ljava/lang/String;","frequency":21689}],"title":null,"language":"java","code":{"startLine":104,"full":"    public static MusicDetailInfo getInfo(final String id) {\\n        MusicDetailInfo info = null;\\n        try {\\n            JsonObject jsonObject = HttpUtil.getResposeJsonObject(BMA.Song.songBaseInfo(id).trim()).get(\\"result\\")\\n                    .getAsJsonObject().get(\\"items\\").getAsJsonArray().get(0).getAsJsonObject();\\n            info = MainApplication.gsonInstance().fromJson(jsonObject, MusicDetailInfo.class);\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        }\\n\\n        return info;\\n    }\\n"},"meta":{"license":null,"groupId":null,"artifactId":null,"homepage":null,"description":"\\"?????? ????netease  android?????? ?? ??\\"","origin":"github","github":{"stars":"4921","repo":"aa112901/remusic"},"zscore":6.953262903804757},"date":"2019-05-23T13:00:31.855Z","active":false,"origin":{"rawSourceId":"5c7cabfcac38dc0001e3e995","compilationResultId":"5c7cabfd2ef5570001deecd0"},"artifactName":"remusic-app","codePack":"codepack_gh_android_03032019","fullyQualifiedName":"com/wm/remusic/downmusic/Down","highlight":{"code":[],"keyText":[]},"computed":{"rank":1195.6864,"nonEmptyLineCount":11,"esRank":14.6980144928137},"tokens":[{"kind":"token","type":"keyword","content":"public","locations":[{"line":104,"col":4,"length":6}]},{"kind":"token","type":"keyword","content":"static","locations":[{"line":104,"col":11,"length":6}]},{"kind":"token","type":"keyword","content":"final","locations":[{"line":104,"col":42,"length":5}]},{"kind":"token","type":"keyword","content":"try","locations":[{"line":106,"col":8,"length":3}]},{"kind":"token","type":"string","content":"\\"result\\"","locations":[{"line":107,"col":104,"length":8}]},{"kind":"token","type":"string","content":"\\"items\\"","locations":[{"line":108,"col":43,"length":7}]},{"kind":"token","type":"number","content":"0","locations":[{"line":108,"col":73,"length":1}]},{"kind":"token","type":"keyword","content":"class","locations":[{"line":109,"col":87,"length":5}]},{"kind":"token","type":"keyword","content":"catch","locations":[{"line":110,"col":10,"length":5}]},{"kind":"token","type":"keyword","content":"return","locations":[{"line":114,"col":8,"length":6}]}],"private":false}],"queryInstanceId":{}},"headers":{"x-powered-by":"Express","access-control-allow-origin":"*","content-security-policy":"frame-ancestors \'none\'","content-type":"application/json; charset=utf-8","date":"Mon, 05 Oct 2020 08:54:48 GMT","etag":"W/\\"36789-RjhMZH9MZce4k1tG6tekEXwj2Dk\\"","set-cookie":["gate.connect.sid=s%3Aruwrt7gI1EVNE8zkXdzrOb3u5aUDr54f.4gvxwSymLK7WmzQ5SwqJ%2FiO%2F8HlYe7QY5hiPqiLYG38; Path=/; Expires=Thu, 08 Oct 2020 08:54:48 GMT; HttpOnly; Secure"],"vary":"Accept-Encoding","via":"1.1 spaces-router (8dd0c4f2604e), 1.1 spaces-router (8dd0c4f2604e)","x-frame-options":"deny","x-gateway-response-time-ms":"413","x-response-time-ms":"349","connection":"close","transfer-encoding":"chunked"}}}')},"jfS+":function(e,n,t){"use strict";var o=t("endd");function a(e){if("function"!==typeof e)throw new TypeError("executor must be a function.");var n;this.promise=new Promise((function(e){n=e}));var t=this;e((function(e){t.reason||(t.reason=new o(e),n(t.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var e;return{token:new a((function(n){e=n})),cancel:e}},e.exports=a},lGeG:function(e,n,t){"use strict";(function(e){var o=t("o0o1"),a=t.n(o),i=t("HaE+"),l="undefined"!==typeof e&&e.env&&"true"===e.env.PRINT_TIMINGS,r=null;n.a={async:function(){var e=Object(i.a)(a.a.mark((function e(n,t){var o,i,s,c;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=new Date,i=!1,e.prev=2,e.next=5,t();case 5:return s=e.sent,e.abrupt("return",s);case 9:throw e.prev=9,e.t0=e.catch(2),i=!0,e.t0;case 13:return e.prev=13,c=(new Date).getTime()-o.getTime(),l&&console.log("".concat(n," timing: ").concat(c,"ms ").concat(i?" (Error occurred)":"")),r&&r.write("web-search-performance",{name:n},{ms:c}),e.finish(13);case 18:case"end":return e.stop()}}),e,null,[[2,9,13,18]])})));return function(n,t){return e.apply(this,arguments)}}(),sync:function(e,n){var t=new Date,o=!1;try{return n()}catch(i){throw o=!0,i}finally{var a=(new Date).getTime()-t.getTime();l&&console.log("".concat(e," timing: ").concat(a,"ms ").concat(o?" (Error occurred)":"")),r&&r.write("web-search-performance",{name:e},{ms:a})}}}}).call(this,t("8oxB"))},obyI:function(e,n,t){var o={development:{MIXPANEL_TOKEN:"dac2dd52a28429dd051be7fbc20090b4",INTERCOM_APP:"yiuldf9y",DEVELOPMENT:"true",LIVERELOAD_SERVER:"true",CODOTA_WEBSITE_URL:"https://staging.codota.com",TABNINE_WEBSITE_URL:"http://localhost:3000",TOKEN_SERVICE_NAME:"codota-dev",FULL_CODE_MAX_LINES_ON_START:30,GA_TRACKING_ID:"UA-125818377-4",GA_V4_TRACKING_ID:"G-9XGHTLPFBT",ADWORDS_TRACKING_ID:"AW-977450045",RUDDERSTACK_WRITE_KEY:"1kh9THbsbZjpwYPKlKSrTKVcxwR",RUDDERSTACK_DATA_PLANE_URL:"https://codota-dataplane.rudderstack.com",GOOGLE_OPTIMIZE_ID:"GTM-MMMC2KM",LOG_ERRORS:!1,HOTJAR:{id:1812027,version:6}},staging:{MIXPANEL_TOKEN:"dac2dd52a28429dd051be7fbc20090b4",INTERCOM_APP:"yiuldf9y",DEVELOPMENT:"false",LIVERELOAD_SERVER:"false",CODOTA_WEBSITE_URL:"https://staging.codota.com",TABNINE_WEBSITE_URL:"https://staging.tabnine.com",TOKEN_SERVICE_NAME:"codota",FULL_CODE_MAX_LINES_ON_START:30,GA_TRACKING_ID:"UA-125818377-4",GA_V4_TRACKING_ID:"G-9XGHTLPFBT",ADWORDS_TRACKING_ID:"AW-977450045",RUDDERSTACK_WRITE_KEY:"1kh9THbsbZjpwYPKlKSrTKVcxwR",RUDDERSTACK_DATA_PLANE_URL:"https://codota-dataplane.rudderstack.com",GOOGLE_OPTIMIZE_ID:"GTM-MMMC2KM",LOG_ERRORS:!0,HOTJAR:{id:1812027,version:6}},production:{MIXPANEL_TOKEN:"707d695b23f66e2adbb7b980bc6e4ef2",INTERCOM_APP:"x257zt14",DEVELOPMENT:"false",LIVERELOAD_SERVER:"false",CODOTA_WEBSITE_URL:"https://www.codota.com",TABNINE_WEBSITE_URL:"https://www.tabnine.com",TOKEN_SERVICE_NAME:"codota",FULL_CODE_MAX_LINES_ON_START:30,GA_TRACKING_ID:"UA-125818377-1",GA_V4_TRACKING_ID:"G-QCGQE414V3",ADWORDS_TRACKING_ID:"AW-977450045",RUDDERSTACK_WRITE_KEY:"1khB4V6oQ461q0v7iHts1Jrf7W3",RUDDERSTACK_DATA_PLANE_URL:"https://codota-dataplane.rudderstack.com",GOOGLE_OPTIMIZE_ID:"GTM-5M9HLWG",LOG_ERRORS:!0,HOTJAR:{id:415446,version:6}},codota_test:{MIXPANEL_TOKEN:"dac2dd52a28429dd051be7fbc20090b4",INTERCOM_APP:"yiuldf9y",DEVELOPMENT:"false",LIVERELOAD_SERVER:"false",CODOTA_WEBSITE_URL:"http://localhost:8080",TOKEN_SERVICE_NAME:"codota-dev",FULL_CODE_MAX_LINES_ON_START:30,GA_TRACKING_ID:"UA-125818377-4",GA_V4_TRACKING_ID:"G-9XGHTLPFBT",ADWORDS_TRACKING_ID:"AW-977450045",RUDDERSTACK_WRITE_KEY:"1kh9THbsbZjpwYPKlKSrTKVcxwR",RUDDERSTACK_DATA_PLANE_URL:"https://codota-dataplane.rudderstack.com",GOOGLE_OPTIMIZE_ID:"GTM-MMMC2KM",LOG_ERRORS:!0,HOTJAR:{id:1812027,version:6}}}[window.env];if(!o)throw new Error("No Configuration was found for Env "+window.env);e.exports=o},qP80:function(e,n,t){var o;o=function(e){return function(e){var n={};function t(o){if(n[o])return n[o].exports;var a=n[o]={exports:{},id:o,loaded:!1};return e[o].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}return t.m=e,t.c=n,t.p="",t(0)}([function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),a=u(t(1)),i=u(t(2)),l=u(t(5)),r=u(t(6)),s=u(t(7)),c=u(t(8)),g=u(t(9));function u(e){return e&&e.__esModule?e:{default:e}}function d(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var m=new Error("Timeout: Stub function not called."),p=void 0,y=function(e){return new Promise((function(n,t){var o=new v(n,t,e);b.requests.track(o);for(var a=0,i=b.stubs.count();a<i;a++){var l=b.stubs.at(a),r=l.url instanceof RegExp?l.url.test(o.url):l.url===o.url,s=!0;if(void 0!==l.method&&(s=l.method.toLowerCase()===o.config.method.toLowerCase()),r&&s){l.timeout&&f(e),o.respondWith(l.response),l.resolve();break}}}))},h=function(e){return(0,g.default)("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED")},f=function(e){throw h(e)},L=function(){function e(){d(this,e),this.__items=[]}return o(e,[{key:"reset",value:function(){this.__items.splice(0)}},{key:"track",value:function(e){this.__items.push(e)}},{key:"count",value:function(){return this.__items.length}},{key:"at",value:function(e){return this.__items[e]}},{key:"first",value:function(){return this.at(0)}},{key:"mostRecent",value:function(){return this.at(this.count()-1)}},{key:"debug",value:function(){console.log(),this.__items.forEach((function(e){var n=void 0;e.config?(n=e.config.method.toLowerCase()+", ",n+=e.config.url):(n=e.method.toLowerCase()+", ",n+=e.url+", ",n+=e.response.status+", ",e.response.response?n+=JSON.stringify(e.response.response):n+="{}"),console.log(n)}))}},{key:"get",value:function(e,n){return this.__items.find((function(t,o,a){var i=t.url instanceof RegExp?t.url.test(t.url):t.url===n,l=void 0;if(l=t.config?e.toLowerCase()===t.config.method.toLowerCase():e.toLowerCase()===t.method.toLowerCase(),i&&l)return t}))}},{key:"remove",value:function(e,n){var t=this.get(e,n),o=this.__items.indexOf(t);return this.__items.splice(o,1)[0]}}]),e}(),v=function(){function e(n,t,o){if(d(this,e),this.resolve=n,this.reject=t,this.config=o,this.headers=o.headers,this.url=(0,i.default)(o.url,o.params,o.paramsSerializer),this.timeout=o.timeout,this.withCredentials=o.withCredentials||!1,this.responseType=o.responseType,o.auth){var a=o.auth.username||"",c=o.auth.password||"";this.headers.Authorization="Basic "+(0,r.default)(a+":"+c)}if("undefined"!==typeof document&&"undefined"!==typeof document.cookie){var g=o.withCredentials||(0,l.default)(o.url)?s.default.read(o.xsrfCookieName):void 0;g&&(this.headers[o.xsrfHeaderName]=g)}}return o(e,[{key:"respondWithTimeout",value:function(){var e=new j(this,h(this.config));return(0,c.default)(this.resolve,this.reject,e),new Promise((function(n,t){b.wait((function(){t(e)}))}))}},{key:"respondWith",value:function(e){var n=new j(this,e);return(0,c.default)(this.resolve,this.reject,n),new Promise((function(e){b.wait((function(){e(n)}))}))}}]),e}(),j=function e(n,t){if(d(this,e),this.config=n.config,this.data=t.responseText||t.response,this.status=t.status,this.statusText=t.statusText,"headers"in t){var o={};for(var a in t.headers)o[a.toLowerCase()]=t.headers[a];t.headers=o}this.headers=t.headers,this.request=n,this.code=t.code},b={stubs:new L,requests:new L,delay:100,timeoutException:m,install:function(){var e=arguments.length<=0||void 0===arguments[0]?a.default:arguments[0];p=e.defaults.adapter,e.defaults.adapter=y},uninstall:function(){var e=arguments.length<=0||void 0===arguments[0]?a.default:arguments[0];e.defaults.adapter=p,this.stubs.reset(),this.requests.reset()},stubRequest:function(e,n){this.stubs.track({url:e,response:n})},stubOnce:function(e,n,t){var o=this;return new Promise((function(a){o.stubs.track({url:n,method:e,response:t,resolve:a})}))},stubFailure:function(e,n,t){var o=this;return new Promise((function(a,i){o.stubs.track({url:n,method:e,response:t,resolve:a}),setTimeout((function(){i(m)}),500)}))},stubTimeout:function(e){this.stubs.track({url:e,timeout:!0})},withMock:function(e){this.install();try{e()}finally{this.uninstall()}},wait:function(e){var n=arguments.length<=1||void 0===arguments[1]?this.delay:arguments[1];setTimeout(e,n)}};n.default=b,e.exports=n.default},function(n,t){n.exports=e},function(e,n,t){"use strict";var o=t(3);function a(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,t){if(!n)return e;var i;if(t)i=t(n);else if(o.isURLSearchParams(n))i=n.toString();else{var l=[];o.forEach(n,(function(e,n){null!==e&&"undefined"!==typeof e&&(o.isArray(e)&&(n+="[]"),o.isArray(e)||(e=[e]),o.forEach(e,(function(e){o.isDate(e)?e=e.toISOString():o.isObject(e)&&(e=JSON.stringify(e)),l.push(a(n)+"="+a(e))})))})),i=l.join("&")}return i&&(e+=(-1===e.indexOf("?")?"?":"&")+i),e}},function(e,n,t){"use strict";var o=t(4),a=Object.prototype.toString;function i(e){return"[object Array]"===a.call(e)}function l(e){return null!==e&&"object"===typeof e}function r(e){return"[object Function]"===a.call(e)}function s(e,n){if(null!==e&&"undefined"!==typeof e)if("object"===typeof e||i(e)||(e=[e]),i(e))for(var t=0,o=e.length;t<o;t++)n.call(null,e[t],t,e);else for(var a in e)e.hasOwnProperty(a)&&n.call(null,e[a],a,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isFormData:function(e){return"undefined"!==typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!==typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"===typeof e},isNumber:function(e){return"number"===typeof e},isObject:l,isUndefined:function(e){return"undefined"===typeof e},isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:r,isStream:function(e){return l(e)&&r(e.pipe)},isURLSearchParams:function(e){return"undefined"!==typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return"undefined"!==typeof window&&"undefined"!==typeof document&&"function"===typeof document.createElement},forEach:s,merge:function e(){var n={};function t(t,o){"object"===typeof n[o]&&"object"===typeof t?n[o]=e(n[o],t):n[o]=t}for(var o=0,a=arguments.length;o<a;o++)s(arguments[o],t);return n},extend:function(e,n,t){return s(n,(function(n,a){e[a]=t&&"function"===typeof n?o(n,t):n})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,n){"use strict";e.exports=function(e,n){return function(){for(var t=new Array(arguments.length),o=0;o<t.length;o++)t[o]=arguments[o];return e.apply(n,t)}}},function(e,n,t){"use strict";var o=t(3);e.exports=o.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function a(e){var o=e;return n&&(t.setAttribute("href",o),o=t.href),t.setAttribute("href",o),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=a(window.location.href),function(n){var t=o.isString(n)?a(n):n;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0}},function(e,n){"use strict";function t(){this.message="String contains an invalid character"}t.prototype=new Error,t.prototype.code=5,t.prototype.name="InvalidCharacterError",e.exports=function(e){for(var n,o,a=String(e),i="",l=0,r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";a.charAt(0|l)||(r="=",l%1);i+=r.charAt(63&n>>8-l%1*8)){if((o=a.charCodeAt(l+=3/4))>255)throw new t;n=n<<8|o}return i}},function(e,n,t){"use strict";var o=t(3);e.exports=o.isStandardBrowserEnv()?{write:function(e,n,t,a,i,l){var r=[];r.push(e+"="+encodeURIComponent(n)),o.isNumber(t)&&r.push("expires="+new Date(t).toGMTString()),o.isString(a)&&r.push("path="+a),o.isString(i)&&r.push("domain="+i),!0===l&&r.push("secure"),document.cookie=r.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,n,t){"use strict";var o=t(9);e.exports=function(e,n,t){var a=t.config.validateStatus;t.status&&a&&!a(t.status)?n(o("Request failed with status code "+t.status,t.config,null,t)):e(t)}},function(e,n,t){"use strict";var o=t(10);e.exports=function(e,n,t,a){var i=new Error(e);return o(i,n,t,a)}},function(e,n){"use strict";e.exports=function(e,n,t,o){return e.config=n,t&&(e.code=t),e.response=o,e}}])},e.exports=o(t("vDqi"))},qqId:function(e){e.exports=JSON.parse('{"request":{"path":"/api/assistant/completions/v2?q=com.google.gson.Gson"},"response":{"status":200,"response":{"tokens":["com","google","gson","Gson"],"completions":[{"value":{"fullName":"com.google.gson.Gson","key":"Lcom/google/gson/Gson;","type":"class","prefix":"com.google.gson","class":"Gson","artifactCount":2791,"niceName":"Gson","fullNiceName":"com.google.gson.Gson"},"private":false},{"value":{"fullName":"com.google.gson.Gson::fromJson","key":"Lcom/google/gson/Gson;fromJson","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":2129,"method":"fromJson","niceName":"Gson.fromJson","fullNiceName":"com.google.gson.Gson.fromJson"},"private":false},{"value":{"fullName":"com.google.gson.Gson::toJson","key":"Lcom/google/gson/Gson;toJson","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1987,"method":"toJson","niceName":"Gson.toJson","fullNiceName":"com.google.gson.Gson.toJson"},"private":false},{"value":{"fullName":"com.google.gson.Gson::<init>","key":"Lcom/google/gson/Gson;<init>","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1345,"method":"<init>","niceName":"Gson.<init>","fullNiceName":"com.google.gson.Gson.<init>"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder","key":"Lcom/google/gson/GsonBuilder;","type":"class","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1111,"niceName":"GsonBuilder","fullNiceName":"com.google.gson.GsonBuilder"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::create","key":"Lcom/google/gson/GsonBuilder;create","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1063,"method":"create","niceName":"GsonBuilder.create","fullNiceName":"com.google.gson.GsonBuilder.create"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::<init>","key":"Lcom/google/gson/GsonBuilder;<init>","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1024,"method":"<init>","niceName":"GsonBuilder.<init>","fullNiceName":"com.google.gson.GsonBuilder.<init>"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerTypeAdapter","key":"Lcom/google/gson/GsonBuilder;registerTypeAdapter","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":410,"method":"registerTypeAdapter","niceName":"GsonBuilder.registerTypeAdapter","fullNiceName":"com.google.gson.GsonBuilder.registerTypeAdapter"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::setPrettyPrinting","key":"Lcom/google/gson/GsonBuilder;setPrettyPrinting","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":364,"method":"setPrettyPrinting","niceName":"GsonBuilder.setPrettyPrinting","fullNiceName":"com.google.gson.GsonBuilder.setPrettyPrinting"},"private":false},{"value":{"fullName":"com.google.gson.Gson::toJsonTree","key":"Lcom/google/gson/Gson;toJsonTree","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":259,"method":"toJsonTree","niceName":"Gson.toJsonTree","fullNiceName":"com.google.gson.Gson.toJsonTree"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::serializeNulls","key":"Lcom/google/gson/GsonBuilder;serializeNulls","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":128,"method":"serializeNulls","niceName":"GsonBuilder.serializeNulls","fullNiceName":"com.google.gson.GsonBuilder.serializeNulls"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::disableHtmlEscaping","key":"Lcom/google/gson/GsonBuilder;disableHtmlEscaping","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":107,"method":"disableHtmlEscaping","niceName":"GsonBuilder.disableHtmlEscaping","fullNiceName":"com.google.gson.GsonBuilder.disableHtmlEscaping"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::setDateFormat","key":"Lcom/google/gson/GsonBuilder;setDateFormat","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":107,"method":"setDateFormat","niceName":"GsonBuilder.setDateFormat","fullNiceName":"com.google.gson.GsonBuilder.setDateFormat"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerTypeAdapterFactory","key":"Lcom/google/gson/GsonBuilder;registerTypeAdapterFactory","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":104,"method":"registerTypeAdapterFactory","niceName":"GsonBuilder.registerTypeAdapterFactory","fullNiceName":"com.google.gson.GsonBuilder.registerTypeAdapterFactory"},"private":false},{"value":{"fullName":"com.google.gson.Gson::getAdapter","key":"Lcom/google/gson/Gson;getAdapter","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":101,"method":"getAdapter","niceName":"Gson.getAdapter","fullNiceName":"com.google.gson.Gson.getAdapter"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::setFieldNamingPolicy","key":"Lcom/google/gson/GsonBuilder;setFieldNamingPolicy","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":73,"method":"setFieldNamingPolicy","niceName":"GsonBuilder.setFieldNamingPolicy","fullNiceName":"com.google.gson.GsonBuilder.setFieldNamingPolicy"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerTypeHierarchyAdapter","key":"Lcom/google/gson/GsonBuilder;registerTypeHierarchyAdapter","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":57,"method":"registerTypeHierarchyAdapter","niceName":"GsonBuilder.registerTypeHierarchyAdapter","fullNiceName":"com.google.gson.GsonBuilder.registerTypeHierarchyAdapter"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::excludeFieldsWithoutExposeAnnotation","key":"Lcom/google/gson/GsonBuilder;excludeFieldsWithoutExposeAnnotation","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":56,"method":"excludeFieldsWithoutExposeAnnotation","niceName":"GsonBuilder.excludeFieldsWithoutExposeAnnotation","fullNiceName":"com.google.gson.GsonBuilder.excludeFieldsWithoutExposeAnnotation"},"private":false},{"value":{"fullName":"com.google.gson.Gson::getDelegateAdapter","key":"Lcom/google/gson/Gson;getDelegateAdapter","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":47,"method":"getDelegateAdapter","niceName":"Gson.getDelegateAdapter","fullNiceName":"com.google.gson.Gson.getDelegateAdapter"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::setExclusionStrategies","key":"Lcom/google/gson/GsonBuilder;setExclusionStrategies","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":38,"method":"setExclusionStrategies","niceName":"GsonBuilder.setExclusionStrategies","fullNiceName":"com.google.gson.GsonBuilder.setExclusionStrategies"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::enableComplexMapKeySerialization","key":"Lcom/google/gson/GsonBuilder;enableComplexMapKeySerialization","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":26,"method":"enableComplexMapKeySerialization","niceName":"GsonBuilder.enableComplexMapKeySerialization","fullNiceName":"com.google.gson.GsonBuilder.enableComplexMapKeySerialization"},"private":false},{"value":{"fullName":"com.google.gson.Gson::newJsonWriter","key":"Lcom/google/gson/Gson;newJsonWriter","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":26,"method":"newJsonWriter","niceName":"Gson.newJsonWriter","fullNiceName":"com.google.gson.Gson.newJsonWriter"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::setLenient","key":"Lcom/google/gson/GsonBuilder;setLenient","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":20,"method":"setLenient","niceName":"GsonBuilder.setLenient","fullNiceName":"com.google.gson.GsonBuilder.setLenient"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::serializeSpecialFloatingPointValues","key":"Lcom/google/gson/GsonBuilder;serializeSpecialFloatingPointValues","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":17,"method":"serializeSpecialFloatingPointValues","niceName":"GsonBuilder.serializeSpecialFloatingPointValues","fullNiceName":"com.google.gson.GsonBuilder.serializeSpecialFloatingPointValues"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::excludeFieldsWithModifiers","key":"Lcom/google/gson/GsonBuilder;excludeFieldsWithModifiers","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":17,"method":"excludeFieldsWithModifiers","niceName":"GsonBuilder.excludeFieldsWithModifiers","fullNiceName":"com.google.gson.GsonBuilder.excludeFieldsWithModifiers"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::addSerializationExclusionStrategy","key":"Lcom/google/gson/GsonBuilder;addSerializationExclusionStrategy","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":17,"method":"addSerializationExclusionStrategy","niceName":"GsonBuilder.addSerializationExclusionStrategy","fullNiceName":"com.google.gson.GsonBuilder.addSerializationExclusionStrategy"},"private":false},{"value":{"fullName":"com.google.gson.Gson::newJsonReader","key":"Lcom/google/gson/Gson;newJsonReader","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":16,"method":"newJsonReader","niceName":"Gson.newJsonReader","fullNiceName":"com.google.gson.Gson.newJsonReader"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::setVersion","key":"Lcom/google/gson/GsonBuilder;setVersion","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":13,"method":"setVersion","niceName":"GsonBuilder.setVersion","fullNiceName":"com.google.gson.GsonBuilder.setVersion"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::setFieldNamingStrategy","key":"Lcom/google/gson/GsonBuilder;setFieldNamingStrategy","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":12,"method":"setFieldNamingStrategy","niceName":"GsonBuilder.setFieldNamingStrategy","fullNiceName":"com.google.gson.GsonBuilder.setFieldNamingStrategy"},"private":false},{"value":{"fullName":"com.google.gson.Gson::assertFullConsumption","key":"Lcom/google/gson/Gson;assertFullConsumption","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":8,"method":"assertFullConsumption","niceName":"Gson.assertFullConsumption","fullNiceName":"com.google.gson.Gson.assertFullConsumption"},"private":false},{"value":{"fullName":"com.google.gson.Gson::floatAdapter","key":"Lcom/google/gson/Gson;floatAdapter","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":8,"method":"floatAdapter","niceName":"Gson.floatAdapter","fullNiceName":"com.google.gson.Gson.floatAdapter"},"private":false},{"value":{"fullName":"com.google.gson.Gson::longAdapter","key":"Lcom/google/gson/Gson;longAdapter","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":8,"method":"longAdapter","niceName":"Gson.longAdapter","fullNiceName":"com.google.gson.Gson.longAdapter"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::addTypeAdaptersForDate","key":"Lcom/google/gson/GsonBuilder;addTypeAdaptersForDate","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":8,"method":"addTypeAdaptersForDate","niceName":"GsonBuilder.addTypeAdaptersForDate","fullNiceName":"com.google.gson.GsonBuilder.addTypeAdaptersForDate"},"private":false},{"value":{"fullName":"com.google.gson.Gson::doubleAdapter","key":"Lcom/google/gson/Gson;doubleAdapter","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":8,"method":"doubleAdapter","niceName":"Gson.doubleAdapter","fullNiceName":"com.google.gson.Gson.doubleAdapter"},"private":false},{"value":{"fullName":"com.google.gson.Gson$FutureTypeAdapter","key":"Lcom/google/gson/Gson$FutureTypeAdapter;","type":"class","prefix":"com.google.gson","class":"Gson$FutureTypeAdapter","artifactCount":7,"niceName":"Gson$FutureTypeAdapter","fullNiceName":"com.google.gson.Gson$FutureTypeAdapter"},"private":false},{"value":{"fullName":"com.google.gson.Gson$FutureTypeAdapter::setDelegate","key":"Lcom/google/gson/Gson$FutureTypeAdapter;setDelegate","type":"method","prefix":"com.google.gson","class":"Gson$FutureTypeAdapter","artifactCount":7,"method":"setDelegate","niceName":"Gson$FutureTypeAdapter.setDelegate","fullNiceName":"com.google.gson.Gson$FutureTypeAdapter.setDelegate"},"private":false},{"value":{"fullName":"com.google.gson.Gson$FutureTypeAdapter::<init>","key":"Lcom/google/gson/Gson$FutureTypeAdapter;<init>","type":"method","prefix":"com.google.gson","class":"Gson$FutureTypeAdapter","artifactCount":7,"method":"<init>","niceName":"Gson$FutureTypeAdapter.<init>","fullNiceName":"com.google.gson.Gson$FutureTypeAdapter.<init>"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::addDeserializationExclusionStrategy","key":"Lcom/google/gson/GsonBuilder;addDeserializationExclusionStrategy","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":7,"method":"addDeserializationExclusionStrategy","niceName":"GsonBuilder.addDeserializationExclusionStrategy","fullNiceName":"com.google.gson.GsonBuilder.addDeserializationExclusionStrategy"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::setLongSerializationPolicy","key":"Lcom/google/gson/GsonBuilder;setLongSerializationPolicy","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":5,"method":"setLongSerializationPolicy","niceName":"GsonBuilder.setLongSerializationPolicy","fullNiceName":"com.google.gson.GsonBuilder.setLongSerializationPolicy"},"private":false},{"value":{"fullName":"com.google.gson.Gson::fieldNamingStrategy","key":"Lcom/google/gson/Gson;fieldNamingStrategy","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":5,"method":"fieldNamingStrategy","niceName":"Gson.fieldNamingStrategy","fullNiceName":"com.google.gson.Gson.fieldNamingStrategy"},"private":false},{"value":{"fullName":"com.google.gson.Gson::toString","key":"Lcom/google/gson/Gson;toString","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":4,"method":"toString","niceName":"Gson.toString","fullNiceName":"com.google.gson.Gson.toString"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::disableInnerClassSerialization","key":"Lcom/google/gson/GsonBuilder;disableInnerClassSerialization","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":4,"method":"disableInnerClassSerialization","niceName":"GsonBuilder.disableInnerClassSerialization","fullNiceName":"com.google.gson.GsonBuilder.disableInnerClassSerialization"},"private":false},{"value":{"fullName":"com.google.gson.Gson::atomicLongArrayAdapter","key":"Lcom/google/gson/Gson;atomicLongArrayAdapter","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":3,"method":"atomicLongArrayAdapter","niceName":"Gson.atomicLongArrayAdapter","fullNiceName":"com.google.gson.Gson.atomicLongArrayAdapter"},"private":false},{"value":{"fullName":"com.google.gson.Gson::atomicLongAdapter","key":"Lcom/google/gson/Gson;atomicLongAdapter","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":3,"method":"atomicLongAdapter","niceName":"Gson.atomicLongAdapter","fullNiceName":"com.google.gson.Gson.atomicLongAdapter"},"private":false},{"value":{"fullName":"com.google.gson.Gson::checkValidFloatingPoint","key":"Lcom/google/gson/Gson;checkValidFloatingPoint","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":2,"method":"checkValidFloatingPoint","niceName":"Gson.checkValidFloatingPoint","fullNiceName":"com.google.gson.Gson.checkValidFloatingPoint"},"private":false},{"value":{"fullName":"com.google.gson.Gson::excluder","key":"Lcom/google/gson/Gson;excluder","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":2,"method":"excluder","niceName":"Gson.excluder","fullNiceName":"com.google.gson.Gson.excluder"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::generateNonExecutableJson","key":"Lcom/google/gson/GsonBuilder;generateNonExecutableJson","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":2,"method":"generateNonExecutableJson","niceName":"GsonBuilder.generateNonExecutableJson","fullNiceName":"com.google.gson.GsonBuilder.generateNonExecutableJson"},"private":false},{"value":{"fullName":"com.google.gson.Gson::newBuilder","key":"Lcom/google/gson/Gson;newBuilder","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":2,"method":"newBuilder","niceName":"Gson.newBuilder","fullNiceName":"com.google.gson.Gson.newBuilder"},"private":false},{"value":{"fullName":"com.google.gson.Gson::fromJSON","key":"Lcom/google/gson/Gson;fromJSON","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1,"method":"fromJSON","niceName":"Gson.fromJSON","fullNiceName":"com.google.gson.Gson.fromJSON"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerInstanceCreator","key":"Lcom/google/gson/GsonBuilder;registerInstanceCreator","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1,"method":"registerInstanceCreator","niceName":"GsonBuilder.registerInstanceCreator","fullNiceName":"com.google.gson.GsonBuilder.registerInstanceCreator"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerSerializer","key":"Lcom/google/gson/GsonBuilder;registerSerializer","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1,"method":"registerSerializer","niceName":"GsonBuilder.registerSerializer","fullNiceName":"com.google.gson.GsonBuilder.registerSerializer"},"private":false},{"value":{"fullName":"com.google.gson.Gson::htmlSafe","key":"Lcom/google/gson/Gson;htmlSafe","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1,"method":"htmlSafe","niceName":"Gson.htmlSafe","fullNiceName":"com.google.gson.Gson.htmlSafe"},"private":false},{"value":{"fullName":"com.google.gson.Gson::serializeNulls","key":"Lcom/google/gson/Gson;serializeNulls","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1,"method":"serializeNulls","niceName":"Gson.serializeNulls","fullNiceName":"com.google.gson.Gson.serializeNulls"},"private":false},{"value":{"fullName":"com.google.gson.Gson::toGson","key":"Lcom/google/gson/Gson;toGson","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1,"method":"toGson","niceName":"Gson.toGson","fullNiceName":"com.google.gson.Gson.toGson"},"private":false},{"value":{"fullName":"com.google.gson.GsonToMiniGsonTypeAdapter","key":"Lcom/google/gson/GsonToMiniGsonTypeAdapter;","type":"class","prefix":"com.google.gson","class":"GsonToMiniGsonTypeAdapter","artifactCount":1,"niceName":"GsonToMiniGsonTypeAdapter","fullNiceName":"com.google.gson.GsonToMiniGsonTypeAdapter"},"private":false},{"value":{"fullName":"com.google.gson.GsonToMiniGsonTypeAdapter::createDeserializationContext","key":"Lcom/google/gson/GsonToMiniGsonTypeAdapter;createDeserializationContext","type":"method","prefix":"com.google.gson","class":"GsonToMiniGsonTypeAdapter","artifactCount":1,"method":"createDeserializationContext","niceName":"GsonToMiniGsonTypeAdapter.createDeserializationContext","fullNiceName":"com.google.gson.GsonToMiniGsonTypeAdapter.createDeserializationContext"},"private":false},{"value":{"fullName":"com.google.gson.GsonToMiniGsonTypeAdapter::createSerializationContext","key":"Lcom/google/gson/GsonToMiniGsonTypeAdapter;createSerializationContext","type":"method","prefix":"com.google.gson","class":"GsonToMiniGsonTypeAdapter","artifactCount":1,"method":"createSerializationContext","niceName":"GsonToMiniGsonTypeAdapter.createSerializationContext","fullNiceName":"com.google.gson.GsonToMiniGsonTypeAdapter.createSerializationContext"},"private":false},{"value":{"fullName":"com.google.gson.Gson::fromGson","key":"Lcom/google/gson/Gson;fromGson","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1,"method":"fromGson","niceName":"Gson.fromGson","fullNiceName":"com.google.gson.Gson.fromGson"},"private":false},{"value":{"fullName":"com.google.gson.Gson::lsomJson","key":"Lcom/google/gson/Gson;lsomJson","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1,"method":"lsomJson","niceName":"Gson.lsomJson","fullNiceName":"com.google.gson.Gson.lsomJson"},"private":false},{"value":{"fullName":"com.google.gson.Gson::parse","key":"Lcom/google/gson/Gson;parse","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1,"method":"parse","niceName":"Gson.parse","fullNiceName":"com.google.gson.Gson.parse"},"private":false},{"value":{"fullName":"com.google.gson.Gson::toJSON","key":"Lcom/google/gson/Gson;toJSON","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1,"method":"toJSON","niceName":"Gson.toJSON","fullNiceName":"com.google.gson.Gson.toJSON"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::build","key":"Lcom/google/gson/GsonBuilder;build","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1,"method":"build","niceName":"GsonBuilder.build","fullNiceName":"com.google.gson.GsonBuilder.build"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerDeserializer","key":"Lcom/google/gson/GsonBuilder;registerDeserializer","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1,"method":"registerDeserializer","niceName":"GsonBuilder.registerDeserializer","fullNiceName":"com.google.gson.GsonBuilder.registerDeserializer"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerDeserializerForTypeHierarchy","key":"Lcom/google/gson/GsonBuilder;registerDeserializerForTypeHierarchy","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1,"method":"registerDeserializerForTypeHierarchy","niceName":"GsonBuilder.registerDeserializerForTypeHierarchy","fullNiceName":"com.google.gson.GsonBuilder.registerDeserializerForTypeHierarchy"},"private":false},{"value":{"fullName":"com.google.gson.GsonToMiniGsonTypeAdapter::<init>","key":"Lcom/google/gson/GsonToMiniGsonTypeAdapter;<init>","type":"method","prefix":"com.google.gson","class":"GsonToMiniGsonTypeAdapter","artifactCount":1,"method":"<init>","niceName":"GsonToMiniGsonTypeAdapter.<init>","fullNiceName":"com.google.gson.GsonToMiniGsonTypeAdapter.<init>"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerIfAbsent","key":"Lcom/google/gson/GsonBuilder;registerIfAbsent","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1,"method":"registerIfAbsent","niceName":"GsonBuilder.registerIfAbsent","fullNiceName":"com.google.gson.GsonBuilder.registerIfAbsent"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerSerializerForTypeHierarchy","key":"Lcom/google/gson/GsonBuilder;registerSerializerForTypeHierarchy","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1,"method":"registerSerializerForTypeHierarchy","niceName":"GsonBuilder.registerSerializerForTypeHierarchy","fullNiceName":"com.google.gson.GsonBuilder.registerSerializerForTypeHierarchy"},"private":false},{"value":{"fullName":"com.google.gson.Gson::fromjson","key":"Lcom/google/gson/Gson;fromjson","type":"method","prefix":"com.google.gson","class":"Gson","artifactCount":1,"method":"fromjson","niceName":"Gson.fromjson","fullNiceName":"com.google.gson.Gson.fromjson"},"private":false},{"value":{"fullName":"com.google.gson.GsonBuilder::registerInstanceCreatorForTypeHierarchy","key":"Lcom/google/gson/GsonBuilder;registerInstanceCreatorForTypeHierarchy","type":"method","prefix":"com.google.gson","class":"GsonBuilder","artifactCount":1,"method":"registerInstanceCreatorForTypeHierarchy","niceName":"GsonBuilder.registerInstanceCreatorForTypeHierarchy","fullNiceName":"com.google.gson.GsonBuilder.registerInstanceCreatorForTypeHierarchy"},"private":false}]},"headers":{"x-powered-by":"Express","access-control-allow-origin":"*","content-length":"24109","content-security-policy":"frame-ancestors \'none\'","content-type":"application/json; charset=utf-8","date":"Mon, 05 Oct 2020 08:54:48 GMT","etag":"W/\\"5e2d-1eEJnEmIa2yLq808EOxRc926dWQ\\"","set-cookie":["gate.connect.sid=s%3Aruwrt7gI1EVNE8zkXdzrOb3u5aUDr54f.4gvxwSymLK7WmzQ5SwqJ%2FiO%2F8HlYe7QY5hiPqiLYG38; Path=/; Expires=Thu, 08 Oct 2020 08:54:48 GMT; HttpOnly; Secure"],"vary":"Accept-Encoding","via":"1.1 spaces-router (8dd0c4f2604e), 1.1 spaces-router (8dd0c4f2604e)","x-frame-options":"deny","x-gateway-response-time-ms":"15","x-response-time-ms":"5","connection":"close"}}}')},sLGh:function(e){e.exports=JSON.parse('{"request":{"path":"/code/api/java/classes/popular/count"},"response":{"status":200,"response":{"total":100},"headers":{"x-powered-by":"Express","x-robots-tag":"noindex, nofollow","content-type":"application/json; charset=utf-8","content-length":"13","etag":"W/\\"d-BPjddSsASyNfDcYYxB0t6IE/lak\\"","vary":"Accept-Encoding","date":"Mon, 05 Oct 2020 12:48:21 GMT","connection":"keep-alive"}}}')},tQ2B:function(e,n,t){"use strict";var o=t("xTJ+"),a=t("Rn+g"),i=t("MLWZ"),l=t("w0Vi"),r=t("OTTw"),s=t("LYNF");e.exports=function(e){return new Promise((function(n,c){var g=e.data,u=e.headers;o.isFormData(g)&&delete u["Content-Type"];var d=new XMLHttpRequest;if(e.auth){var m=e.auth.username||"",p=e.auth.password||"";u.Authorization="Basic "+btoa(m+":"+p)}if(d.open(e.method.toUpperCase(),i(e.url,e.params,e.paramsSerializer),!0),d.timeout=e.timeout,d.onreadystatechange=function(){if(d&&4===d.readyState&&(0!==d.status||d.responseURL&&0===d.responseURL.indexOf("file:"))){var t="getAllResponseHeaders"in d?l(d.getAllResponseHeaders()):null,o={data:e.responseType&&"text"!==e.responseType?d.response:d.responseText,status:d.status,statusText:d.statusText,headers:t,config:e,request:d};a(n,c,o),d=null}},d.onerror=function(){c(s("Network Error",e,null,d)),d=null},d.ontimeout=function(){c(s("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",d)),d=null},o.isStandardBrowserEnv()){var y=t("eqyj"),h=(e.withCredentials||r(e.url))&&e.xsrfCookieName?y.read(e.xsrfCookieName):void 0;h&&(u[e.xsrfHeaderName]=h)}if("setRequestHeader"in d&&o.forEach(u,(function(e,n){"undefined"===typeof g&&"content-type"===n.toLowerCase()?delete u[n]:d.setRequestHeader(n,e)})),e.withCredentials&&(d.withCredentials=!0),e.responseType)try{d.responseType=e.responseType}catch(f){if("json"!==e.responseType)throw f}"function"===typeof e.onDownloadProgress&&d.addEventListener("progress",e.onDownloadProgress),"function"===typeof e.onUploadProgress&&d.upload&&d.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){d&&(d.abort(),c(e),d=null)})),void 0===g&&(g=null),d.send(g)}))}},tzDO:function(e){e.exports=JSON.parse('{"request":{"path":"/code/api/java/classes/popular/0-15"},"response":{"status":200,"response":[{"name":"java.lang.String","methods":["equals","length","substring","startsWith","format","split","trim","valueOf","indexOf","endsWith","toLowerCase","contains","getBytes","<init>","equalsIgnoreCase","replace","isEmpty","charAt","hashCode","lastIndexOf","replaceAll","toUpperCase","compareTo","toCharArray","matches","toString","replaceFirst","concat","join","compareToIgnoreCase","intern","getChars","regionMatches","codePointAt","subSequence","contentEquals","copyValueOf","chars","codePointCount","offsetByCodePoints","codePoints","codePointBefore","fastIndexOf","indexOfSupplementary","foldCase","indexAndLength","lastIndexOfSupplementary","startEndAndLength","_getChars","failedBoundsCheck","isBlank"]},{"name":"java.util.List","methods":["add","size","get","isEmpty","addAll","toArray","contains","remove","iterator","clear","stream","forEach","set","subList","indexOf","equals","hashCode","removeAll","listIterator","sort","containsAll","lastIndexOf","retainAll","removeIf","parallelStream","spliterator","replaceAll","of","copyOf"]},{"name":"java.lang.Object","methods":["getClass","toString","equals","hashCode","wait","notifyAll","clone","<init>","notify","finalize"]},{"name":"java.util.Map","methods":["put","get","entrySet","containsKey","keySet","values","remove","size","isEmpty","clear","putAll","forEach","equals","computeIfAbsent","hashCode","getOrDefault","containsValue","putIfAbsent","compute","merge","replace","computeIfPresent","replaceAll","of","copyOf","entry"]},{"name":"java.util.ArrayList","methods":["<init>","add","size","get","toArray","addAll","remove","clear","isEmpty","iterator","contains","set","indexOf","clone","subList","stream","ensureCapacity","trimToSize","removeAll","toString","equals","listIterator","forEach","hashCode","sort","retainAll","containsAll","lastIndexOf","removeRange","removeIf","parallelStream","replaceAll","throwIndexOutOfBoundsException","spliterator","newCapacity","outOfBoundsMsg","ensureCapacityInternal","elementData","rangeCheckForAdd","batchRemove","grow","rangeCheck"]},{"name":"java.lang.Class","methods":["getName","getSimpleName","getClassLoader","isAssignableFrom","forName","newInstance","getMethod","getResourceAsStream","getSuperclass","getConstructor","cast","isInstance","getCanonicalName","getDeclaredField","isArray","getAnnotation","getDeclaredFields","getResource","getDeclaredMethod","getMethods","getPackage","getComponentType","isPrimitive","getDeclaredMethods","getInterfaces","isInterface","getDeclaredConstructor","getModifiers","getField","isAnnotationPresent","toString","isEnum","getEnumConstants","getConstructors","asSubclass","getGenericSuperclass","getFields","getProtectionDomain","getDeclaredConstructors","getGenericInterfaces","getTypeParameters","getAnnotations","getEnclosingClass","isAnnotation","isAnonymousClass","getDeclaringClass","isMemberClass","getDeclaredClasses","getDeclaredAnnotations","isLocalClass","getTypeName","getClasses","isSynthetic","getAnnotationsByType","getEnclosingMethod","getDeclaredAnnotation","getEnclosingConstructor","getSigners","desiredAssertionStatus","getModule","toGenericString","getDeclaredAnnotationsByType","getAnnotatedInterfaces","getAnnotatedSuperclass","getDeclaredAnnotations0","getDeclaredClasses0","getDeclaredMethods0","getAnnotations0","isDeclaredAnnotationPresent","classForName","getDeclaredFields0","getName0","getClassCache","getDeclaredConstructors0","getClassLoaderImpl","getInnerClassName","getSignatureAttribute","getPackageName","equals","<init>","getPrimitiveClass","getSimpleBinaryName","isLocalOrAnonymousClass"]},{"name":"java.util.HashMap","methods":["<init>","put","get","containsKey","keySet","remove","entrySet","values","size","clear","isEmpty","putAll","clone","toString","containsValue","equals","hashCode","computeIfAbsent","getOrDefault","forEach","putIfAbsent","compute","merge","replace","computeIfPresent","init","addNewEntry","constructorPut","removeNullKey","secondaryHash","capacityForInitSize","constructorPutAll","putValueForNullKey","doubleCapacity","makeTable","postRemove","addNewEntryForNullKey","constructorNewEntry","ensureCapacity","preModify","replaceAll","hash"]},{"name":"java.lang.System","methods":["currentTimeMillis","getProperty","arraycopy","exit","setProperty","nanoTime","getenv","getProperties","identityHashCode","getSecurityManager","gc","lineSeparator","clearProperty","setOut","setErr","loadLibrary","console","load","setSecurityManager","mapLibraryName","runFinalization","setProperties","setIn","inheritedChannel","initSystemProperties","logI","setFieldImpl","specialProperties","log","arraycopyFast","parsePropertyAssignments","checkPropertyName","logE","mapLibraryName0","arraycopyCheckBounds","logW","runFinalizersOnExit","robovmSpecialProperties","bugvmSpecialProperties"]},{"name":"java.util.Set","methods":["add","contains","iterator","size","isEmpty","addAll","remove","toArray","stream","clear","removeAll","forEach","equals","containsAll","retainAll","hashCode","removeIf","parallelStream","spliterator","of","copyOf"]},{"name":"java.lang.IllegalArgumentException","methods":["<init>","getMessage","printStackTrace","initCause","toString","getLocalizedMessage","getStackTrace","setStackTrace","getCause","addSuppressed","fillInStackTrace","getSuppressed"]},{"name":"java.lang.StringBuilder","methods":["append","toString","<init>","length","setLength","charAt","deleteCharAt","insert","substring","delete","replace","setCharAt","indexOf","lastIndexOf","reverse","appendCodePoint","getChars","subSequence","ensureCapacity","trimToSize","capacity","codePointAt","codePointBefore","codePointCount","offsetByCodePoints","replace0","delete0","deleteCharAt0","getValue","insert0","appendNull","append0","reverse0","set","chars","codePoints"]},{"name":"java.util.Arrays","methods":["asList","toString","equals","sort","copyOf","fill","stream","hashCode","copyOfRange","binarySearch","deepEquals","deepToString","deepHashCode","setAll","parallelSort","parallelSetAll","spliterator","checkBinarySearchBounds","checkOffsetAndCount","deepToStringImpl","deepToStringImplContains","checkStartAndEnd","deepEqualsElements","deepHashCodeElement","parallelPrefix","deepEquals0","mergeSort","swap","compare","binarySearch0"]},{"name":"java.util.Collections","methods":["emptyList","sort","singletonList","unmodifiableList","emptyMap","emptySet","unmodifiableMap","singleton","unmodifiableSet","singletonMap","addAll","reverse","unmodifiableCollection","shuffle","enumeration","list","synchronizedMap","synchronizedList","reverseOrder","emptyIterator","binarySearch","synchronizedSet","max","newSetFromMap","nCopies","min","disjoint","unmodifiableSortedSet","swap","unmodifiableSortedMap","emptyEnumeration","frequency","synchronizedSortedMap","synchronizedCollection","rotate","synchronizedSortedSet","checkedList","emptySortedSet","copy","fill","checkedMap","emptyListIterator","indexOfSubList","checkedSet","replaceAll","unmodifiableNavigableMap","emptySortedMap","emptyNavigableSet","emptyNavigableMap","asLifoQueue","unmodifiableNavigableSet","checkedCollection","roundUpToPowerOfTwo","checkType","secondaryIdentityHash","secondaryHash","lastIndexOfSubList","checkedSortedSet","synchronizedNavigableSet","checkedSortedMap","iteratorBinarySearch","indexedBinarySearch","synchronizedNavigableMap"]},{"name":"java.lang.Integer","methods":["parseInt","toString","valueOf","intValue","<init>","toHexString","equals","compareTo","hashCode","compare","longValue","decode","numberOfLeadingZeros","getInteger","doubleValue","toBinaryString","byteValue","bitCount","shortValue","highestOneBit","numberOfTrailingZeros","signum","rotateLeft","reverseBytes","floatValue","toOctalString","min","toUnsignedLong","parseUnsignedInt","lowestOneBit","max","reverse","compareUnsigned","rotateRight","toUnsignedString","remainderUnsigned","divideUnsigned","parse","invalidInt","stringSize","sum","getChars"]},{"name":"java.lang.RuntimeException","methods":["<init>","getMessage","printStackTrace","getCause","toString","getStackTrace","initCause","setStackTrace","getLocalizedMessage","fillInStackTrace","addSuppressed","getSuppressed"]}],"headers":{"x-powered-by":"Express","x-robots-tag":"noindex, nofollow","content-type":"application/json; charset=utf-8","content-length":"8120","etag":"W/\\"1fb8-SPTRqY64WgGU6oPqnYBYn6KzOPs\\"","vary":"Accept-Encoding","date":"Mon, 05 Oct 2020 12:48:24 GMT","connection":"keep-alive"}}}')},vDqi:function(e,n,t){e.exports=t("zuR4")},vst4:function(e){e.exports=JSON.parse('{"request":{"path":"/api/assistant/class/com.google.gson.Gson/methods?limit=20"},"response":{"status":200,"method":"GET","response":{"className":"com.google.gson.Gson","members":[{"name":"fromJson","description":"This method deserializes the specified Json into an object of the specified\\ntype. This method is use"},{"name":"toJson","description":"This method serializes the specified object, including those of generic types,\\ninto its equivalent J"},{"name":"<init>","description":""},{"name":"toJsonTree","description":"This method serializes the specified object, including those of generic types,\\ninto its equivalent r"},{"name":"getAdapter","description":"Returns the type adapter for type."},{"name":"getDelegateAdapter","description":"This method is used to get an alternate type adapter for the specified type.\\nThis is used to access "},{"name":"newJsonWriter","description":"Returns a new JSON writer configured for this GSON and with the non-execute\\nprefix if that is config"},{"name":"newJsonReader","description":"Returns a new JSON reader configured for the settings on this Gson instance."},{"name":"assertFullConsumption","description":""},{"name":"doubleAdapter","description":""},{"name":"floatAdapter","description":""},{"name":"longAdapter","description":""},{"name":"fieldNamingStrategy","description":""},{"name":"toString","description":""},{"name":"atomicLongAdapter","description":""},{"name":"atomicLongArrayAdapter","description":""},{"name":"checkValidFloatingPoint","description":""},{"name":"excluder","description":""},{"name":"newBuilder","description":""},{"name":"fromGson","description":""}]},"headers":{"x-powered-by":"Express","access-control-allow-origin":"*","content-length":"1499","content-security-policy":"frame-ancestors \'none\'","content-type":"application/json; charset=utf-8","date":"Mon, 05 Oct 2020 08:54:48 GMT","etag":"W/\\"5db-09f9SNj3uJOvPgt+u6ySVQx6cmU\\"","set-cookie":["gate.connect.sid=s%3Aruwrt7gI1EVNE8zkXdzrOb3u5aUDr54f.4gvxwSymLK7WmzQ5SwqJ%2FiO%2F8HlYe7QY5hiPqiLYG38; Path=/; Expires=Thu, 08 Oct 2020 08:54:48 GMT; HttpOnly; Secure"],"vary":"Accept-Encoding","via":"1.1 spaces-router (8dd0c4f2604e), 1.1 spaces-router (8dd0c4f2604e)","x-frame-options":"deny","x-gateway-response-time-ms":"47","x-response-time-ms":"39","connection":"close"}}}')},w0Vi:function(e,n,t){"use strict";var o=t("xTJ+"),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var n,t,i,l={};return e?(o.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),n=o.trim(e.substr(0,i)).toLowerCase(),t=o.trim(e.substr(i+1)),n){if(l[n]&&a.indexOf(n)>=0)return;l[n]="set-cookie"===n?(l[n]?l[n]:[]).concat([t]):l[n]?l[n]+", "+t:t}})),l):l}},w9hs:function(e,n,t){var o,a=function(){var e=function(e){var n=e.constructor;return n.prototype=e,n}({constructor:function(e,t){this.array=[],this.compare=t||n;for(var o=e.length,a=0;a<o;)this.insert(e[a++])},insert:function(e){for(var n,t,o=this.array,a=this.compare,i=o.length-1,l=0,r=-1;i>=l;)if((t=a(o[n=(i+l)/2>>>0],e))<0)l=n+1;else{if(!(t>0)){r=n;break}i=n-1}for(-1===r&&(r=i),r++,i=o.length-1;r<i&&0===a(e,o[r]);)r++;for(n=o.length,o.push(e);n>r;)o[n]=o[--n];return o[r]=e,this},search:function(e){for(var n,t,o=this.array,a=this.compare,i=o.length-1,l=0;i>=l;)if((t=a(o[n=(i+l)/2>>>0],e))<0)l=n+1;else{if(!(t>0))return n;i=n-1}return-1},remove:function(e){var n=this.search(e);return n>=0&&this.array.splice(n,1),this}});return e.comparing=function(t,o){return new e(o,(function(e,o){return n(e[t],o[t])}))},e;function n(e,n){return e<n?-1:e>n?1:0}}();e.exports=a,void 0===(o=function(){return a}.call(n,t,n,e))||(e.exports=o)},x86X:function(e,n){e.exports=function(e){return null!=e&&null!=e.constructor&&"function"===typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}},xAGQ:function(e,n,t){"use strict";var o=t("xTJ+");e.exports=function(e,n,t){return o.forEach(t,(function(t){e=t(e,n)})),e}},"xTJ+":function(e,n,t){"use strict";var o=t("HSsa"),a=t("x86X"),i=Object.prototype.toString;function l(e){return"[object Array]"===i.call(e)}function r(e){return null!==e&&"object"===typeof e}function s(e){return"[object Function]"===i.call(e)}function c(e,n){if(null!==e&&"undefined"!==typeof e)if("object"!==typeof e&&(e=[e]),l(e))for(var t=0,o=e.length;t<o;t++)n.call(null,e[t],t,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.call(null,e[a],a,e)}e.exports={isArray:l,isArrayBuffer:function(e){return"[object ArrayBuffer]"===i.call(e)},isBuffer:a,isFormData:function(e){return"undefined"!==typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!==typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"===typeof e},isNumber:function(e){return"number"===typeof e},isObject:r,isUndefined:function(e){return"undefined"===typeof e},isDate:function(e){return"[object Date]"===i.call(e)},isFile:function(e){return"[object File]"===i.call(e)},isBlob:function(e){return"[object Blob]"===i.call(e)},isFunction:s,isStream:function(e){return r(e)&&s(e.pipe)},isURLSearchParams:function(e){return"undefined"!==typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"===typeof navigator||"ReactNative"!==navigator.product)&&("undefined"!==typeof window&&"undefined"!==typeof document)},forEach:c,merge:function e(){var n={};function t(t,o){"object"===typeof n[o]&&"object"===typeof t?n[o]=e(n[o],t):n[o]=t}for(var o=0,a=arguments.length;o<a;o++)c(arguments[o],t);return n},extend:function(e,n,t){return c(n,(function(n,a){e[a]=t&&"function"===typeof n?o(n,t):n})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},yK9s:function(e,n,t){"use strict";var o=t("xTJ+");e.exports=function(e,n){o.forEach(e,(function(t,o){o!==n&&o.toUpperCase()===n.toUpperCase()&&(e[n]=t,delete e[o])}))}},zCGq:function(e,n,t){"use strict";var o=t("qP80"),a=t.n(o),i=t("3ll/"),l=t("/Bp9"),r=t("qqId"),s=t("S8lS"),c=t("5/UN"),g=t("vst4"),u=t("N7SP"),d=t("sLGh"),m=t("tzDO"),p=t("gZub"),y=[];y.push(i),y.push(l),y.push(r),y.push(s),y.push(c),y.push(g),y.push(u),y.push(p),y.push(d),y.push(m);var h=y;n.a=function(e){a.a.install(e),h.forEach((function(e){var n=e.request,t=e.response;a.a.stubRequest("http://localhost:8081".concat(n.path),t)}))}},zuR4:function(e,n,t){"use strict";var o=t("xTJ+"),a=t("HSsa"),i=t("CgaS"),l=t("JEQr");function r(e){var n=new i(e),t=a(i.prototype.request,n);return o.extend(t,i.prototype,n),o.extend(t,n),t}var s=r(l);s.Axios=i,s.create=function(e){return r(o.merge(l,e))},s.Cancel=t("endd"),s.CancelToken=t("jfS+"),s.isCancel=t("Lmem"),s.all=function(e){return Promise.all(e)},s.spread=t("DfZB"),e.exports=s,e.exports.default=s}}]);